{"version":3,"sources":["Lib/Authentication.js","Components/PrivateRoute/index.js","Components/DragAndDropUpload/index.js","Lib/classNameBuilders.js","Components/SelectableList/SelectableListItem.js","Components/SelectableList/SelectableList.js","Components/ExamList/ExamList.js","Graphql/containers/Mutations/Exame/salvarExame.js","Modules/Forms/CadastrarExame/index.js","Graphql/containers/Queries/Exame/listarExames.js","Graphql/containers/Mutations/Exame/salvarLaudo.js","Components/ExamDetail/index.js","Graphql/containers/Subscriptions/Exame/exameSalvo.js","Modules/Exames/examsList.js","Modules/Exames/filtro.js","Modules/Exames/index.js","Graphql/containers/Queries/Company/getCompanies.js","Modules/ExamesPorCliente/companiesList.js","Graphql/containers/Queries/Exame/listarExamesPorCliente.js","Modules/ExamesPorCliente/examsList.js","Modules/ExamesPorCliente/examsByCompany.js","Modules/ExamesPorCliente/index.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","testeVisual.js","Modules/Core/PasswordChange/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","error","removeItem","Component","component","componentCallback","rest","render","props","to","pathname","state","from","location","DragAndDropUpload","dragHandler","bind","onChangeHandler","filename","isOver","e","preventDefault","stopPropagation","console","log","type","this","setState","dataTransfer","items","length","file","files","updateFile","target","name","onChange","className","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","aria-hidden","id","multiple","required","htmlFor","React","useKeyOnly","val","key","SelectableListItem","onClickHandler","elm","onSelect","element","active","classes","cx","role","onClick","children","SelectableList","size","animated","divided","relaxed","selection","Item","EXAME_SCHEMA","gql","SalvarExameContainer","useMutation","FormCadastrarExame","handleFile","handleInputChange","submitHandle","nome","protocolo","dataExame","possuiMarcapasso","observacoes","exameFile","processando","validity","FileReader","fr","onloadend","readAsDataURL","evt","value","checked","mutation","variables","exame","then","result","onSubmited","status","data","salvarExame","message","catch","onSubmit","tabIndex","rows","LISTAR_EXAMES","query","EXAM_RESULT_SCHEMA","ExamDetail","onCloseHandler","onOpenHandler","onSubmitHandler","fileChangedHandler","examFile","event","onClose","onOpen","examResult","examResultFile","examId","examUrl","saveExamResult","canUploadFile","allowExamResultUpload","Modal","open","isOpen","Header","Content","readOnly","defaultChecked","SaveExamResult","refs","EXAME_SALVO_SUBSCRIPTION","ExamListComponent","subscribeForMore","user","subscribeToMore","document","companyId","updateQuery","prev","subscriptionData","newExam","savedExam","listarExames","find","msg","Object","assign","onLoadedHandler","onCloseDetailHandler","examDetailClickHandler","isExamDetailOpen","selectedExam","registriesCount","onLoaded","elemento","match","filter","selectedItem","loading","resultList","textFilter","filtrar","Transition","Group","animation","duration","map","item","isWaiting","dataCadastro","style","marginTop","width","lineHeight","resize","border","href","url","Filter","clearHandle","filterHandle","inputChangedHandle","protocolNumber","examDate","isReleased","isInProgress","onApplyFilter","Registries","buttonClickHandler","cadastrarExameCloseHandler","loadedHandler","cadastroFinalizadoHandler","openFilterHandler","closeFilterHandler","appliedFilterHandler","isCadastrarExameOpen","isCadastroFinalizadoModalOpen","isPopupFilterOpen","cadastraExameResult","isTabela","exibicaoTabela","total","Popup","on","position","trigger","Menu","qtdFiltro","Label","color","floating","circular","placeholder","getFilter","icon","content","GET_COMPANIES","CompaniesList","selectionChangedHandler","selectedValue","selectValue","selectedElement","prevState","onSelectionChanged","getCompanies","company","LISTAR_EXAMES_POR_CLIENTE","ExamList","onCloseExamDetailHandler","onSeeDetailClick","onSubmitResulHandler","refetch","ExamsByCompany","newlaudo","laudoSalvo","listarExamesPorCliente","selectedCompany","ListarExamesPorCliente","modoExibicao","companySelectionChanged","selectedCompanyId","getVariables","Login","handleSubmit","userName","password","isLogged","fetch","Enviroments","appUrl","method","credentials","headers","body","response","json","Error","Message","err","setItem","CheckAuth","Grid","textAlign","verticalAlign","height","Column","maxWidth","Form","Segment","Input","fluid","iconPosition","Button","header","Logoff","Teste","PasswordChange","oldPassword","newPassword","link","split","getMainDefinition","kind","operation","SubscriptionClient","wsUrl","reconnect","connectionParams","authToken","createUploadLink","uri","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","homeComponent","schema","ExamesPorCliente","exact","GraphQL","path","PrivateRoute","TesteVisual","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.b305e8f3.chunk.js","sourcesContent":["import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n\r\nexport default ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);","import React from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragHandler = this.dragHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.state = {\r\n            filename: '',\r\n            isOver: false\r\n        }\r\n    }\r\n\r\n    dragHandler(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(e.type)\r\n        if (e.type === 'drop' || e.type === 'dragleave')\r\n            this.setState({ isOver: false })\r\n        else\r\n            this.setState({ isOver: true })\r\n        if (e.type === 'drop' && e.dataTransfer.items.length === 1) {\r\n            var file = e.dataTransfer.files[0];\r\n            if (file)\r\n                this.updateFile(file);\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            filename: e.target.files[0].name\r\n        });\r\n        if (this.props.onChange)\r\n            this.props.onChange(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isOver ? 'upload-box has-advanced-upload is-dragover' : 'upload-box has-advanced-upload'}\r\n                onDrag={this.dragHandler}\r\n                onDragStart={this.dragHandler}\r\n                onDragEnd={this.dragHandler}\r\n                onDragOver={this.dragHandler}\r\n                onDragEnter={this.dragHandler}\r\n                onDragLeave={this.dragHandler}\r\n                onDrop={this.dragHandler}>\r\n                <i aria-hidden='true' className='huge upload icon'></i>\r\n                <div>\r\n                    <input id='file' type='file' multiple={false} required onChange={this.onChangeHandler} />\r\n                    <label htmlFor='file'>{\r\n                        this.state.filename ?\r\n                            (this.state.filename) :\r\n                            (<div>\r\n                                <strong>Selecione um arquivo</strong>\r\n                                <span> ou solte o aqui</span>\r\n                            </div>)\r\n                    }</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const useKeyOnly = (val,key)=> val && key;\r\n\r\n\r\nexport default useKeyOnly;","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes, { element } from \"prop-types\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\n\r\n\r\nclass SelectableListItem extends React.Component {\r\n    static propTypes = {\r\n        onSelect: PropTypes.func.isRequired,\r\n        active: PropTypes.bool,\r\n        className: PropTypes.string,\r\n        element: PropTypes.object.isRequired\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n\r\n        this.state = {\r\n            className: '',\r\n        }\r\n    }\r\n\r\n    onClickHandler(elm) {\r\n        if (this.props.onSelect && this.props.element)\r\n            this.props.onSelect(this.props.element);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            active,\r\n            className\r\n        } = this.props;\r\n\r\n        const classes = cx(\r\n            'item',\r\n            useKeyOnly(active, 'active'),\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='listitem' className={classes} onClick={this.onClickHandler}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SelectableListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\nimport { SIZES } from \"../../Lib\";\r\nimport SelectableListItem from \"./SelectableListItem\";\r\n\r\n\r\n\r\nclass SelectableList extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.array.isRequired,\r\n        size: PropTypes.oneOf(SIZES),\r\n        relaxed: PropTypes.bool,\r\n        animated: PropTypes.bool,\r\n        divided: PropTypes.bool,\r\n        selection: PropTypes.bool,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    static Item = SelectableListItem\r\n\r\n    render() {\r\n        const {\r\n            size,\r\n            className,\r\n            animated,\r\n            divided,\r\n            relaxed,\r\n            selection,\r\n        } = this.props\r\n\r\n        var classes = cx(\r\n            'ui',\r\n            useKeyOnly(animated, 'animated'),\r\n            useKeyOnly(divided, 'divided'),\r\n            useKeyOnly(relaxed, 'relaxed'),\r\n            useKeyOnly(selection, 'selection'),\r\n            size,\r\n            'list',\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='list' className={classes} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectableList","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport './index.css';\r\n\r\nexport class ExamList extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.data)\r\n            return (\r\n                <div className='ui doubling four stackable tiny cards'>\r\n                    <Transition.Group animation='fade left' duration='1000'>\r\n                        {this.props.data.map(item =>\r\n                            <div key={item.id} className='ui yellow card'>\r\n                                <div className='content'>\r\n                                    <div className='header'>\r\n                                        <div className='light label inline'>\r\n                                            <label>Protocolo:</label>\r\n                                            <div>{item.protocolo}</div>\r\n                                        </div>\r\n                                        <div className='label inline'>\r\n                                            {item.nome}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='meta'>\r\n                                        <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                    </div>\r\n                                    <div className='description bottom'>\r\n                                        {\r\n                                            this.props.laudoUrl ? <a href={this.props.laudoUrl}>Baixar Laudo</a> : <a href={item.exameUrl}>Baixar Exame</a>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className='extra content'>\r\n                                    <button className='ui primary small button btn-default'>Ver</button>\r\n                                    {\r\n                                        this.props.saveExamResult && item.status === 0 &&\r\n                                        (<button className='ui small button btn-default'>Remover</button>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Transition.Group>\r\n\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n}","import gql from \"graphql-tag\";\r\nimport { useMutation } from \"react-apollo\";\r\n\r\nvar EXAME_SCHEMA = gql(`\r\n    mutation salvarExame($exame: ExameInput!){\r\n        salvarExame(exame: $exame){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n        }\r\n    }\r\n`);\r\n\r\nconst SalvarExameContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SalvarExameContainer ;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { DragAndDropUpload } from \"../../../Components\";\r\nimport SalvarExameContainer from \"../../../Graphql/containers/Mutations/Exame/salvarExame\";\r\n\r\nclass FormCadastrarExame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            protocolo: '',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null,\r\n            processando: false\r\n        }\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            processando: true\r\n        });\r\n        this.props.mutation({\r\n            variables: {\r\n                exame:\r\n                {\r\n                    exameFile: this.state.exameFile,\r\n                    protocolo: this.state.protocolo,\r\n                    dataExame: this.state.dataExame,\r\n                    nome: this.state.nome,\r\n                    possuiMarcapasso: this.state.possuiMarcapasso,\r\n                    observacoes: this.state.observacoes\r\n                }\r\n            }\r\n        }).then((result) => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: result.data.salvarExame,\r\n                    message: `Novo cadastro de exame para ${this.state.nome} finalizado com sucesso.`\r\n                });\r\n        }).catch(error => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: error,\r\n                    message: 'Ocorreu um erro ao realizar o cadastro do exame.'\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className='ui form dimmable' onSubmit={this.submitHandle}>\r\n                    <div className={`ui inverted dimmer ${this.state.processando ? 'active' : ''}`}>\r\n                        <div className='content'>\r\n                            <div className='ui text loader'>Salvando Registro</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <DragAndDropUpload onChange={this.handleFile} />\r\n                    </div>\r\n                    <div className='fields'>\r\n                        <div className='inline fluid field'>\r\n                            <label>Protocolo:</label    >\r\n                            <input type='text' name='protocolo' required value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        <div className='inline field'>\r\n                            <label>Data Exame</label>\r\n                            <input name='dataExame' type='date' required value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Nome</label>\r\n                        <input className=\"ui input\" type='text' required name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                    <div className='field'>\r\n                        <div className=\"ui toggle checkbox\">\r\n                            <input type=\"checkbox\" tabIndex=\"0\" name='possuiMarcapasso' value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                            <label>Possui Marca-passo?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Outras Observações:</label>\r\n                        <textarea id='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ({ onSubmited }) => (<SalvarExameContainer>{(mutation, { ...props }) => <FormCadastrarExame onSubmited={onSubmited} mutation={mutation} {...props} />}</SalvarExameContainer>);","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nconst LISTAR_EXAMES = gql`\r\n    query listarExames($filter: ExamQuery){\r\n        listarExames(filter: $filter){\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome,\r\n            dataCadastro,\r\n            url,\r\n            possuiMarcapasso,\r\n            observacoes,\r\n            status\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children, variables }) => <Query variables={variables} query={LISTAR_EXAMES}>{children}</Query>","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nvar EXAM_RESULT_SCHEMA = gql(`\r\n    mutation saveExamResult($examResult: ExamResultInput!){\r\n        saveExamResult(examResult: $examResult)\r\n    }\r\n`);\r\n\r\nexport default ({ children }) => <Mutation mutation={EXAM_RESULT_SCHEMA} >{children}</Mutation>\r\n\r\n// const SalvarExameContainer = ({ children }) => {\r\n//     const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n//     return children(mutation, data);\r\n// }\r\n\r\n// export default SalvarExameContainer;","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport DragAndDropUpload from '../DragAndDropUpload';\r\nimport SaveExamResultContainer from \"../../Graphql/containers/Mutations/Exame/salvarLaudo\";\r\n\r\nexport class ExamDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onCloseHandler = this.onCloseHandler.bind(this);\r\n        this.onOpenHandler = this.onOpenHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            examFile: null\r\n        };\r\n    }\r\n\r\n    onCloseHandler(event, data) {\r\n        if (this.props.onClose)\r\n            this.props.onClose(event, data);\r\n    }\r\n\r\n    onOpenHandler(event, data) {\r\n        if (this.props.onOpen)\r\n            this.props.onOpen(event, data);\r\n    }\r\n\r\n    fileChangedHandler({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    examFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n        if (this.props.mutation) {\r\n            this.props.mutation({\r\n                variables: {\r\n                    examResult:\r\n                    {\r\n                        examResultFile: this.state.examFile,\r\n                        examId: this.props.id,\r\n                    }\r\n                }\r\n            }).then((result) => {\r\n                if (this.props.onSubmit)\r\n                    this.props.onSubmit({\r\n                        examUrl: result.data.saveExamResult,\r\n                        examId: this.props.id,\r\n                    });\r\n                this.onCloseHandler(null, null);\r\n            }).catch(error => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        var canUploadFile = this.props.mutation && this.props.allowExamResultUpload\r\n        return (\r\n            <Modal onClose={this.onCloseHandler} open={this.props.isOpen} onOpen={this.onOpenHandler}>\r\n                <Modal.Header>\r\n                    {canUploadFile ?\r\n                        <h3 className='ui header'>Enviar Laudo</h3> :\r\n                        <h3 className='ui header'>Detalhar Registro</h3>\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <form className='ui form' onSubmit={this.onSubmitHandler}>\r\n                        {\r\n                            canUploadFile &&\r\n                            <div className='field'>\r\n                                <DragAndDropUpload onChange={this.fileChangedHandler} />\r\n                            </div>\r\n                        }\r\n                        <div className='fields'>\r\n                            <div className='field'>\r\n                                <label>Protocolo: </label>\r\n                                <input type='text' className='ui input' readOnly value={this.props.protocolo} />\r\n                            </div>\r\n                            <div className='field'>\r\n                                <label>Data Exame</label>\r\n                                <input type='date' className='ui input' readOnly value={this.props.dataExame} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Nome</label>\r\n                            <input type='text' className='ui input' readOnly value={this.props.nome} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className=\"ui toggle checkbox\">\r\n                                <input type=\"checkbox\" className='hidden' tabIndex=\"0\" defaultChecked={this.props.possuiMarcapasso} />\r\n                                <label>Possui Marca-passo?</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <textarea readOnly value={this.props.observacoes} />\r\n                        </div>\r\n                        {canUploadFile && <button className='ui fluid positive button'>Salvar Laudo</button>}\r\n                    </form>\r\n                </Modal.Content>\r\n            </Modal>);\r\n    }\r\n}\r\n\r\nexport const SaveExamResult = ({ ...refs }) => <SaveExamResultContainer>{(mutation, { ...props }) => <ExamDetail mutation={mutation} {...refs} {...props} />}</SaveExamResultContainer>","import gql from \"graphql-tag\";\r\n\r\nexport const EXAME_SALVO_SUBSCRIPTION = gql`\r\n    subscription onSavedExam($id: ID){\r\n        savedExam(id: $id){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n            dataCadastro,\r\n            observacoes,\r\n            possuiMarcapasso,\r\n            url,\r\n            status\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Queries/Exame/listarExames\";\r\nimport { ExamDetail } from \"../../Components/ExamDetail\";\r\nimport { EXAME_SALVO_SUBSCRIPTION } from \"../../Graphql/containers/Subscriptions/Exame/exameSalvo\";\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n// import './index.css';\r\n\r\nexport class ExamListComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLoadedHandler(props?.data?.listarExames?.length ?? 0);\r\n        this.onCloseDetailHandler = this.onCloseDetailHandler.bind(this);\r\n        this.examDetailClickHandler = this.examDetailClickHandler.bind(this);\r\n        this.state = {\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        };\r\n        this.subscribeForMore();\r\n    }\r\n\r\n    subscribeForMore = () => {\r\n        var user = checkAuth()\r\n        if (user)\r\n            this.props.subscribeToMore({\r\n                document: EXAME_SALVO_SUBSCRIPTION,\r\n                variables: { id: user.companyId },//props.match.params.ID\r\n                updateQuery: (prev, { subscriptionData }) => {\r\n                    if (!subscriptionData.data)\r\n                        return prev;\r\n                    const newExam = subscriptionData.data.savedExam;\r\n                    if (!prev.listarExames.find((msg) => msg.id === newExam.id)) {\r\n                        return Object.assign({}, prev, {\r\n                            listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newExam])\r\n                        });\r\n                    } else\r\n                        return prev;\r\n                }\r\n            });\r\n    }\r\n\r\n    onLoadedHandler(registriesCount) {\r\n        if (this.props.onLoaded)\r\n            this.props.onLoaded(registriesCount);\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n    onCloseDetailHandler() {\r\n        this.setState({\r\n            isExamDetailOpen: false\r\n        })\r\n    }\r\n\r\n    examDetailClickHandler(selectedItem) {\r\n        this.setState({\r\n            isExamDetailOpen: true,\r\n            selectedExam: selectedItem\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.subscribeForMore();\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n        var resultList = this.props.data.listarExames\r\n        if (this.props.textFilter)\r\n            resultList = this.resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div>\r\n                <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                <div className='tabelaContainer'>\r\n                    <div className='ui doubling four stackable tiny cards'>\r\n                        <Transition.Group animation='fade left' duration='1000'>\r\n                            {resultList.map(item => {\r\n                                var isWaiting = item.status === 'WAITING';\r\n                                return (\r\n                                    <div key={item.id} className={`ui ${isWaiting ? 'yellow' : 'green'} card`}>\r\n                                        <div className='content'>\r\n                                            <div className='header'>\r\n                                                <div className='light label inline'>\r\n                                                    <label>Protocolo:</label>\r\n                                                    <div>{item.protocolo}</div>\r\n                                                </div>\r\n                                                <div className='label inline'>\r\n                                                    {item.nome}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className='meta'>\r\n                                                <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                            </div>\r\n                                            <div className='description bottom'>\r\n                                                <div className='ui label'>\r\n                                                    Possui marcapasso:\r\n                                            <i aria-hidden='true' className={`${item.possuiMarcapasso ? 'green check' : 'red close'} icon`} />\r\n                                                </div>\r\n                                                <textarea rows='3' readOnly value={item.observacoes} style={{ marginTop: '10px', width: '100%', lineHeight: '1.2857', resize: 'none', border: 'none' }} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='extra content'>\r\n                                            <div className='ui bottom attached buttons'>\r\n                                                <button className={`ui primary small button btn-default'`} onClick={() => this.examDetailClickHandler(item)}>Detalhar</button>\r\n                                                {!isWaiting && <a href={item.url} className='ui secondary small button btn-default'>Acessar Laudo</a>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                            })}\r\n                        </Transition.Group>\r\n                        <ExamDetail onClose={this.onCloseDetailHandler} {...this.state.selectedExam} isOpen={this.state.isExamDetailOpen} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ({ ...refs }) => <ListarExamesContainer variables={refs.variables}>{({ ...props }) => <ExamListComponent {...refs} {...props} />}</ListarExamesContainer>","import React from 'react';\r\n\r\nexport class Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearHandle = this.clearHandle.bind(this);\r\n        this.filterHandle = this.filterHandle.bind(this);\r\n        this.inputChangedHandle = this.inputChangedHandle.bind(this);\r\n        this.state = {\r\n            protocolNumber: props.protocolNumber ?? '',\r\n            name: props.name ?? '',\r\n            examDate: props.examDate ?? '',\r\n            isReleased: props.isReleased ?? false,\r\n            isInProgress: props.isInProgress ?? false\r\n        };\r\n    }\r\n\r\n    inputChangedHandle(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    clearHandle() {\r\n        this.setState({\r\n            protocolNumber: '',\r\n            name: '',\r\n            examDate: '',\r\n            isReleased: false,\r\n            isInProgress: false\r\n        })\r\n    }\r\n\r\n    filterHandle() {\r\n        if (this.props.onApplyFilter)\r\n            this.props.onApplyFilter(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ui card'>\r\n                <div className='content'>\r\n                    <form className='ui form'>\r\n                        <div className='field'>\r\n                            <label>Protocolo</label>\r\n                            <input type='text' name='protocolNumber' value={this.state.protocolNumber} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Nome</label>\r\n                            <input type='text' name='name' value={this.state.name} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Data Exame</label>\r\n                            <input type='date' name='examDate' value={this.state.examDate} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='ui toggle checkbox'>\r\n                                <input type='checkbox' tabIndex='0' name='isReleased' checked={this.state.isReleased} onChange={this.inputChangedHandle} />\r\n                                <label>Liberado</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='ui toggle checkbox'>\r\n                                <input type='checkbox' tabIndex='0' name='isInProgress' checked={this.state.isInProgress} onChange={this.inputChangedHandle} />\r\n                                <label>Em andamento</label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='extra content'>\r\n                    <button className='ui primary button' onClick={this.clearHandle}>Limpar</button>\r\n                    <button className='ui primary button' onClick={this.filterHandle}>Aplicar Filtro</button>\r\n                </div>\r\n            </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport { Modal, Header, Menu, Popup, Label, Transition } from \"semantic-ui-react\";\r\nimport FormCadastrarExame from \"../Forms/CadastrarExame\";\r\nimport './examesList.css'\r\n//import { ExamList } from \"../../Components\";\r\nimport ExamList from \"./examsList\";\r\nimport { Filter } from \"./filtro\";\r\nexport class Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonClickHandler = this.buttonClickHandler.bind(this);\r\n        this.cadastrarExameCloseHandler = this.cadastrarExameCloseHandler.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.loadedHandler = this.loadedHandler.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.cadastroFinalizadoHandler = this.cadastroFinalizadoHandler.bind(this);\r\n        this.openFilterHandler = this.openFilterHandler.bind(this);\r\n        this.closeFilterHandler = this.closeFilterHandler.bind(this);\r\n        this.appliedFilterHandler = this.appliedFilterHandler.bind(this);\r\n        this.state = {\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: false,\r\n            isPopupFilterOpen: false,\r\n            filter: {},\r\n            textFilter: '',\r\n            cadastraExameResult: null\r\n        };\r\n    }\r\n\r\n    buttonClickHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: !this.state.isCadastrarExameOpen\r\n        });\r\n    }\r\n    cadastrarExameCloseHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: false\r\n        });\r\n    }\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(result) {\r\n        this.setState({\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: true,\r\n            cadastraExameResult: result\r\n        });\r\n    }\r\n\r\n    cadastroFinalizadoHandler() {\r\n        this.setState({\r\n            isCadastroFinalizadoModalOpen: false\r\n        })\r\n    }\r\n\r\n    openFilterHandler() {\r\n        this.setState({\r\n            isPopupFilterOpen: true\r\n        })\r\n    }\r\n    closeFilterHandler() {\r\n        this.setState({\r\n            isPopupFilterOpen: false\r\n        })\r\n    }\r\n\r\n    appliedFilterHandler(filter) {\r\n        this.setState({\r\n            isPopupFilterOpen: false,\r\n            filter: filter\r\n        });\r\n    }\r\n    loadedHandler(registriesCount) {\r\n        this.setState({\r\n            registriesCount: registriesCount\r\n        });\r\n    }\r\n\r\n    qtdFiltro() {\r\n        var total = 0;\r\n        if (this.state.filter.name)\r\n            total++;\r\n        if (this.state.filter.protocolNumber)\r\n            total++;\r\n        if (this.state.filter.examDate)\r\n            total++;\r\n        if (this.state.filter.isReleased)\r\n            total++;\r\n        if (this.state.filter.isInProgress)\r\n            total++;\r\n        return total;\r\n    }\r\n\r\n    getFilter() {\r\n        var status = [];\r\n        if (this.state.filter.isInProgress)\r\n            status = Object.assign([], status, [...status, 'WAITING'])\r\n            if (this.state.filter.isReleased)\r\n            status = Object.assign([], status, [...status, 'READY'])\r\n        return {\r\n            filter: {\r\n                protocolNumber: this.state.filter.protocolNumber,\r\n                name: this.state.filter.name,\r\n                examDate: this.state.filter.examDate,\r\n                status: status\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <a className=\"item\" onClick={this.buttonClickHandler}>\r\n                        <i aria-hidden=\"true\" className=\"add icon\"></i>\r\n                        Novo Exame\r\n                    </a>\r\n                    <div className='right menu'>\r\n                        {/* <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item> */}\r\n                        <Popup\r\n                            on='click'\r\n                            onOpen={this.openFilterHandler}\r\n                            onClose={this.closeFilterHandler}\r\n                            open={this.state.isPopupFilterOpen}\r\n                            position='bottom right'\r\n                            trigger={(\r\n                                <Menu.Item active={this.state.isPopupFilterOpen}>\r\n                                    <i className='filter icon' />\r\n                                    {this.qtdFiltro() > 0 &&\r\n                                        < Popup\r\n                                            trigger={\r\n                                                <Label color='teal' floating circular>{this.qtdFiltro()}</Label>}>\r\n                                            {this.qtdFiltro()}\r\n                                        </Popup>\r\n                                    }\r\n\r\n                                </Menu.Item>\r\n                            )}>\r\n                            <Filter {...this.state.filter} onApplyFilter={this.appliedFilterHandler} />\r\n                        </Popup>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Protocolo / Nome' name='textFilter' value={this.state.textFilter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui segment'>\r\n                    <ExamList variables={this.getFilter()} textFilter={this.state.textFilter} onLoaded={this.loadedHandler} />\r\n                </div>\r\n                <Modal onClose={this.cadastrarExameCloseHandler} open={this.state.isCadastrarExameOpen}>\r\n                    <Header icon='upload' content=\"Cadastrar novo exame\" />\r\n                    <Modal.Content>\r\n                        <FormCadastrarExame onSubmited={this.submitHandle} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <Modal onClose={this.cadastroFinalizadoHandler} open={this.state.isCadastroFinalizadoModalOpen}>\r\n                    <Header icon={this.state?.cadastraExameResult?.status === 'Sucesso' ? 'green icon check' : 'red icon thumbs down'}></Header>\r\n                    <Modal.Content>\r\n                        <div>\r\n                            {this.state.cadastraExameResult?.message}\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// export default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nconst GET_COMPANIES = gql`\r\n    query getCompanies{\r\n        getCompanies{\r\n            id\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={GET_COMPANIES}>{children}</Query>","import React from \"react\";\r\nimport GetCompaniesContainer from \"../../Graphql/containers/Queries/Company/getCompanies\";\r\nimport { SelectableList } from \"../../Components\";\r\n\r\nclass CompaniesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionChangedHandler = this.selectionChangedHandler.bind(this);\r\n        this.state = {\r\n            selectedValue: this.props.selectValue\r\n        }\r\n    }\r\n\r\n    selectionChangedHandler(selectedElement) {\r\n        // if (selectedElement.id)\r\n        //     this.setState({ selectedValue: selectedElement.id });\r\n        if (selectedElement.id)\r\n            this.setState((prevState) => ({\r\n                selectedValue: (prevState.selectedValue === selectedElement.id ? null : selectedElement.id)\r\n            }));\r\n        if (this.props.onSelectionChanged)\r\n            this.props.onSelectionChanged(this.state.selectedValue === selectedElement.id ? null : selectedElement)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        return (\r\n            <div>\r\n                <SelectableList animated divided relaxed size='huge' selection>\r\n                    {this.props.data.getCompanies.map(company =>\r\n                        <SelectableList.Item key={company.id} element={company} active={this.state.selectedValue === company.id} onSelect={this.selectionChangedHandler} >\r\n                            {company.name}\r\n                        </SelectableList.Item>)}\r\n                </SelectableList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...rest }) => (<GetCompaniesContainer>{({ ...props }) => <CompaniesList {...props} {...rest} />}</GetCompaniesContainer>)","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nvar LISTAR_EXAMES_POR_CLIENTE = gql`\r\n    query listarExamesPorCliente($filter: ExamByCompanyQuery){\r\n        listarExamesPorCliente(filter: $filter){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame,\r\n            dataCadastro,\r\n            observacoes,\r\n            possuiMarcapasso,\r\n            url,           \r\n            status\r\n        }\r\n    }`\r\n\r\nexport default ({ children, variables }) => <Query variables={variables} query={LISTAR_EXAMES_POR_CLIENTE}>{children}</Query>","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport { SaveExamResult } from \"../../Components/ExamDetail\";\r\n\r\nexport class ExamList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCloseExamDetailHandler = this.onCloseExamDetailHandler.bind(this);\r\n        this.onSeeDetailClick = this.onSeeDetailClick.bind(this);\r\n        this.onSubmitResulHandler = this.onSubmitResulHandler.bind(this);\r\n        this.state = {\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        }\r\n    }\r\n\r\n    onCloseExamDetailHandler() {\r\n        this.setState({\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        });\r\n    }\r\n\r\n    onSubmitResulHandler() {\r\n        if (this.props.refetch)\r\n            this.props.refetch(this.props.variables ?? null);\r\n    }\r\n\r\n    onSeeDetailClick(selectedExam) {\r\n        this.setState({\r\n            isExamDetailOpen: true,\r\n            selectedExam: selectedExam\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data)\r\n            return (\r\n                <div className='ui doubling four stackable tiny cards'>\r\n                    <Transition.Group animation='fade left' duration='1000'>\r\n                        {this.props.data.map(item => {\r\n                            var isWaiting = item.status === 'WAITING';\r\n                            return (\r\n                                <div key={item.id} className={`ui ${isWaiting ? 'yellow' : 'green'} card`}>\r\n                                    <div className='content'>\r\n                                        <div className='header'>\r\n                                            <div className='light label inline'>\r\n                                                <label>Protocolo:</label>\r\n                                                <div>{item.protocolo}</div>\r\n                                            </div>\r\n                                            <div className='label inline'>\r\n                                                {item.nome}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className='meta'>\r\n                                            <div className='ui ribbon label'>{`Exame Realizado em ${item.dataExame}`}</div>\r\n                                        </div>\r\n                                        <div className='description bottom'>\r\n                                            <div className='ui label'>\r\n                                                Possui marcapasso:\r\n                                            <i aria-hidden='true' className={`${item.possuiMarcapasso ? 'green check' : 'red close'} icon`} />\r\n                                            </div>\r\n                                            <textarea rows='3' readOnly value={item.observacoes} style={{ marginTop: '10px', width: '100%', lineHeight: '1.2857', resize: 'none', border: 'none' }} />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='extra content'>\r\n                                        <div>\r\n                                            <button className='ui left attached primary small button btn-default' onClick={() => this.onSeeDetailClick(item)}>\r\n                                                {`${item.status === 'WAITING' ? 'Enviar Laudo' : 'Detalhar'} `\r\n                                                }</button>\r\n                                            {isWaiting && (<a href={item.url} className='ui right attached secondary small button'>Baixar Exame</a>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </Transition.Group>\r\n                    <SaveExamResult isOpen={this.state.isExamDetailOpen}\r\n                        allowExamResultUpload={this.state.selectedExam?.status === 'WAITING'}\r\n                        {...this.state.selectedExam}\r\n                        onClose={this.onCloseExamDetailHandler}\r\n                        onSubmit={this.onSubmitResulHandler} />\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ListarExamesPorClienteContainer from '../../Graphql/containers/Queries/Exame/listarExamesPorCliente';\r\nimport { EXAME_SALVO_SUBSCRIPTION } from '../../Graphql/containers/Subscriptions/Exame/exameSalvo';\r\nimport { ExamList } from './examsList';\r\nclass ExamsByCompany extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            filter: this.props.filter,\r\n        };\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        this.props.subscribeToMore({\r\n            document: EXAME_SALVO_SUBSCRIPTION,\r\n            variables: { id: this.props.variables.companyId },//props.match.params.ID\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                if (!subscriptionData.data)\r\n                    return prev;\r\n                const newlaudo = subscriptionData.data.laudoSalvo;\r\n                if (!prev.listarExames.find((msg) => msg.id === newlaudo.id)) {\r\n                    return Object.assign({}, prev, {\r\n                        listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newlaudo])\r\n                    });\r\n                } else\r\n                    return prev;\r\n            }\r\n        });\r\n\r\n        var resultList = this.props.data.listarExamesPorCliente;\r\n        if (this.state.filter && resultList)\r\n            resultList = resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div className='ui segment'>\r\n                <div>Total de Registros: {this.props.data.listarExamesPorCliente.length}</div>\r\n                <div>\r\n                    Empresa: {this.props.selectedCompany?.name ?? 'Todas'}\r\n                </div>\r\n                <div className='tabelaContainer'>\r\n                    <ExamList refetch={this.props.refetch} variables={this.props.variables} saveExamResult data={this.props.data.listarExamesPorCliente} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...refs }) => <ListarExamesPorClienteContainer variables={refs.variables}>{({ ...props }) => <ExamsByCompany {...props} {...refs} />}</ListarExamesPorClienteContainer>","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nimport CompaniesList from \"./companiesList\";\r\nimport ExamsByCompany from \"./examsByCompany\";\r\n\r\nclass ListarExamesPorCliente extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.companySelectionChanged = this.companySelectionChanged.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            selectedCompanyId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            exibicaoTabela: true,\r\n        });\r\n    }\r\n\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    companySelectionChanged(selectedCompany) {\r\n        this.setState({\r\n            selectedCompany: selectedCompany\r\n        });\r\n    }\r\n\r\n    getVariables(){\r\n        return {\r\n            filter:{\r\n                status: null,\r\n                dataExame: null,\r\n                protocolo: null,\r\n                companyId: this.state?.selectedCompany?.id ?? null,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui divided grid'>\r\n                    <div className='row'>\r\n                        <div className='four wide column'>\r\n                            <div className='ui segment'>\r\n                                <CompaniesList onSelectionChanged={this.companySelectionChanged} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='twelve wide column'>\r\n                            <ExamsByCompany variables={this.getVariables()} selectedCompany={this.state.selectedCompany} exibicaoTabela={this.state.exibicaoTabela} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => <ListarExamesPorCliente />\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/auth`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            ));\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('AuthToken')\r\n        this.props.componentCallback(false);\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import React from 'react';\r\nimport './testeVisual.css';\r\nimport { ExamList } from \"./Components\";\r\nimport { Transition, Button, List, Image } from \"semantic-ui-react\";\r\nimport _ from 'lodash'\r\n\r\n\r\n\r\nexport default class Teste extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearHandle = this.clearHandle.bind(this);\r\n        // this.filterHandle = this.filterHandle.bind(this);\r\n        this.inputChangedHandle = this.inputChangedHandle.bind(this);\r\n        // this.state = {\r\n        //     protocolNumber: props.protocolNumber,\r\n        //     name: props.name,\r\n        //     isReleased: props.isReleased,\r\n        //     isInProgress: props.isInProgress\r\n        // };\r\n        this.state = {\r\n            name: props.name ?? ''\r\n        }\r\n    }\r\n\r\n    inputChangedHandle(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    clearHandle() {\r\n        console.log(this.state);\r\n        this.setState({\r\n            protocolNumber: '',\r\n            name: '',\r\n            isReleased: false,\r\n            isInProgress: false\r\n        })\r\n    }\r\n\r\n    filterHandle() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type='text' name='name' value={this.state.name} onChange={this.inputChangedHandle}></input>\r\n                <input type='button' onClick={this.clearHandle} value='Limpar'></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport checkAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\n\r\nclass PasswordChange extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            oldPassword: '',\r\n            newPassword: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var user = checkAuth();\r\n            this.setState({\r\n                userName: user.userName\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/changepassword`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                    'authorization': localStorage.getItem('AuthToken')\r\n                },\r\n                body: `oldPassword=${this.state.oldPassword}&newPassword=${this.state.newPassword}`\r\n            }).then(response => {\r\n                if (response.status !== 200)\r\n                    throw new Error(response.Message)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Transition.Group animation='fade up' duration={800}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment>\r\n                                <Form.Input fluid icon='user' iconPosition='left' readOnly type='text' name='user' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Senha atual' type='password' name='oldPassword' value={this.state.oldPassword} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Nova senha' type='password' name='newPassword' value={this.state.newPassword} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Alterar Senha</Button>\r\n                                < Message error header='Error ao realizar login' content={this.state.error} />\r\n                            </Segment>\r\n                        </Form>\r\n                    </Transition.Group>\r\n                </Grid.Column >\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\nexport default PasswordChange;","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport Enviroments from \"../Lib/enviroments.json\";\r\n\r\nconst httpClient = () => createUploadLink({\r\n    uri: `${Enviroments.appUrl}/graphql`, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(`${Enviroments.wsUrl}/subscriptions`, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({ children }) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\nimport {Registries} from \"./Modules/Exames\"\r\nimport ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\n// import Home from \"./Modules/Core/Home\";\r\nimport TesteVisual from \"./testeVisual\";\r\nimport { PrivateRoute } from \"./Components\";\r\nimport PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nconst Test = () => (<div>Nero</div>)\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isAuthenticated: checkAuth() });\r\n    }\r\n\r\n    render() {\r\n        var user = checkAuth();\r\n        var homeComponent = user?.schema?.name === 'ADMIN' ? ExamesPorCliente : Registries;\r\n        return (\r\n            <Router>\r\n                {this.state.isAuthenticated && (\r\n                    <div className='ui pointing secondary menu'>\r\n                        <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                        {/* <NavLink className='item' exact to=\"/porcliente\">Por Cliente</NavLink> */}\r\n                        <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                        <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                        <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                    </div>)}\r\n                <GraphQL>\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        <PrivateRoute path='/teste' component={TesteVisual} />\r\n                        <PrivateRoute path='/passwordchange' component={PasswordChange} />\r\n                        {/* <PrivateRoute path=\"/porcliente\" component={ExamesPorCliente} /> */}\r\n                        <PrivateRoute path=\"/\" component={homeComponent} />\r\n                    </Switch>\r\n                </GraphQL>\r\n            </Router>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}