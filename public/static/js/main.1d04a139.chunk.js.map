{"version":3,"sources":["Graphql/containers/Exame/listarExames.js","Components/DragAndDropUpload/index.js","Modules/Forms/CadastrarExame/index.js","Modules/Registries/index.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","Modules/Core/Home/index.js","testeVisual.js","App.js","index.js"],"names":["LISTAR_EXAMES","gql","children","query","DragAndDropUpload","props","dragHandler","bind","handleFile","state","filename","isOver","e","preventDefault","stopPropagation","console","log","type","this","setState","dataTransfer","items","length","file","files","updateFile","target","validity","name","fileChanged","className","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","aria-hidden","id","multiple","onChange","htmlFor","React","Component","FormCadastrarExame","handleInputChange","nome","protocolo","dataExame","possuiMarcapasso","observacoes","exameFile","FileReader","fr","onloadend","readAsDataURL","evt","value","checked","onSubmit","submitHandle","tabIndex","rows","Registries","buttonClickHandler","modalCloseHandler","modoExibicao","filtrar","isOpen","exibicaoTabela","filter","isTabela","elemento","match","tabela","loading","error","resultList","data","listarExames","map","exame","key","Date","toISOString","substr","href","role","onClick","Menu","Item","active","placeholder","Modal","onClose","open","Header","icon","content","Content","Login","handleSubmit","animation","duration","userName","password","isLogged","fetch","method","credentials","headers","body","then","response","json","document","cookie","componentCallback","to","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Form","size","Segment","stacked","Input","fluid","iconPosition","Button","color","Transition","Group","graphQLErrors","i","message","Message","header","Logoff","result","Home","buttonClickHandle","checkAuth","Cookies","get","PrivateRoute","component","rest","render","pathname","from","location","App","isLoggedIn","exact","path","httpClient","createUploadLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.1d04a139.chunk.js","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nvar LISTAR_EXAMES = gql`\r\n    query listarExames{\r\n        listarExames{\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={LISTAR_EXAMES}>{children}</Query>","import React from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragHandler = this.dragHandler.bind(this);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.state = {\r\n            filename: '',\r\n            isOver: false\r\n        }\r\n    }\r\n\r\n    dragHandler(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(e.type)\r\n        if (e.type === 'drop' || e.type === 'dragleave')\r\n            this.setState({ isOver: false })\r\n        else\r\n            this.setState({ isOver: true })\r\n        if (e.type === 'drop' && e.dataTransfer.items.length === 1) {\r\n            var file = e.dataTransfer.files[0];\r\n            if (file)\r\n                this.updateFile(file);\r\n        }\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (file)\r\n            this.updateFile(file);\r\n    }\r\n\r\n    updateFile(file) {\r\n        this.setState({\r\n            filename: file.name\r\n        });\r\n        if (this.props.fileChanged)\r\n            this.props.fileChanged(file)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isOver ? 'upload-box has-advanced-upload is-dragover' : 'upload-box has-advanced-upload'}\r\n                onDrag={this.dragHandler}\r\n                onDragStart={this.dragHandler}\r\n                onDragEnd={this.dragHandler}\r\n                onDragOver={this.dragHandler}\r\n                onDragEnter={this.dragHandler}\r\n                onDragLeave={this.dragHandler}\r\n                onDrop={this.dragHandler}>\r\n                <i aria-hidden='true' className='huge upload icon'></i>\r\n                <div>\r\n                    <input id='file' type='file' multiple={false} onChange={this.handleFile} />\r\n                    <label htmlFor='file'>{\r\n                        this.state.filename ?\r\n                            (this.state.filename) :\r\n                            (<div>\r\n                                <strong>Selecione um arquivo</strong>\r\n                                <span> ou solte o aqui</span>\r\n                            </div>)\r\n                    }</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./index.css\";\r\nimport DragAndDropUpload from \"../../../Components/DragAndDropUpload\";\r\n\r\n\r\nexport default class FormCadastrarExame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            protocolo: '',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null\r\n        }\r\n    }\r\n\r\n    handleFile(file) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className='ui form' onSubmit={this.submitHandle}>\r\n                <div className='field'>\r\n                    <DragAndDropUpload fileChanged={this.handleFile} />\r\n                </div>\r\n                <div className='fields'>\r\n                    <div className='inline fluid field'>\r\n                        <label>Protocolo:</label    >\r\n                        <input type='text' name='protocolo' value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <div className='inline field'>\r\n                        <label>Data Exame</label>\r\n                        <input name='dataExame' type='date' value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                    </div>\r\n                </div>\r\n                <div className='field'>\r\n                    <label>Nome</label>\r\n                    <input className=\"ui input\" type='text' name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                </div>\r\n                <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                <div className='field'>\r\n                    <div className=\"ui toggle checkbox\">\r\n                        <input type=\"checkbox\" tabIndex=\"0\" value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                        <label>Possui Marca-passo?</label>\r\n                    </div>\r\n                </div>\r\n                <div className='field'>\r\n                    <label>Outras Observações:</label>\r\n                    <textarea id='info' name='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                </div>\r\n                <div className='field'>\r\n                    <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                </div>\r\n            </form>)\r\n    }\r\n}","import React from \"react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Exame/listarExames\";\r\nimport { Modal, Header, Menu } from \"semantic-ui-react\";\r\nimport FormCadastrarExame from \"../Forms/CadastrarExame\";\r\nimport './examesList.css'\r\n\r\nclass Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonClickHandler = this.buttonClickHandler.bind(this);\r\n        this.modalCloseHandler = this.modalCloseHandler.bind(this);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.state = {\r\n            isOpen: false,\r\n            exibicaoTabela: true,\r\n            filter: ''\r\n        };\r\n    }\r\n\r\n    buttonClickHandler() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    modalCloseHandler() {\r\n        this.setState({\r\n            isOpen: false\r\n        });\r\n    }\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        this.resultList = this.props.data.listarExames\r\n        if (this.state.filter)\r\n            this.resultList = this.resultList.filter(this.filtrar);\r\n        var tabela;\r\n        if (this.state.exibicaoTabela) {\r\n            tabela = (\r\n                <div className='ui doubling four stackable tiny cards'>\r\n                    {this.resultList.map(exame => (\r\n                        <div key={exame.id} className='ui yellow card'>\r\n                            <div className='content'>\r\n                                <div className='header'>{exame.protocolo} - {exame.nome}</div>\r\n                                <div className='meta'>\r\n                                    <div className='ui ribbon label'>{exame.dataExame ? exame.dataExame : (new Date().toISOString().substr(0, 10) + ' ' + new Date().toISOString().substr(11, 5))}</div>\r\n                                </div>\r\n                                <div className='description bottom'>\r\n                                    <a href={(true ? 'https://laudos.herokuapp.com/download?id=' : 'http://localhost:3000/download?id=') + exame.id + '&download=exame'}>Baixar Laudo</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className='extra content'>\r\n                                <button className='ui primary small button btn-default'>Remover</button>\r\n                                <button className='ui small button btn-default'>Remover</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>)\r\n        } else {\r\n            tabela = (\r\n                <div role='list' className='ui animated huge divided relaxed list'>\r\n                    {this.resultList.map(exame => (\r\n                        <div key={exame.id} role='listitem' className='item'>\r\n                            <i aria-hidden='true' className='chart bar icon large middle aligned'></i>\r\n                            <div className='content'>\r\n                                <a className='header'>{exame.protocolo} - {exame.nome}</a>\r\n                                <a className='description'>Teste</a>\r\n                                <button className='ui small button btn-default'>Remover</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <a className=\"item\" onClick={this.buttonClickHandler}>\r\n                        <i aria-hidden=\"true\" className=\"add icon\"></i>\r\n                        Novo Exame\r\n                    </a>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui segment'>\r\n                    <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                    <div className='tabelaContainer'>\r\n                        {tabela}\r\n                    </div>\r\n                </div>\r\n                <Modal onClose={this.modalCloseHandler} open={this.state.isOpen}>\r\n                    <Header icon='upload' content=\"Cadastrar novo exame\" />\r\n                    <Modal.Content>\r\n                        <FormCadastrarExame />\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: true,\r\n            animation: 'fade up',\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(true ? 'https://laudos.herokuapp.com/login' : 'http://localhost:3000/login',\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                document.cookie = 'signedin=true';\r\n                this.setState({ isLogged: true });\r\n                this.props.componentCallback(true);\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var result;\r\n        result =\r\n            !this.state.isLogged ? (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment stacked>\r\n                                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Login</Button>\r\n                            </Segment>\r\n                        </Form>\r\n                        <Transition.Group animation={this.state.animation} duration={this.state.duration}>\r\n                            {\r\n                                this.props.error &&\r\n                                this.props.error.graphQLErrors.map(({ message }, i) => (<Message\r\n                                    error\r\n                                    header='Action Forbidden'\r\n                                    content={message}\r\n                                />))\r\n                            }\r\n                        </Transition.Group>\r\n                    </Grid.Column>\r\n                </Grid>) : (<Redirect to='/' />)\r\n        return result;\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        fetch(true ? 'https://laudos.herokuapp.com/logoff' : '/ttp://localhost:3000/logoff',\r\n            {\r\n                method: 'post',\r\n                credentials: 'include'\r\n            }).then(result => result.json())\r\n            .then(data => {\r\n                document.cookie = 'signedin=false';\r\n                this.props.componentCallback(false);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n        this.buttonClickHandle = this.buttonClickHandle.bind(this);\r\n    }\r\n\r\n    buttonClickHandle() {\r\n        console.log(this.state.isOpen);\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                {/* <Modal trigger={<Button onClick={this.buttonClickHandle}>CLick aqui</Button>}>\r\n                    <Modal.Content>\r\n                        <Upload />\r\n                    </Modal.Content>\r\n                </Modal> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport './testeVisual.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>Teste</div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Registries from \"./Modules/Registries\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\nimport Home from \"./Modules/Core/Home\";\r\nimport Cookies from \"js-cookie\";\r\nimport TesteVisual from \"./testeVisual\";\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, NavLink } from 'react-router-dom'\r\n\r\n\r\nconst checkAuth = () => {\r\n    return Cookies.get('signedin') === 'true'\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isLoggedIn: checkAuth() };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({ isLoggedIn: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    {this.state.isLoggedIn && (\r\n                        <div className='ui pointing secondary menu'>\r\n                            <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                            {/* <NavLink className='item' to=\"/teste\">Testes</NavLink> */}\r\n                            <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                        </div>)}\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        {/* <PrivateRoute path='/teste' component={TesteVisual} /> */}\r\n                        <PrivateRoute path=\"/\" component={Registries} />\r\n\r\n                    </Switch>\r\n                </Router>\r\n                <Home />\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default App;","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst url = true ? \"https://laudos.herokuapp.com/graphql\" : \"http://localhost:3000/graphql\";\r\nconst httpClient = createUploadLink({ uri: url, credentials: 'include' });\r\n\r\nconst client = new ApolloClient({\r\n    //credentials: 'include',\r\n    link: httpClient,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nvar Client = () => (\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>\r\n)\r\n\r\nReactDom.render(<Client />, document.getElementById(\"root\"));"],"sourceRoot":""}