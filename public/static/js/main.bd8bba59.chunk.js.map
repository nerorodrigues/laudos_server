{"version":3,"sources":["Graphql/containers/Queries/Exame/listarExames.js","Lib/Authentication.js","Components/PrivateRoute/index.js","Components/DragAndDropUpload/index.js","Lib/classNameBuilders.js","Components/SelectableList/SelectableListItem.js","Components/SelectableList/SelectableList.js","Graphql/containers/Mutations/Exame/salvarExame.js","Modules/Forms/CadastrarExame/index.js","Graphql/containers/Subscriptions/Exame/exameSalvo.js","Modules/Exames/index.js","Graphql/containers/Queries/Company/getCompanies.js","Modules/ExamesPorCliente/companiesList.js","Graphql/containers/Queries/Exame/listarExamesPorCliente.js","Modules/ExamesPorCliente/examsByCompany.js","Modules/ExamesPorCliente/index.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","Modules/Core/PasswordChange/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["LISTAR_EXAMES","gql","children","query","secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","error","removeItem","Component","component","componentCallback","rest","render","props","to","pathname","state","from","location","DragAndDropUpload","dragHandler","bind","onChangeHandler","filename","isOver","e","preventDefault","stopPropagation","console","log","type","this","setState","dataTransfer","items","length","file","files","updateFile","target","name","onChange","className","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","aria-hidden","id","multiple","required","htmlFor","React","useKeyOnly","val","key","SelectableListItem","onClickHandler","elm","onSelect","element","active","classes","cx","role","onClick","SelectableList","size","animated","divided","relaxed","selection","Item","EXAME_SCHEMA","SalvarExameContainer","useMutation","FormCadastrarExame","handleFile","handleInputChange","submitHandle","nome","protocolo","dataExame","possuiMarcapasso","observacoes","exameFile","processando","validity","FileReader","fr","onloadend","readAsDataURL","evt","value","checked","mutation","variables","exame","then","result","onSubmited","status","data","salvarExame","message","catch","onSubmit","tabIndex","rows","EXAME_SALVO_SUBSCRIPTION","Registries","buttonClickHandler","cadastrarExameCloseHandler","modoExibicao","filtrar","cadastroFinalizadoHandler","isCadastrarExameOpen","isCadastroFinalizadoModalOpen","exibicaoTabela","filter","cadastraExameResult","subscribeToMore","document","updateQuery","prev","subscriptionData","newlaudo","laudoSalvo","listarExames","find","msg","Object","assign","isTabela","elemento","match","loading","resultList","Menu","placeholder","map","item","dataCadastro","laudoUrl","href","exameUrl","Modal","onClose","open","Header","icon","content","Content","GET_COMPANIES","CompaniesList","selectionChangedHandler","selectedValue","selectValue","selectedElement","onSelectionChanged","selectedItem","getCompanies","company","LISTAR_EXAMES_POR_CLIENTE","ExamsByCompany","refetch","listarExamesPorCliente","selectedCompany","refs","ListarExamesPorCliente","companySelectionChanged","selectedCompanyId","companyId","Login","handleSubmit","duration","userName","password","isLogged","fetch","Enviroments","appUrl","method","credentials","headers","body","response","json","Error","Message","err","setItem","CheckAuth","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Transition","Group","animation","Form","Segment","Input","fluid","iconPosition","Button","color","header","Logoff","PasswordChange","oldPassword","newPassword","user","readOnly","link","split","getMainDefinition","kind","operation","SubscriptionClient","wsUrl","reconnect","connectionParams","authToken","createUploadLink","uri","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","exact","GraphQL","path","PrivateRoute","ExamesPorCliente","Exames","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.bd8bba59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nconst LISTAR_EXAMES = gql`\r\n    query listarExames{\r\n        listarExames{\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome,\r\n            dataCadastro,\r\n            exameUrl,\r\n            laudoUrl\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={LISTAR_EXAMES}>{children}</Query>","import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n\r\nexport default ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);","import React from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragHandler = this.dragHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.state = {\r\n            filename: '',\r\n            isOver: false\r\n        }\r\n    }\r\n\r\n    dragHandler(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(e.type)\r\n        if (e.type === 'drop' || e.type === 'dragleave')\r\n            this.setState({ isOver: false })\r\n        else\r\n            this.setState({ isOver: true })\r\n        if (e.type === 'drop' && e.dataTransfer.items.length === 1) {\r\n            var file = e.dataTransfer.files[0];\r\n            if (file)\r\n                this.updateFile(file);\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            filename: e.target.files[0].name\r\n        });\r\n        if (this.props.onChange)\r\n            this.props.onChange(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isOver ? 'upload-box has-advanced-upload is-dragover' : 'upload-box has-advanced-upload'}\r\n                onDrag={this.dragHandler}\r\n                onDragStart={this.dragHandler}\r\n                onDragEnd={this.dragHandler}\r\n                onDragOver={this.dragHandler}\r\n                onDragEnter={this.dragHandler}\r\n                onDragLeave={this.dragHandler}\r\n                onDrop={this.dragHandler}>\r\n                <i aria-hidden='true' className='huge upload icon'></i>\r\n                <div>\r\n                    <input id='file' type='file' multiple={false} required onChange={this.onChangeHandler} />\r\n                    <label htmlFor='file'>{\r\n                        this.state.filename ?\r\n                            (this.state.filename) :\r\n                            (<div>\r\n                                <strong>Selecione um arquivo</strong>\r\n                                <span> ou solte o aqui</span>\r\n                            </div>)\r\n                    }</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const useKeyOnly = (val,key)=> val && key;\r\n\r\n\r\nexport default useKeyOnly;","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes, { element } from \"prop-types\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\n\r\n\r\nclass SelectableListItem extends React.Component {\r\n    static propTypes = {\r\n        onSelect: PropTypes.func.isRequired,\r\n        active: PropTypes.bool,\r\n        className: PropTypes.string,\r\n        element: PropTypes.object.isRequired\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n\r\n        this.state = {\r\n            className: '',\r\n        }\r\n    }\r\n\r\n    onClickHandler(elm) {\r\n        if (this.props.onSelect && this.props.element)\r\n            this.props.onSelect(this.props.element);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            active,\r\n            className\r\n        } = this.props;\r\n\r\n        const classes = cx(\r\n            'item',\r\n            useKeyOnly(active, 'active'),\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='listitem' className={classes} onClick={this.onClickHandler}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SelectableListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\nimport { SIZES } from \"../../Lib\";\r\nimport SelectableListItem from \"./SelectableListItem\";\r\n\r\n\r\n\r\nclass SelectableList extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.array.isRequired,\r\n        size: PropTypes.oneOf(SIZES),\r\n        relaxed: PropTypes.bool,\r\n        animated: PropTypes.bool,\r\n        divided: PropTypes.bool,\r\n        selection: PropTypes.bool,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    static Item = SelectableListItem\r\n\r\n    render() {\r\n        const {\r\n            size,\r\n            className,\r\n            animated,\r\n            divided,\r\n            relaxed,\r\n            selection,\r\n        } = this.props\r\n\r\n        var classes = cx(\r\n            'ui',\r\n            useKeyOnly(animated, 'animated'),\r\n            useKeyOnly(divided, 'divided'),\r\n            useKeyOnly(relaxed, 'relaxed'),\r\n            useKeyOnly(selection, 'selection'),\r\n            size,\r\n            'list',\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='list' className={classes} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectableList","import gql from \"graphql-tag\";\r\nimport { useMutation } from \"react-apollo\";\r\n\r\nvar EXAME_SCHEMA = gql(`\r\n    mutation salvarExame($exame: ExameInput!){\r\n        salvarExame(exame: $exame){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n        }\r\n    }\r\n`);\r\n\r\nconst SalvarExameContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SalvarExameContainer ;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { DragAndDropUpload } from \"../../../Components\";\r\nimport SalvarExameContainer from \"../../../Graphql/containers/Mutations/Exame/salvarExame\";\r\n\r\nclass FormCadastrarExame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            protocolo: '',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null,\r\n            processando: false\r\n        }\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            processando: true\r\n        });\r\n        this.props.mutation({\r\n            variables: {\r\n                exame:\r\n                {\r\n                    exameFile: this.state.exameFile,\r\n                    protocolo: this.state.protocolo,\r\n                    dataExame: this.state.dataExame,\r\n                    nome: this.state.nome,\r\n                    possuiMarcapasso: this.state.possuiMarcapasso,\r\n                    observacoes: this.state.observacoes\r\n                }\r\n            }\r\n        }).then((result) => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: result.data.salvarExame,\r\n                    message: `Novo cadastro de exame para ${this.state.nome} finalizado com sucesso.`\r\n                });\r\n        }).catch(error => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: error,\r\n                    message: 'Ocorreu um erro ao realizar o cadastro do exame.'\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className='ui form dimmable' onSubmit={this.submitHandle}>\r\n                    <div className={`ui inverted dimmer ${this.state.processando ? 'active' : ''}`}>\r\n                        <div className='content'>\r\n                            <div className='ui text loader'>Salvando Registro</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <DragAndDropUpload onChange={this.handleFile} />\r\n                    </div>\r\n                    <div className='fields'>\r\n                        <div className='inline fluid field'>\r\n                            <label>Protocolo:</label    >\r\n                            <input type='text' name='protocolo' required value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        <div className='inline field'>\r\n                            <label>Data Exame</label>\r\n                            <input name='dataExame' type='date' required value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Nome</label>\r\n                        <input className=\"ui input\" type='text' required name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                    <div className='field'>\r\n                        <div className=\"ui toggle checkbox\">\r\n                            <input type=\"checkbox\" tabIndex=\"0\" value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                            <label>Possui Marca-passo?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Outras Observações:</label>\r\n                        <textarea id='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ({ onSubmited }) => (<SalvarExameContainer>{(mutation, { ...props }) => <FormCadastrarExame onSubmited={onSubmited} mutation={mutation} {...props} />}</SalvarExameContainer>);","import gql from \"graphql-tag\";\r\n\r\nexport const EXAME_SALVO_SUBSCRIPTION = gql`\r\n    subscription onLaudoSalvo($id: ID){\r\n        laudoSalvo(id: $id){\r\n            id,\r\n            nome,\r\n            protocolo,\r\n            dataExame\r\n            dataCadastro,\r\n            exameUrl,\r\n            laudoUrl\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Queries/Exame/listarExames\";\r\nimport { Modal, Header, Menu } from \"semantic-ui-react\";\r\nimport FormCadastrarExame from \"../Forms/CadastrarExame\";\r\nimport './examesList.css'\r\nimport { EXAME_SALVO_SUBSCRIPTION } from \"../../Graphql/containers/Subscriptions/Exame/exameSalvo\";\r\n// import CardList from \"../../Components/CardList\";\r\nclass Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonClickHandler = this.buttonClickHandler.bind(this);\r\n        this.cadastrarExameCloseHandler = this.cadastrarExameCloseHandler.bind(this);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.cadastroFinalizadoHandler = this.cadastroFinalizadoHandler.bind(this);\r\n        this.state = {\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: false,\r\n            exibicaoTabela: true,\r\n            filter: '',\r\n            cadastraExameResult: null\r\n        };\r\n\r\n        this.props.subscribeToMore({\r\n            document: EXAME_SALVO_SUBSCRIPTION,\r\n            variables: { id: 1 },//props.match.params.ID\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                if (!subscriptionData.data)\r\n                    return prev;\r\n                const newlaudo = subscriptionData.data.laudoSalvo;\r\n                if (!prev.listarExames.find((msg) => msg.id === newlaudo.id)) {\r\n                    return Object.assign({}, prev, {\r\n                        listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newlaudo])\r\n                    });\r\n                } else\r\n                    return prev;\r\n            }\r\n        });\r\n    }\r\n\r\n    buttonClickHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: !this.state.isCadastrarExameOpen\r\n        });\r\n    }\r\n    cadastrarExameCloseHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: false\r\n        });\r\n    }\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n    submitHandle(result) {\r\n        this.setState({\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: true,\r\n            cadastraExameResult: result\r\n        });\r\n    }\r\n\r\n    cadastroFinalizadoHandler() {\r\n        this.setState({\r\n            isCadastroFinalizadoModalOpen: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        var resultList = this.props.data.listarExames\r\n        if (this.state.filter)\r\n            resultList = this.resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <a className=\"item\" onClick={this.buttonClickHandler}>\r\n                        <i aria-hidden=\"true\" className=\"add icon\"></i>\r\n                        Novo Exame\r\n                    </a>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui segment'>\r\n                    <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                    <div className='tabelaContainer'>\r\n                        {/* {this.state.exibicaoTabela? <CardList data={resultList} /> : <List data={resultList} />} */}\r\n                        <div className='ui doubling four stackable tiny cards'>\r\n                            {this.props.data.listarExames.map(item => (\r\n\r\n                                <div key={item.id} className='ui yellow card fade left'>\r\n                                    <div className='content'>\r\n                                        <div className='header'>\r\n                                            <div className='light label inline'>\r\n                                                <label>Protocolo:</label>\r\n                                                <div>{item.protocolo}</div>\r\n                                            </div>\r\n                                            <div className='label inline'>\r\n                                                {item.nome}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='meta'>\r\n                                            <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                        </div>\r\n                                        <div className='description bottom'>\r\n                                            {\r\n                                                item.laudoUrl ? <a href={item.laudoUrl}>Baixar Laudo</a> : <a href={item.exameUrl}>Baixar Exame</a>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='extra content'>\r\n                                        <button className='ui primary small button btn-default'>Ver</button>\r\n                                        <button className='ui small button btn-default'>Remover</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal onClose={this.cadastrarExameCloseHandler} open={this.state.isCadastrarExameOpen}>\r\n                    <Header icon='upload' content=\"Cadastrar novo exame\" />\r\n                    <Modal.Content>\r\n                        <FormCadastrarExame onSubmited={this.submitHandle} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <Modal onClose={this.cadastroFinalizadoHandler} open={this.state.isCadastroFinalizadoModalOpen}>\r\n                    <Header icon={this.state?.cadastraExameResult?.status === 'Sucesso' ? 'green icon check' : 'red icon thumbs down'}></Header>\r\n                    <Modal.Content>\r\n                        <div>\r\n                            {this.state.cadastraExameResult?.message}\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nconst GET_COMPANIES = gql`\r\n    query getCompanies{\r\n        getCompanies{\r\n            id\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={GET_COMPANIES}>{children}</Query>","import React from \"react\";\r\nimport GetCompaniesContainer from \"../../Graphql/containers/Queries/Company/getCompanies\";\r\nimport { SelectableList } from \"../../Components\";\r\n\r\nclass CompaniesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionChangedHandler = this.selectionChangedHandler.bind(this);\r\n        this.state = {\r\n            selectedValue: this.props.selectValue\r\n        }\r\n    }\r\n\r\n    selectionChangedHandler(selectedElement) {\r\n        if (selectedElement.id)\r\n            this.setState({ selectedValue: selectedElement.id });\r\n        if (this.props.onSelectionChanged)\r\n            this.props.onSelectionChanged(selectedElement)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        return (\r\n            <div>\r\n                <SelectableList animated divided relaxed size='huge' selection selectedValue={this.state.selectedItem}>\r\n                    {this.props.data.getCompanies.map(company =>\r\n                        <SelectableList.Item key={company.id} element={company} active={this.state.selectedValue === company.id} onSelect={this.selectionChangedHandler} >\r\n                            {company.name}\r\n                        </SelectableList.Item>)}\r\n                </SelectableList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...rest }) => (<GetCompaniesContainer>{({ ...props }) => <CompaniesList {...props} {...rest} />}</GetCompaniesContainer>)","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nvar LISTAR_EXAMES_POR_CLIENTE = gql`\r\n    query listarExamesPorCliente($companyId: ID){\r\n        listarExamesPorCliente(companyId: $companyId){\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome,\r\n            dataCadastro,\r\n            exameUrl,\r\n            laudoUrl\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children, variables }) => <Query variables={variables} query={LISTAR_EXAMES_POR_CLIENTE}>{children}</Query>","import React from \"react\";\r\nimport ListarExamesPorClienteContainer from \"../../Graphql/containers/Queries/Exame/listarExamesPorCliente\";\r\nimport { EXAME_SALVO_SUBSCRIPTION } from \"../../Graphql/containers/Subscriptions/Exame/exameSalvo\";\r\n\r\nclass ExamsByCompany extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            filter: '',\r\n        };\r\n        console.log(1);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.refetch()\r\n        console.log(1);\r\n        this.props.subscribeToMore({\r\n            document: EXAME_SALVO_SUBSCRIPTION,\r\n            variables: { id: 1 },//props.match.params.ID\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                if (!subscriptionData.data)\r\n                    return prev;\r\n                const newlaudo = subscriptionData.data.laudoSalvo;\r\n                if (!prev.listarExames.find((msg) => msg.id === newlaudo.id)) {\r\n                    return Object.assign({}, prev, {\r\n                        listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newlaudo])\r\n                    });\r\n                } else\r\n                    return prev;\r\n            }\r\n        });\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n        var resultList = this.props.data.listarExamesPorCliente;\r\n        if (this.state.filter && resultList)\r\n            resultList = resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div className='ui segment'>\r\n                <div>Total de Registros: {this.props.data.listarExamesPorCliente.length}</div>\r\n                <div>\r\n                    Empresa: {this.props.selectedCompany?.name ?? 'Todas'}\r\n                </div>\r\n                <div className='tabelaContainer'>\r\n                    <div className='ui doubling four stackable tiny cards'>\r\n                        {this.props.data.listarExamesPorCliente.map(item => (\r\n\r\n                            <div key={item.id} className='ui yellow card fade left'>\r\n                                <div className='content'>\r\n                                    <div className='header'>\r\n                                        <div className='light label inline'>\r\n                                            <label>Protocolo:</label>\r\n                                            <div>{item.protocolo}</div>\r\n                                        </div>\r\n                                        <div className='label inline'>\r\n                                            {item.nome}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='meta'>\r\n                                        <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                    </div>\r\n                                    <div className='description bottom'>\r\n                                        {\r\n                                            item.laudoUrl ? <a href={item.laudoUrl}>Baixar Laudo</a> : <a href={item.exameUrl}>Baixar Exame</a>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className='extra content'>\r\n                                    <button className='ui primary small button btn-default'>Ver</button>\r\n                                    <button className='ui small button btn-default'>Remover</button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...refs }) => <ListarExamesPorClienteContainer variables={refs.variables}>{({ ...props }) => <ExamsByCompany {...props} {...refs} />}</ListarExamesPorClienteContainer>","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nimport CompaniesList from \"./companiesList\";\r\nimport ExamsByCompany from \"./examsByCompany\";\r\n\r\nclass ListarExamesPorCliente extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.companySelectionChanged = this.companySelectionChanged.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            selectedCompanyId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            exibicaoTabela: true,\r\n        });\r\n    }\r\n\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    companySelectionChanged(selectedCompany) {\r\n        if (selectedCompany)\r\n            this.setState({\r\n                selectedCompany: selectedCompany\r\n            });\r\n    }\r\n\r\n    getVariableValues() {\r\n        return {\r\n            companyId: this.state?.selectedCompanyId ?? null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui divided grid'>\r\n                    <div className='row'>\r\n                        <div className='four wide column'>\r\n                            <div className='ui segment'>\r\n                                <CompaniesList onSelectionChanged={this.companySelectionChanged} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='twelve wide column'>\r\n                            <ExamsByCompany variables={{ 'companyId': this.state?.selectedCompany?.id }} selectedCompany={this.state.selectedCompany} exibicaoTabela={this.state.exibicaoTabela} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => <ListarExamesPorCliente />\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/auth`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            ));\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('AuthToken')\r\n        this.props.componentCallback(false);\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport checkAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\n\r\nclass PasswordChange extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            oldPassword: '',\r\n            newPassword: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var user = checkAuth();\r\n            this.setState({\r\n                userName: user.userName\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/changepassword`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                    'authorization': localStorage.getItem('AuthToken')\r\n                },\r\n                body: `oldPassword=${this.state.oldPassword}&newPassword=${this.state.newPassword}`\r\n            }).then(response => {\r\n                if (response.status !== 200)\r\n                    throw new Error(response.Message)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Transition.Group animation='fade up' duration={800}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment>\r\n                                <Form.Input fluid icon='user' iconPosition='left' readOnly type='text' name='user' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Senha atual' type='password' name='oldPassword' value={this.state.oldPassword} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Nova senha' type='password' name='newPassword' value={this.state.newPassword} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Alterar Senha</Button>\r\n                                < Message error header='Error ao realizar login' content={this.state.error} />\r\n                            </Segment>\r\n                        </Form>\r\n                    </Transition.Group>\r\n                </Grid.Column >\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\nexport default PasswordChange;","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport Enviroments from \"../Lib/enviroments.json\";\r\n\r\nconst httpClient = () => createUploadLink({\r\n    uri: `${Enviroments.appUrl}/graphql`, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(`${Enviroments.wsUrl}/subscriptions`, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({ children }) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\nimport Exames from \"./Modules/Exames\"\r\nimport ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\n// import Home from \"./Modules/Core/Home\";\r\n// import TesteVisual from \"./testeVisual\";\r\nimport { PrivateRoute } from \"./Components\";\r\nimport PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nconst Test = () => (<div>Nero</div>)\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isAuthenticated: checkAuth() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                {this.state.isAuthenticated && (\r\n                    <div className='ui pointing secondary menu'>\r\n                        <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                        <NavLink className='item' exact to=\"/porcliente\">Por Cliente</NavLink>\r\n                        <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                        <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                        <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                    </div>)}\r\n                <GraphQL>\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        {/* <PrivateRoute path='/teste' component={TesteVisual} /> */}\r\n                        <PrivateRoute path='/passwordchange' component={PasswordChange} />\r\n                        <PrivateRoute path=\"/porcliente\" component={ExamesPorCliente} />\r\n                        <PrivateRoute path=\"/\" component={Exames} />\r\n                    </Switch>\r\n                </GraphQL>\r\n            </Router>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}