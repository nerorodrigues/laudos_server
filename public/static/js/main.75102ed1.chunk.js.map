{"version":3,"sources":["Lib/Authentication.js","Modules/Core/Login/index.js","Modules/Core/Home/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","error","removeItem","Login","props","handleSubmit","bind","handleInputChange","state","duration","userName","password","isLogged","e","preventDefault","fetch","method","credentials","headers","body","this","then","response","status","json","Error","Message","err","setState","data","setItem","componentCallback","catch","evt","target","value","type","checked","name","CheckAuth","to","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Transition","Group","animation","Form","size","onSubmit","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","required","Button","color","header","content","React","Component","Home","isOpen","buttonClickHandle","console","log","link","split","query","getMainDefinition","kind","operation","SubscriptionClient","reconnect","connectionParams","authToken","createUploadLink","uri","children","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","className","exact","GraphQL","path","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.75102ed1.chunk.js","sourcesContent":["import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(false ? 'https://laudos.herokuapp.com/login' : 'http://localhost:3000/login',\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var result;\r\n        result =\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            )\r\n        return result;\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n        this.buttonClickHandle = this.buttonClickHandle.bind(this);\r\n    }\r\n\r\n    buttonClickHandle() {\r\n        console.log(this.state.isOpen);\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                {/* <Modal trigger={<Button onClick={this.buttonClickHandle}>CLick aqui</Button>}>\r\n                    <Modal.Content>\r\n                        <Upload />\r\n                    </Modal.Content>\r\n                </Modal> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\n\r\nconst url = false ? \"https://laudos.herokuapp.com/graphql\" : \"http://localhost:3000/graphql\";\r\nconst ws = false ? \"wss://laudos.herokuapp.com/subscriptions\" : \"ws://localhost:3000/subscriptions\";\r\nconst httpClient = () => createUploadLink({\r\n    uri: url, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(ws, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({children}) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n// import Exames from \"./Modules/Exames\"\r\n// import ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\n//import Logoff from \"./Modules/Core/Logoff\";\r\nimport Home from \"./Modules/Core/Home\";\r\n// import TesteVisual from \"./testeVisual\";\r\n// import PrivateRoute from \"./Components/PrivateRoute\";\r\n// import PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isAuthenticated: checkAuth() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Router>\r\n                    {this.state.isAuthenticated && (\r\n                        <div className='ui pointing secondary menu'>\r\n                            <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                            <NavLink className='item' exact to=\"/porcliente\">Por Cliente</NavLink>\r\n                            <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                            <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                            <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                        </div>)}\r\n                    <GraphQL>\r\n                        <Switch>\r\n                            <Route path='/login'>\r\n                                <Login componentCallback={this.componentCallback} />\r\n                            </Route>\r\n                            {/* <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                            <PrivateRoute path='/teste' component={TesteVisual} />\r\n                            <PrivateRoute path='/passwordchange' component={PasswordChange} />\r\n                            <PrivateRoute path=\"/porcliente\" component={ExamesPorCliente} />\r\n                            <PrivateRoute path=\"/\" component={Exames} /> */}\r\n                        </Switch>\r\n                    </GraphQL>\r\n                </Router>\r\n                <Home />\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}