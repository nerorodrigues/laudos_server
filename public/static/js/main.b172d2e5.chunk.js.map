{"version":3,"sources":["Lib/Authentication.js","Components/PrivateRoute/index.js","Components/DragAndDropUpload/index.js","Lib/classNameBuilders.js","Components/SelectableList/SelectableListItem.js","Components/SelectableList/SelectableList.js","Components/Loading/index.js","Components/ExamList/ExamList.js","Graphql/containers/Mutations/Exame/salvarExame.js","Modules/Forms/CadastrarExame/index.js","Graphql/containers/Queries/Exame/listarExames.js","Graphql/containers/Mutations/Exame/salvarLaudo.js","Components/ExamDetail/index.js","Graphql/containers/Subscriptions/Exame/exameSalvo.js","Modules/Exames/examsList.js","Modules/Exames/filtro.js","Modules/Exames/index.js","Graphql/containers/Queries/Company/getCompanies.js","Modules/ExamesPorCliente/companiesList.js","Graphql/containers/Queries/Exame/listarExamesPorCliente.js","Modules/ExamesPorCliente/examsList.js","Modules/ExamesPorCliente/examsByCompany.js","Modules/ExamesPorCliente/index.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","testeVisual.js","Modules/Core/PasswordChange/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","error","removeItem","Component","component","componentCallback","rest","render","props","to","pathname","state","from","location","DragAndDropUpload","dragHandler","bind","onChangeHandler","filename","isOver","e","preventDefault","stopPropagation","console","log","type","this","setState","dataTransfer","items","length","file","files","updateFile","target","name","onChange","className","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","aria-hidden","id","multiple","required","htmlFor","React","useKeyOnly","val","key","SelectableListItem","onClickHandler","elm","onSelect","element","active","classes","cx","role","onClick","children","SelectableList","size","animated","divided","relaxed","selection","Item","Loading","style","minHeight","message","EXAME_SCHEMA","gql","SalvarExameContainer","useMutation","FormCadastrarExame","handleFile","handleInputChange","submitHandle","nome","protocolo","dataExame","possuiMarcapasso","observacoes","exameFile","processando","validity","FileReader","fr","onloadend","readAsDataURL","evt","value","checked","mutation","variables","exame","then","result","onSubmited","status","data","salvarExame","catch","onSubmit","tabIndex","rows","LISTAR_EXAMES","query","EXAM_RESULT_SCHEMA","ExamDetail","onCloseHandler","onOpenHandler","onSubmitHandler","fileChangedHandler","examFile","event","onClose","onOpen","examResult","examResultFile","examId","examUrl","saveExamResult","canUploadFile","allowExamResultUpload","Modal","open","isOpen","Header","Content","readOnly","defaultChecked","SaveExamResult","refs","EXAME_SALVO_SUBSCRIPTION","ExamListComponent","subscribeForMore","user","subscribeToMore","document","companyId","updateQuery","prev","subscriptionData","newExam","savedExam","listarExames","find","msg","Object","assign","onLoadedHandler","onCloseDetailHandler","examDetailClickHandler","isExamDetailOpen","selectedExam","registriesCount","onLoaded","elemento","match","filter","selectedItem","loading","resultList","textFilter","filtrar","Transition","Group","animation","duration","map","item","isWaiting","dataCadastro","marginTop","width","lineHeight","resize","border","href","url","Filter","clearHandle","filterHandle","inputChangedHandle","protocolNumber","examDate","isReleased","isInProgress","onApplyFilter","Registries","buttonClickHandler","cadastrarExameCloseHandler","loadedHandler","cadastroFinalizadoHandler","openFilterHandler","closeFilterHandler","appliedFilterHandler","isCadastrarExameOpen","isCadastroFinalizadoModalOpen","isPopupFilterOpen","cadastraExameResult","isTabela","exibicaoTabela","total","height","Popup","on","position","trigger","Menu","qtdFiltro","Label","color","floating","circular","placeholder","getFilter","icon","content","GET_COMPANIES","CompaniesList","selectionChangedHandler","selectedValue","selectValue","selectedElement","prevState","onSelectionChanged","getCompanies","company","LISTAR_EXAMES_POR_CLIENTE","ExamList","onCloseExamDetailHandler","onSeeDetailClick","onSubmitResulHandler","refetch","ExamsByCompany","listarExamesPorCliente","companies","selectedCompany","ListarExamesPorCliente","modoExibicao","companySelectionChanged","selectedCompanyId","getVariables","Login","handleSubmit","userName","password","isLogged","fetch","Enviroments","appUrl","method","credentials","headers","body","response","json","Error","Message","err","setItem","CheckAuth","Grid","textAlign","verticalAlign","Column","maxWidth","Form","Segment","Input","fluid","iconPosition","Button","header","Logoff","MUTATION","QUERY","Teste","testMutation","test","PasswordChange","oldPassword","newPassword","link","split","getMainDefinition","kind","operation","SubscriptionClient","wsUrl","reconnect","connectionParams","authToken","createUploadLink","uri","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","intervalId","setInterval","clearInterval","homeComponent","schema","ExamesPorCliente","exact","GraphQL","path","PrivateRoute","TesteVisual","ReactDom","getElementById"],"mappings":"ijBAEMA,EAASC,8CAAYC,YAAZ,2LAKTC,EAAsB,CACxBC,UAAW,QACXC,OAAQ,UAGG,SAASC,IACpB,IAAIC,EAAQC,aAAaC,QAAQ,aACjC,IAAKF,EACD,OAAO,EACX,IACI,OAAOG,IAAaC,OAAOJ,EAAOP,EAAQG,GAC5C,MAAOS,GAGL,OAFIL,GACAC,aAAaK,WAAW,cACrB,GChBA,sBAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,kBAAsBC,EAA/C,wDACX,kBAAC,IAAD,iBAAWA,EAAX,CACIC,OAAQ,SAAAC,GAAK,OACTb,IACI,kBAACQ,EAAD,iBAAeK,EAAf,CAAsBH,kBAAmBA,KAErC,kBAAC,IAAD,CACII,GAAI,CACAC,SAAU,SACVC,MAAO,CAAEC,KAAMJ,EAAMK,kBCX5BC,G,mBAEjB,WAAYN,GAAQ,IAAD,8BACf,4CAAMA,KACDO,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKL,MAAQ,CACTO,SAAU,GACVC,QAAQ,GANG,E,yEAUPC,GAQR,GAPAA,EAAEC,iBACFD,EAAEE,kBACFC,QAAQC,IAAIJ,EAAEK,MACC,SAAXL,EAAEK,MAA8B,cAAXL,EAAEK,KACvBC,KAAKC,SAAS,CAAER,QAAQ,IAExBO,KAAKC,SAAS,CAAER,QAAQ,IACb,SAAXC,EAAEK,MAAmD,IAAhCL,EAAEQ,aAAaC,MAAMC,OAAc,CACxD,IAAIC,EAAOX,EAAEQ,aAAaI,MAAM,GAC5BD,GACAL,KAAKO,WAAWF,M,sCAIZX,GACZM,KAAKC,SAAS,CACVT,SAAUE,EAAEc,OAAOF,MAAM,GAAGG,OAE5BT,KAAKlB,MAAM4B,UACXV,KAAKlB,MAAM4B,SAAShB,K,+BAIxB,OACI,yBAAKiB,UAAWX,KAAKf,MAAMQ,OAAS,6CAA+C,iCAC/EmB,OAAQZ,KAAKX,YACbwB,YAAab,KAAKX,YAClByB,UAAWd,KAAKX,YAChB0B,WAAYf,KAAKX,YACjB2B,YAAahB,KAAKX,YAClB4B,YAAajB,KAAKX,YAClB6B,OAAQlB,KAAKX,aACb,uBAAG8B,cAAY,OAAOR,UAAU,qBAChC,6BACI,2BAAOS,GAAG,OAAOrB,KAAK,OAAOsB,UAAU,EAAOC,UAAQ,EAACZ,SAAUV,KAAKT,kBACtE,2BAAOgC,QAAQ,QACXvB,KAAKf,MAAMO,SACNQ,KAAKf,MAAMO,SACX,6BACG,wDACA,0D,GArDegC,IAAM/C,Y,gBCAtCgD,EAHI,SAACC,EAAIC,GAAL,OAAYD,GAAOC,GCkDvBC,E,YAnCX,WAAY9C,GAAQ,IAAD,8BACf,4CAAMA,KACD+C,eAAiB,EAAKA,eAAevC,KAApB,gBAEtB,EAAKL,MAAQ,CACT0B,UAAW,IALA,E,4EASJmB,GACP9B,KAAKlB,MAAMiD,UAAY/B,KAAKlB,MAAMkD,SAClChC,KAAKlB,MAAMiD,SAAS/B,KAAKlB,MAAMkD,W,+BAG7B,IAAD,EAIDhC,KAAKlB,MAFLmD,EAFC,EAEDA,OACAtB,EAHC,EAGDA,UAGEuB,EAAUC,IACZ,OACAV,EAAWQ,EAAQ,UACnBtB,GAGJ,OACI,yBAAKyB,KAAK,WAAWzB,UAAWuB,EAASG,QAASrC,KAAK6B,gBAClD7B,KAAKlB,MAAMwD,c,GArCKd,IAAM/C,WCGjC8D,E,iLAaQ,IAAD,EAQDvC,KAAKlB,MANL0D,EAFC,EAEDA,KACA7B,EAHC,EAGDA,UACA8B,EAJC,EAIDA,SACAC,EALC,EAKDA,QACAC,EANC,EAMDA,QACAC,EAPC,EAODA,UAGAV,EAAUC,IACV,KACAV,EAAWgB,EAAU,YACrBhB,EAAWiB,EAAS,WACpBjB,EAAWkB,EAAS,WACpBlB,EAAWmB,EAAW,aACtBJ,EACA,OACA7B,GAGJ,OACI,yBAAKyB,KAAK,OAAOzB,UAAWuB,GACvBlC,KAAKlB,MAAMwD,c,GApCCd,IAAM/C,WAA7B8D,EAWKM,KAAOjB,EA+BHW,Q,SCjDFO,G,OCEiBtB,IAAM/C,UDFpC,iLACc,IAAD,EACL,OACI,yBAAKkC,UAAU,aAAaoC,MAAO,CAAEC,UAAW,SAC5C,yBAAKrC,UAAU,gDACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,sBAAf,UAAqCX,KAAKlB,MAAMmE,eAAhD,QAA2D,qBANnF,GAA6BzB,IAAM/C,Y,0BEC/ByE,EAAeC,IAAI,gMAgBRC,EALc,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,EAClBe,YAAYH,GADM,mBAE3C,OAAOZ,EAFoC,YCTzCgB,E,YAEF,WAAYxE,GAAQ,IAAD,8BACf,4CAAMA,KACDyE,WAAa,EAAKA,WAAWjE,KAAhB,gBAClB,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBACzB,EAAKmE,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKL,MAAQ,CACTyE,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,kBAAkB,EAClBC,YAAa,GACbC,UAAW,KACXC,aAAa,GAZF,E,2EAgBkC,IAAD,WAAvCxD,OAA4BH,GAAW,EAA7B4D,SAA6B,cAAnB3D,MAAmB,OAChD,GAAI4D,YAAc7D,EAAM,CACpB,IAAI8D,EAAK,IAAID,WACbC,EAAGC,UAAY,WACX,EAAKnE,SAAS,CACV8D,UAAW1D,KAGf8D,GACAA,EAAGE,cAAchE,M,wCAIXiE,GACd,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,M,mCAIH7E,GAAI,IAAD,OACZA,EAAEC,iBACFK,KAAKC,SAAS,CACV+D,aAAa,IAEjBhE,KAAKlB,MAAM2F,SAAS,CAChBC,UAAW,CACPC,MACA,CACIZ,UAAW/D,KAAKf,MAAM8E,UACtBJ,UAAW3D,KAAKf,MAAM0E,UACtBC,UAAW5D,KAAKf,MAAM2E,UACtBF,KAAM1D,KAAKf,MAAMyE,KACjBG,iBAAkB7D,KAAKf,MAAM4E,iBAC7BC,YAAa9D,KAAKf,MAAM6E,gBAGjCc,MAAK,SAACC,GACD,EAAK/F,MAAMgG,YACX,EAAKhG,MAAMgG,WAAW,CAClBC,OAAQ,UACRF,OAAQA,EAAOG,KAAKC,YACpBhC,QAAQ,+BAAD,OAAiC,EAAKhE,MAAMyE,KAA5C,iCAEhBwB,OAAM,SAAA3G,GACD,EAAKO,MAAMgG,YACX,EAAKhG,MAAMgG,WAAW,CAClBC,OAAQ,UACRF,OAAQtG,EACR0E,QAAS,0D,+BAMrB,OACI,6BACI,0BAAMtC,UAAU,mBAAmBwE,SAAUnF,KAAKyD,cAC9C,yBAAK9C,UAAS,6BAAwBX,KAAKf,MAAM+E,YAAc,SAAW,KACtE,yBAAKrD,UAAU,WACX,yBAAKA,UAAU,kBAAf,uBAGR,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAmBD,SAAUV,KAAKuD,cAEtC,yBAAK5C,UAAU,UACX,yBAAKA,UAAU,sBACX,6CACA,2BAAOZ,KAAK,OAAOU,KAAK,YAAYa,UAAQ,EAACiD,MAAOvE,KAAKf,MAAM0E,UAAWjD,SAAUV,KAAKwD,qBAE7F,yBAAK7C,UAAU,gBACX,6CACA,2BAAOF,KAAK,YAAYV,KAAK,OAAOuB,UAAQ,EAACiD,MAAOvE,KAAKf,MAAM2E,UAAWlD,SAAUV,KAAKwD,sBAGjG,yBAAK7C,UAAU,SACX,uCACA,2BAAOA,UAAU,WAAWZ,KAAK,OAAOuB,UAAQ,EAACb,KAAK,OAAO8D,MAAOvE,KAAKf,MAAMyE,KAAMhD,SAAUV,KAAKwD,qBAExG,wBAAI7C,UAAU,sBAAd,+BACA,yBAAKA,UAAU,SACX,yBAAKA,UAAU,sBACX,2BAAOZ,KAAK,WAAWqF,SAAS,IAAI3E,KAAK,mBAAmB8D,MAAOvE,KAAKf,MAAM4E,iBAAkBnD,SAAUV,KAAKwD,oBAC/G,wDAGR,yBAAK7C,UAAU,SACX,4DACA,8BAAUS,GAAG,OAAOiE,KAAK,IAAI5E,KAAK,cAAc8D,MAAOvE,KAAKf,MAAM6E,YAAapD,SAAUV,KAAKwD,qBAElG,yBAAK7C,UAAU,SACX,2BAAOZ,KAAK,SAASY,UAAU,wBAAwB4D,MAAM,qB,GAhHpD/C,IAAM/C,WAuHxB,kBAAGqG,EAAH,EAAGA,WAAH,OAAqB,kBAAC,EAAD,MAAuB,SAACL,EAAD,OAAgB3F,EAAhB,2BAA4B,kBAAC,EAAD,eAAoBgG,WAAYA,EAAYL,SAAUA,GAAc3F,Q,sZCxH3J,IAAMwG,EAAgBnC,IAAH,KAgBJ,kBAAGb,EAAH,EAAGA,SAAUoC,EAAb,EAAaA,UAAb,OAA6B,kBAAC,IAAD,CAAOA,UAAWA,EAAWa,MAAOD,GAAgBhD,IChB5FkD,EAAqBrC,IAAI,2HAMd,kBAAGb,EAAH,EAAGA,SAAH,OAAkB,kBAAC,IAAD,CAAUmC,SAAUe,GAAsBlD,ICL9DmD,EAAb,YAEI,WAAY3G,GAAQ,IAAD,8BACf,4CAAMA,KACD4G,eAAiB,EAAKA,eAAepG,KAApB,gBACtB,EAAKqG,cAAgB,EAAKA,cAAcrG,KAAnB,gBACrB,EAAKsG,gBAAkB,EAAKA,gBAAgBtG,KAArB,gBACvB,EAAKuG,mBAAqB,EAAKA,mBAAmBvG,KAAxB,gBAC1B,EAAKL,MAAQ,CACT6G,SAAU,MAPC,EAFvB,4EAamBC,EAAOf,GACdhF,KAAKlB,MAAMkH,SACXhG,KAAKlB,MAAMkH,QAAQD,EAAOf,KAftC,oCAkBkBe,EAAOf,GACbhF,KAAKlB,MAAMmH,QACXjG,KAAKlB,MAAMmH,OAAOF,EAAOf,KApBrC,4CAuBiE,IAAD,WAAvCxE,OAA4BH,GAAW,EAA7B4D,SAA6B,cAAnB3D,MAAmB,OACxD,GAAI4D,YAAc7D,EAAM,CACpB,IAAI8D,EAAK,IAAID,WACbC,EAAGC,UAAY,WACX,EAAKnE,SAAS,CACV6F,SAAUzF,KAGd8D,GACAA,EAAGE,cAAchE,MAhCjC,sCAoCoBX,GAAI,IAAD,OACfA,EAAEC,iBACEK,KAAKlB,MAAM2F,UACXzE,KAAKlB,MAAM2F,SAAS,CAChBC,UAAW,CACPwB,WACA,CACIC,eAAgBnG,KAAKf,MAAM6G,SAC3BM,OAAQpG,KAAKlB,MAAMsC,OAG5BwD,MAAK,SAACC,GACD,EAAK/F,MAAMqG,UACX,EAAKrG,MAAMqG,SAAS,CAChBkB,QAASxB,EAAOG,KAAKsB,eACrBF,OAAQ,EAAKtH,MAAMsC,KAE3B,EAAKsE,eAAe,KAAM,SAC3BR,OAAM,SAAA3G,SAtDrB,+BA8DQ,IAAIgI,EAAgBvG,KAAKlB,MAAM2F,UAAYzE,KAAKlB,MAAM0H,sBACtD,OACI,kBAACC,EAAA,EAAD,CAAOT,QAAShG,KAAK0F,eAAgBgB,KAAM1G,KAAKlB,MAAM6H,OAAQV,OAAQjG,KAAK2F,eACvE,kBAACc,EAAA,EAAMG,OAAP,KACKL,EACG,wBAAI5F,UAAU,aAAd,gBACA,wBAAIA,UAAU,aAAd,sBAGR,kBAAC8F,EAAA,EAAMI,QAAP,KACI,0BAAMlG,UAAU,UAAUwE,SAAUnF,KAAK4F,iBAEjCW,GACA,yBAAK5F,UAAU,SACX,kBAAC,EAAD,CAAmBD,SAAUV,KAAK6F,sBAG1C,yBAAKlF,UAAU,UACX,yBAAKA,UAAU,SACX,8CACA,2BAAOZ,KAAK,OAAOY,UAAU,WAAWmG,UAAQ,EAACvC,MAAOvE,KAAKlB,MAAM6E,aAEvE,yBAAKhD,UAAU,SACX,6CACA,2BAAOZ,KAAK,OAAOY,UAAU,WAAWmG,UAAQ,EAACvC,MAAOvE,KAAKlB,MAAM8E,cAG3E,yBAAKjD,UAAU,SACX,uCACA,2BAAOZ,KAAK,OAAOY,UAAU,WAAWmG,UAAQ,EAACvC,MAAOvE,KAAKlB,MAAM4E,QAEvE,yBAAK/C,UAAU,SACX,yBAAKA,UAAU,sBACX,2BAAOZ,KAAK,WAAWY,UAAU,SAASyE,SAAS,IAAI2B,eAAgB/G,KAAKlB,MAAM+E,mBAClF,wDAGR,yBAAKlD,UAAU,SACX,8BAAUmG,UAAQ,EAACvC,MAAOvE,KAAKlB,MAAMgF,eAExCyC,GAAiB,4BAAQ5F,UAAU,4BAAlB,uBAtG1C,GAAgCa,IAAM/C,WA6GzBuI,EAAiB,SAAC,GAAD,IAAMC,EAAN,2BAAiB,kBAAC,EAAD,MAA0B,SAACxC,EAAD,OAAgB3F,EAAhB,2BAA4B,kBAAC,EAAD,eAAY2F,SAAUA,GAAcwC,EAAUnI,Q,mZChH5I,IAAMoI,GAA2B/D,IAAH,MCOxBgE,GAAb,YAEI,WAAYrI,GAAQ,IAAD,oCACf,4CAAMA,KAWVsI,iBAAmB,WACf,IAAIC,EAAOpJ,IACPoJ,GACA,EAAKvI,MAAMwI,gBAAgB,CACvBC,SAAUL,GACVxC,UAAW,CAAEtD,GAAIiG,EAAKG,WACtBC,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBAClB,IAAKA,EAAiB3C,KAClB,OAAO0C,EACX,IAAME,EAAUD,EAAiB3C,KAAK6C,UACtC,OAAKH,EAAKI,aAAaC,MAAK,SAACC,GAAD,OAASA,EAAI5G,KAAOwG,EAAQxG,MAK7CsG,EAJAO,OAAOC,OAAO,GAAIR,EAAM,CAC3BI,aAAcG,OAAOC,OAAO,GAAIR,EAAKI,aAAvB,UAAAG,OAAA,IAAAA,CAAyCP,EAAKI,cAA9C,CAA4DF,WAtB9F,EAAKO,gBAAL,iBAAqBrJ,QAArB,IAAqBA,OAArB,YAAqBA,EAAOkG,YAA5B,uBAAqB,EAAa8C,oBAAlC,aAAqB,EAA2B1H,cAAhD,QAA0D,GAC1D,EAAKgI,qBAAuB,EAAKA,qBAAqB9I,KAA1B,gBAC5B,EAAK+I,uBAAyB,EAAKA,uBAAuB/I,KAA5B,gBAC9B,EAAKL,MAAQ,CACTqJ,kBAAkB,EAClBC,aAAc,MAElB,EAAKnB,mBATU,EAFvB,6EAkCoBoB,GACRxI,KAAKlB,MAAM2J,UACXzI,KAAKlB,MAAM2J,SAASD,KApChC,8BAuCYE,GAEJ,OADaA,EAAS/E,UAAUgF,MAAM3I,KAAKf,MAAM2J,SAAWF,EAAShF,KAAKiF,MAAM3I,KAAKf,MAAM2J,UAxCnG,6CA6CQ5I,KAAKC,SAAS,CACVqI,kBAAkB,MA9C9B,6CAkD2BO,GACnB7I,KAAKC,SAAS,CACVqI,kBAAkB,EAClBC,aAAcM,MArD1B,+BAyDc,IAAD,OAEL,GAAI7I,KAAKlB,MAAMgK,QACX,OAAO,kBAAC,EAAD,MACN,GAAI9I,KAAKlB,MAAMP,MAChB,OAAO,wCACX,IAAIwK,EAAa/I,KAAKlB,MAAMkG,KAAK8C,aAIjC,OAHI9H,KAAKlB,MAAMkK,aACXD,EAAa/I,KAAK+I,WAAWH,OAAO5I,KAAKiJ,UAGzC,6BACI,oDAA0BjJ,KAAKlB,MAAMkG,KAAK8C,aAAa1H,QACvD,yBAAKO,UAAU,mBACX,yBAAKA,UAAU,yCACX,kBAACuI,EAAA,EAAWC,MAAZ,CAAkBC,UAAU,YAAYC,SAAS,QAC5CN,EAAWO,KAAI,SAAAC,GACZ,IAAIC,EAA4B,YAAhBD,EAAKxE,OACrB,OACI,yBAAKpD,IAAK4H,EAAKnI,GAAIT,UAAS,aAAQ6I,EAAY,SAAW,QAA/B,UACxB,yBAAK7I,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,6CACA,6BAAM4I,EAAK5F,YAEf,yBAAKhD,UAAU,gBACV4I,EAAK7F,OAId,yBAAK/C,UAAU,QACX,yBAAKA,UAAU,mBAAf,gCAA2D4I,EAAKE,gBAEpE,yBAAK9I,UAAU,sBACX,yBAAKA,UAAU,YAAf,qBAEJ,uBAAGQ,cAAY,OAAOR,UAAS,UAAK4I,EAAK1F,iBAAmB,cAAgB,YAA7C,YAE3B,8BAAUwB,KAAK,IAAIyB,UAAQ,EAACvC,MAAOgF,EAAKzF,YAAaf,MAAO,CAAE2G,UAAW,OAAQC,MAAO,OAAQC,WAAY,SAAUC,OAAQ,OAAQC,OAAQ,YAGtJ,yBAAKnJ,UAAU,iBACX,yBAAKA,UAAU,8BACX,4BAAQA,UAAS,uCAA0C0B,QAAS,kBAAM,EAAKgG,uBAAuBkB,KAAtG,aACEC,GAAa,uBAAGO,KAAMR,EAAKS,IAAKrJ,UAAU,yCAA7B,wBAMvC,kBAAC,EAAD,eAAYqF,QAAShG,KAAKoI,sBAA0BpI,KAAKf,MAAMsJ,aAA/D,CAA6E5B,OAAQ3G,KAAKf,MAAMqJ,2BA5GxH,GAAuC9G,IAAM/C,WAsH9B,mBAAMwI,EAAN,2BAAiB,kBAAC,EAAD,CAAuBvC,UAAWuC,EAAKvC,YAAY,gBAAM5F,EAAN,2BAAkB,kBAAC,GAAD,iBAAuBmI,EAAUnI,QC7HzHmL,GAAb,YACI,WAAYnL,GAAQ,IAAD,wCACf,4CAAMA,KACDoL,YAAc,EAAKA,YAAY5K,KAAjB,gBACnB,EAAK6K,aAAe,EAAKA,aAAa7K,KAAlB,gBACpB,EAAK8K,mBAAqB,EAAKA,mBAAmB9K,KAAxB,gBAC1B,EAAKL,MAAQ,CACToL,eAAc,UAAEvL,EAAMuL,sBAAR,QAA0B,GACxC5J,KAAI,UAAE3B,EAAM2B,YAAR,QAAgB,GACpB6J,SAAQ,UAAExL,EAAMwL,gBAAR,QAAoB,GAC5BC,WAAU,UAAEzL,EAAMyL,kBAAR,SACVC,aAAY,UAAE1L,EAAM0L,oBAAR,UAVD,EADvB,gFAeuBlG,GACf,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,MApBpB,oCAyBQvE,KAAKC,SAAS,CACVoK,eAAgB,GAChB5J,KAAM,GACN6J,SAAU,GACVC,YAAY,EACZC,cAAc,MA9B1B,qCAmCYxK,KAAKlB,MAAM2L,eACXzK,KAAKlB,MAAM2L,cAAczK,KAAKf,SApC1C,+BAwCQ,OACI,yBAAK0B,UAAU,WACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,WACZ,yBAAKA,UAAU,SACX,4CACA,2BAAOZ,KAAK,OAAOU,KAAK,iBAAiB8D,MAAOvE,KAAKf,MAAMoL,eAAgB3J,SAAUV,KAAKoK,sBAE9F,yBAAKzJ,UAAU,SACX,uCACA,2BAAOZ,KAAK,OAAOU,KAAK,OAAO8D,MAAOvE,KAAKf,MAAMwB,KAAMC,SAAUV,KAAKoK,sBAE1E,yBAAKzJ,UAAU,SACX,6CACA,2BAAOZ,KAAK,OAAOU,KAAK,WAAW8D,MAAOvE,KAAKf,MAAMqL,SAAU5J,SAAUV,KAAKoK,sBAElF,yBAAKzJ,UAAU,SACX,yBAAKA,UAAU,sBACX,2BAAOZ,KAAK,WAAWqF,SAAS,IAAI3E,KAAK,aAAa+D,QAASxE,KAAKf,MAAMsL,WAAY7J,SAAUV,KAAKoK,qBACrG,6CAGR,yBAAKzJ,UAAU,SACX,yBAAKA,UAAU,sBACX,2BAAOZ,KAAK,WAAWqF,SAAS,IAAI3E,KAAK,eAAe+D,QAASxE,KAAKf,MAAMuL,aAAc9J,SAAUV,KAAKoK,qBACzG,mDAKhB,yBAAKzJ,UAAU,iBACX,4BAAQA,UAAU,oBAAoB0B,QAASrC,KAAKkK,aAApD,UACA,4BAAQvJ,UAAU,oBAAoB0B,QAASrC,KAAKmK,cAApD,wBAxEpB,GAA4B3I,IAAM/C,WCKrBiM,GAAb,YACI,WAAY5L,GAAQ,IAAD,8BACf,4CAAMA,KACD6L,mBAAqB,EAAKA,mBAAmBrL,KAAxB,gBAC1B,EAAKsL,2BAA6B,EAAKA,2BAA2BtL,KAAhC,gBAClC,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBACzB,EAAKuL,cAAgB,EAAKA,cAAcvL,KAAnB,gBACrB,EAAKmE,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKwL,0BAA4B,EAAKA,0BAA0BxL,KAA/B,gBACjC,EAAKyL,kBAAoB,EAAKA,kBAAkBzL,KAAvB,gBACzB,EAAK0L,mBAAqB,EAAKA,mBAAmB1L,KAAxB,gBAC1B,EAAK2L,qBAAuB,EAAKA,qBAAqB3L,KAA1B,gBAC5B,EAAKL,MAAQ,CACTiM,sBAAsB,EACtBC,+BAA+B,EAC/BC,mBAAmB,EACnBxC,OAAQ,GACRI,WAAY,GACZqC,oBAAqB,MAjBV,EADvB,kFAuBQrL,KAAKC,SAAS,CACViL,sBAAuBlL,KAAKf,MAAMiM,yBAxB9C,mDA4BQlL,KAAKC,SAAS,CACViL,sBAAsB,MA7BlC,mCAiCiBI,GACTtL,KAAKC,SAAS,CACVsL,eAAgBD,MAnC5B,wCAsCsBhH,GACd,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,MA3CpB,mCA+CiBM,GACT7E,KAAKC,SAAS,CACViL,sBAAsB,EACtBC,+BAA+B,EAC/BE,oBAAqBxG,MAnDjC,kDAwDQ7E,KAAKC,SAAS,CACVkL,+BAA+B,MAzD3C,0CA8DQnL,KAAKC,SAAS,CACVmL,mBAAmB,MA/D/B,2CAmEQpL,KAAKC,SAAS,CACVmL,mBAAmB,MApE/B,2CAwEyBxC,GACjB5I,KAAKC,SAAS,CACVmL,mBAAmB,EACnBxC,OAAQA,MA3EpB,oCA8EkBJ,GACVxI,KAAKC,SAAS,CACVuI,gBAAiBA,MAhF7B,kCAqFQ,IAAIgD,EAAQ,EAWZ,OAVIxL,KAAKf,MAAM2J,OAAOnI,MAClB+K,IACAxL,KAAKf,MAAM2J,OAAOyB,gBAClBmB,IACAxL,KAAKf,MAAM2J,OAAO0B,UAClBkB,IACAxL,KAAKf,MAAM2J,OAAO2B,YAClBiB,IACAxL,KAAKf,MAAM2J,OAAO4B,cAClBgB,IACGA,IAhGf,kCAoGQ,IAAIzG,EAAS,GAKb,OAJI/E,KAAKf,MAAM2J,OAAO4B,eAClBzF,EAASkD,OAAOC,OAAO,GAAInD,EAAlB,UAAAkD,OAAA,IAAAA,CAA8BlD,GAA9B,CAAsC,cAC/C/E,KAAKf,MAAM2J,OAAO2B,aAClBxF,EAASkD,OAAOC,OAAO,GAAInD,EAAlB,UAAAkD,OAAA,IAAAA,CAA8BlD,GAA9B,CAAsC,YAC5C,CACH6D,OAAQ,CACJyB,eAAgBrK,KAAKf,MAAM2J,OAAOyB,eAClC5J,KAAMT,KAAKf,MAAM2J,OAAOnI,KACxB6J,SAAUtK,KAAKf,MAAM2J,OAAO0B,SAC5BvF,OAAQA,MA9GxB,+BAmHc,IAAD,MACL,OACI,yBAAKhC,MAAO,CAAE0I,OAAQ,QAClB,yBAAK9K,UAAU,WACX,uBAAGA,UAAU,OAAO0B,QAASrC,KAAK2K,oBAC9B,uBAAGxJ,cAAY,OAAOR,UAAU,aADpC,cAIA,yBAAKA,UAAU,cAOX,kBAAC+K,EAAA,EAAD,CACIC,GAAG,QACH1F,OAAQjG,KAAK+K,kBACb/E,QAAShG,KAAKgL,mBACdtE,KAAM1G,KAAKf,MAAMmM,kBACjBQ,SAAS,eACTC,QACI,kBAACC,EAAA,EAAKjJ,KAAN,CAAWZ,OAAQjC,KAAKf,MAAMmM,mBAC1B,uBAAGzK,UAAU,gBACZX,KAAK+L,YAAc,GAChB,kBAAEL,EAAA,EAAF,CACIG,QACI,kBAACG,EAAA,EAAD,CAAOC,MAAM,OAAOC,UAAQ,EAACC,UAAQ,GAAEnM,KAAK+L,cAC/C/L,KAAK+L,eAMtB,kBAAC,GAAD,iBAAY/L,KAAKf,MAAM2J,OAAvB,CAA+B6B,cAAezK,KAAKiL,yBAEvD,yBAAKtK,UAAU,QACX,yBAAKA,UAAU,iBACX,2BAAOZ,KAAK,OAAOqM,YAAY,mBAAmB3L,KAAK,aAAa8D,MAAOvE,KAAKf,MAAM+J,WAAYtI,SAAUV,KAAKwD,oBACjH,uBAAGrC,cAAY,OAAOR,UAAU,oBAKhD,yBAAKA,UAAU,aAAaoC,MAAO,CAACC,UAAW,SAC3C,kBAAC,GAAD,CAAU0B,UAAW1E,KAAKqM,YAAarD,WAAYhJ,KAAKf,MAAM+J,WAAYP,SAAUzI,KAAK6K,iBAE7F,kBAACpE,EAAA,EAAD,CAAOT,QAAShG,KAAK4K,2BAA4BlE,KAAM1G,KAAKf,MAAMiM,sBAC9D,kBAACtE,EAAA,EAAD,CAAQ0F,KAAK,SAASC,QAAQ,yBAC9B,kBAAC9F,EAAA,EAAMI,QAAP,KACI,kBAAC,EAAD,CAAoB/B,WAAY9E,KAAKyD,iBAG7C,kBAACgD,EAAA,EAAD,CAAOT,QAAShG,KAAK8K,0BAA2BpE,KAAM1G,KAAKf,MAAMkM,+BAC7D,kBAACvE,EAAA,EAAD,CAAQ0F,KAAkD,aAA5C,UAAAtM,KAAKf,aAAL,yBAAYoM,2BAAZ,eAAiCtG,QAAuB,mBAAqB,yBAC3F,kBAAC0B,EAAA,EAAMI,QAAP,KACI,uCACK7G,KAAKf,MAAMoM,2BADhB,aACK,EAAgCpI,gBA5K7D,GAAgCzB,IAAM/C,W,6KCHtC,IAAM+N,GAAgBrJ,IAAH,MASJ,mBAAGb,EAAH,EAAGA,SAAH,OAAkB,kBAAC,IAAD,CAAOiD,MAAOiH,IAAgBlK,ICTzDmK,G,YACF,WAAY3N,GAAQ,IAAD,8BACf,4CAAMA,KACD4N,wBAA0B,EAAKA,wBAAwBpN,KAA7B,gBAC/B,EAAKL,MAAQ,CACT0N,cAAe,EAAK7N,MAAM8N,aAJf,E,qFAQKC,GAChBA,EAAgBzL,IAChBpB,KAAKC,UAAS,SAAC6M,GAAD,MAAgB,CAC1BH,cAAgBG,EAAUH,gBAAkBE,EAAgBzL,GAAK,KAAOyL,EAAgBzL,OAE5FpB,KAAKlB,MAAMiO,oBACX/M,KAAKlB,MAAMiO,mBAAmB/M,KAAKf,MAAM0N,gBAAkBE,EAAgBzL,GAAK,KAAOyL,K,+BAGrF,IAAD,OACL,OAAI7M,KAAKlB,MAAMgK,QACJ,2CACF9I,KAAKlB,MAAMP,MACT,wCAGP,6BACI,kBAAC,EAAD,CAAgBkE,UAAQ,EAACC,SAAO,EAACC,SAAO,EAACH,KAAK,OAAOI,WAAS,GACzD5C,KAAKlB,MAAMkG,KAAKgI,aAAa1D,KAAI,SAAA2D,GAAO,OACrC,kBAAC,EAAepK,KAAhB,CAAqBlB,IAAKsL,EAAQ7L,GAAIY,QAASiL,EAAShL,OAAQ,EAAKhD,MAAM0N,gBAAkBM,EAAQ7L,GAAIW,SAAU,EAAK2K,yBACnHO,EAAQxM,e,GA7BTe,IAAM/C,WAqCnB,mBAAMG,EAAN,2BAAkB,kBAAC,GAAD,MAAwB,gBAAME,EAAN,2BAAkB,kBAAC,GAAD,iBAAmBA,EAAWF,Q,oaCrCzG,IAAIsO,GAA4B/J,IAAH,MAed,mBAAGb,EAAH,EAAGA,SAAUoC,EAAb,EAAaA,UAAb,OAA6B,kBAAC,IAAD,CAAOA,UAAWA,EAAWa,MAAO2H,IAA4B5K,ICf/F6K,GAAb,YACI,WAAYrO,GAAQ,IAAD,8BACf,4CAAMA,KACDsO,yBAA2B,EAAKA,yBAAyB9N,KAA9B,gBAChC,EAAK+N,iBAAmB,EAAKA,iBAAiB/N,KAAtB,gBACxB,EAAKgO,qBAAuB,EAAKA,qBAAqBhO,KAA1B,gBAC5B,EAAKL,MAAQ,CACTqJ,kBAAkB,EAClBC,aAAc,MAPH,EADvB,wFAaQvI,KAAKC,SAAS,CACVqI,kBAAkB,EAClBC,aAAc,SAf1B,6CAmB4B,IAAD,EACfvI,KAAKlB,MAAMyO,SACXvN,KAAKlB,MAAMyO,QAAX,UAAmBvN,KAAKlB,MAAM4F,iBAA9B,QAA2C,QArBvD,uCAwBqB6D,GACbvI,KAAKC,SAAS,CACVqI,kBAAkB,EAClBC,aAAcA,MA3B1B,+BA+Bc,IAAD,SACL,GAAIvI,KAAKlB,MAAMkG,KACX,OACI,yBAAKrE,UAAU,yCACX,kBAACuI,EAAA,EAAWC,MAAZ,CAAkBC,UAAU,YAAYC,SAAS,QAC5CrJ,KAAKlB,MAAMkG,KAAKsE,KAAI,SAAAC,GACjB,IAAIC,EAA4B,YAAhBD,EAAKxE,OACrB,OACI,yBAAKpD,IAAK4H,EAAKnI,GAAIT,UAAS,aAAQ6I,EAAY,SAAW,QAA/B,UACxB,yBAAK7I,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,6CACA,6BAAM4I,EAAK5F,YAEf,yBAAKhD,UAAU,gBACV4I,EAAK7F,OAId,yBAAK/C,UAAU,QACX,yBAAKA,UAAU,mBAAf,6BAAwD4I,EAAK3F,aAEjE,yBAAKjD,UAAU,sBACX,yBAAKA,UAAU,YAAf,qBAEA,uBAAGQ,cAAY,OAAOR,UAAS,UAAK4I,EAAK1F,iBAAmB,cAAgB,YAA7C,YAE/B,8BAAUwB,KAAK,IAAIyB,UAAQ,EAACvC,MAAOgF,EAAKzF,YAAaf,MAAO,CAAE2G,UAAW,OAAQC,MAAO,OAAQC,WAAY,SAAUC,OAAQ,OAAQC,OAAQ,YAItJ,yBAAKnJ,UAAU,iBACX,6BACI,4BAAQA,UAAU,oDAAoD0B,QAAS,kBAAM,EAAKgL,iBAAiB9D,KAA3G,UACwB,YAAhBA,EAAKxE,OAAuB,eAAiB,WADrD,MAGCyE,GAAc,uBAAGO,KAAMR,EAAKS,IAAKrJ,UAAU,4CAA7B,uBAQvC,kBAAC,EAAD,eAAgBgG,OAAQ3G,KAAKf,MAAMqJ,iBAC/B9B,sBAA2D,aAApC,UAAAxG,KAAKf,MAAMsJ,oBAAX,eAAyBxD,SAC5C/E,KAAKf,MAAMsJ,aAFnB,CAGIvC,QAAShG,KAAKoN,yBACdjI,SAAUnF,KAAKsN,6BAhFvC,GAA8B9L,IAAM/C,WCE9B+O,G,YAEF,WAAY1O,GAAQ,IAAD,8BACf,4CAAMA,KAuBVsI,iBAAmB,SAACI,GAChB,IAAIH,EAAOpJ,IACPoJ,GACA,EAAKvI,MAAMwI,gBAAgB,CACvBC,SAAUL,GACVxC,UAAW,CAAEtD,GAAIoG,EAAWA,UAAWH,EAAKG,WAC5CC,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBAClB,IAAKA,EAAiB3C,KAClB,OAAO0C,EACX,IAAME,EAAUD,EAAiB3C,KAAK6C,UACtC,OAAKH,EAAK+F,uBAAuB1F,MAAK,SAACC,GAAD,OAASA,EAAI5G,KAAOwG,EAAQxG,MAKvDsG,EAJAO,OAAOC,OAAO,GAAIR,EAAM,CAC3B+F,uBAAwBxF,OAAOC,OAAO,GAAIR,EAAK+F,uBAAvB,UAAAxF,OAAA,IAAAA,CAAmDP,EAAK+F,wBAAxD,CAAgF7F,WAlC5H,EAAKqB,QAAU,EAAKA,QAAQ3J,KAAb,gBACf,EAAKL,MAAQ,CACTsM,gBAAgB,EAChB3C,OAAQ,EAAK9J,MAAM8J,OACnB8E,UAAW,IAEf,EAAKtG,mBARU,E,oIAYOtI,GAClBA,EAAM4F,UAAUkE,OAAOpB,YAAcxH,KAAKf,MAAMyO,UAAU3F,MAAK,SAACxD,GAAD,OAAWA,IAAUzF,EAAM4F,UAAUkE,OAAOpB,eAC3G3H,QAAQC,IAAIhB,GACZkB,KAAKC,SAAS,CACVyN,UAAWzF,OAAOC,OAAO,GAAIlI,KAAKf,MAAMyO,UAA7B,UAAAzF,OAAA,IAAAA,CAA4CjI,KAAKf,MAAMyO,WAAvD,CAAkE5O,EAAM4F,UAAUkE,OAAOpB,eAExGxH,KAAKoH,iBAAiBtI,EAAM4F,UAAUkE,OAAOpB,YAEjD3H,QAAQC,IAAIE,KAAKf,MAAMyO,a,8BAwBnBhF,GAEJ,OADaA,EAAS/E,UAAUgF,MAAM3I,KAAKf,MAAM2J,SAAWF,EAAShF,KAAKiF,MAAM3I,KAAKf,MAAM2J,U,+BAIrF,IAAD,IACL,GAAI5I,KAAKlB,MAAMgK,QACX,OAAO,kBAAC,EAAD,MACN,GAAI9I,KAAKlB,MAAMP,MAChB,OAAO,wCAEX,IAAIwK,EAAa/I,KAAKlB,MAAMkG,KAAKyI,uBAIjC,OAHIzN,KAAKf,MAAM2J,QAAUG,IACrBA,EAAaA,EAAWH,OAAO5I,KAAKiJ,UAGpC,yBAAKtI,UAAU,cACX,oDAA0BX,KAAKlB,MAAMkG,KAAKyI,uBAAuBrN,QACjE,6DACcJ,KAAKlB,MAAM6O,uBADzB,aACc,EAA4BlN,YAD1C,QACkD,SAElD,yBAAKE,UAAU,mBACX,kBAAC,GAAD,CAAU4M,QAASvN,KAAKlB,MAAMyO,QAAS7I,UAAW1E,KAAKlB,MAAM4F,UAAW4B,gBAAc,EAACtB,KAAM+D,U,GApEpFvH,IAAM/C,WA2EpB,mBAAMwI,EAAN,2BAAiB,kBAAC,GAAD,CAAiCvC,UAAWuC,EAAKvC,YAAY,gBAAM5F,EAAN,2BAAkB,kBAAC,GAAD,iBAAoBA,EAAWmI,QC3ExI2G,G,YACF,WAAY9O,GAAQ,IAAD,8BACf,4CAAMA,KACD+O,aAAe,EAAKA,aAAavO,KAAlB,gBACpB,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBACzB,EAAKwO,wBAA0B,EAAKA,wBAAwBxO,KAA7B,gBAC/B,EAAKL,MAAQ,CACTsM,gBAAgB,EAChBwC,kBAAmB,MAPR,E,iFAYf/N,KAAKC,SAAS,CACVsL,gBAAgB,M,mCAKXD,GACTtL,KAAKC,SAAS,CACVsL,eAAgBD,M,wCAGNhH,GACd,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,M,8CAIQoJ,GACpB3N,KAAKC,SAAS,CACV0N,gBAAiBA,M,qCAIV,IAAD,MACV,MAAO,CACH/E,OAAO,CACH7D,OAAQ,KACRnB,UAAW,KACXD,UAAW,KACX6D,UAAS,oBAAExH,KAAKf,aAAP,uBAAE,EAAY0O,uBAAd,aAAE,EAA6BvM,UAA/B,QAAqC,S,+BAKhD,IAAD,OACL,OACI,6BACI,yBAAKT,UAAU,WACX,yBAAKA,UAAU,cACX,kBAACmL,EAAA,EAAKjJ,KAAN,CAAWZ,QAASjC,KAAKf,MAAMsM,eAAgBlJ,QAAS,kBAAM,EAAKwL,cAAa,KAC5E,uBAAG1M,cAAY,OAAOR,UAAU,eAEpC,kBAACmL,EAAA,EAAKjJ,KAAN,CAAWZ,OAAQjC,KAAKf,MAAMsM,eAAgBlJ,QAAS,kBAAM,EAAKwL,cAAa,KAC3E,uBAAG1M,cAAY,OAAOR,UAAU,aAEpC,yBAAKA,UAAU,QACX,yBAAKA,UAAU,iBACX,2BAAOZ,KAAK,OAAOqM,YAAY,SAAS3L,KAAK,SAAS8D,MAAOvE,KAAKf,MAAM2J,OAAQlI,SAAUV,KAAKwD,oBAC/F,uBAAGrC,cAAY,OAAOR,UAAU,oBAKhD,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAeoM,mBAAoB/M,KAAK8N,4BAGhD,yBAAKnN,UAAU,sBACX,kBAAC,GAAD,CAAgB+D,UAAW1E,KAAKgO,eAAgBL,gBAAiB3N,KAAKf,MAAM0O,gBAAiBpC,eAAgBvL,KAAKf,MAAMsM,yB,GA7E/G/J,IAAM/C,WAsF5B,qBAAM,kBAAC,GAAD,O,2DCVNwP,G,YA3EX,WAAYnP,GAAQ,IAAD,8BACf,4CAAMA,KACDoP,aAAe,EAAKA,aAAa5O,KAAlB,gBACpB,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBACzB,EAAKL,MAAQ,CACTV,OAAO,EACP8K,SAAU,IACV8E,SAAU,GACVC,SAAU,GACVC,UAAU,GATC,E,0EAcN3O,GAAI,IAAD,OACZA,EAAEC,iBACF2O,MAAM,GAAD,OAAIC,GAAYC,OAAhB,SACD,CACIC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oDAEpBC,KAAK,YAAD,OAAc5O,KAAKf,MAAMkP,SAAzB,qBAA8CnO,KAAKf,MAAMmP,YAC9DxJ,MAAK,SAAAiK,GACJ,GAAwB,MAApBA,EAAS9J,OACT,OAAO8J,EAASC,OAEhB,MAAM,IAAIC,MAAMF,EAASG,YAC9B,SAAAC,GAIC,OAHA,EAAKhP,SAAS,CACV1B,OAAO,IAEJ0Q,KAEVrK,MAAK,SAAAI,GACF,EAAK/E,SAAS,CAAEoO,UAAU,IAC1BlQ,aAAa+Q,QAAQ,YAAalK,EAAK9G,OACvC,EAAKY,MAAMH,mBAAkB,MAC9BuG,OAAM,SAAA+J,GACL,EAAKhP,SAAS,CACV1B,OAAO,S,wCAKL+F,GACd,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,M,+BAKZ,OACI4K,KAAenP,KAAKf,MAAMoP,SAAY,kBAAC,IAAD,CAAUtP,GAAG,MAC/C,kBAACqQ,GAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,SAASvM,MAAO,CAAE0I,OAAQ,UAC7D,kBAAC2D,GAAA,EAAKG,OAAN,CAAaxM,MAAO,CAAEyM,SAAU,MAC5B,kBAACtG,EAAA,EAAWC,MAAZ,CAAkBC,UAAU,UAAUC,SAAU,KAC5C,kBAACoG,GAAA,EAAD,CAAMlR,MAAOyB,KAAKf,MAAMV,MAAOiE,KAAK,QAAQ2C,SAAUnF,KAAKkO,cACvD,kBAACwB,GAAA,EAAD,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAYC,OAAK,EAACtD,KAAK,OAAOuD,aAAa,OAAOzD,YAAY,iBAAiB3L,KAAK,WAAW8D,MAAOvE,KAAKf,MAAMkP,SAAUzN,SAAUV,KAAKwD,oBAC1I,kBAACiM,GAAA,EAAKE,MAAN,CAAYC,OAAK,EAACtD,KAAK,OAAOuD,aAAa,OAAOvO,UAAQ,EAAC8K,YAAY,WAAWrM,KAAK,WAAWU,KAAK,WAAW8D,MAAOvE,KAAKf,MAAMmP,SAAU1N,SAAUV,KAAKwD,oBAC7J,kBAACsM,GAAA,EAAD,CAAQ7D,MAAM,OAAO2D,OAAK,EAACpN,KAAK,SAAhC,SACA,kBAAEwM,GAAA,EAAF,CAAUzQ,OAAK,EAACwR,OAAO,0BAA0BxD,QAASvM,KAAKf,MAAMV,iB,GApErFiD,IAAM/C,WCUXuR,G,4LATP7R,aAAaK,WAAW,aACxBwB,KAAKlB,MAAMH,mBAAkB,K,+BAI7B,OAAQ,kBAAC,IAAD,CAAUI,GAAG,e,GARRyC,IAAM/C,W,uQCI3B,IAAIwR,GAAW9M,IAAI,+DAMf+D,GAA2B/D,IAAH,MAKxB+M,GAAQ/M,IAAH,MAiBHgN,G,YAEF,WAAYrR,GAAQ,IAAD,gCACf,4CAAMA,KACDoL,YAAc,EAAKA,YAAY5K,KAAjB,gBAEnB,EAAK8K,mBAAqB,EAAKA,mBAAmB9K,KAAxB,gBAO1BO,QAAQC,IAAI,EAAKhB,MAAMyG,OACvB,EAAKtG,MAAQ,CACTwB,KAAI,UAAE3B,EAAM2B,YAAR,QAAgB,IAbT,E,iFAkBfT,KAAKlB,MAAMyG,MAAM+B,gBAAgB,CAC7BC,SAAUL,GACVO,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBAClB,IAAKA,EAAiB3C,KAClB,OAAO0C,EACX,IAAME,EAAUD,EAAiB3C,KAAK6C,UACtC,OAAKH,EAAKI,aAAaC,MAAK,SAACC,GAAD,OAASA,EAAI5G,KAAOwG,EAAQxG,MAK7CsG,EAJAO,OAAOC,OAAO,GAAIR,EAAM,CAC3BI,aAAcG,OAAOC,OAAO,GAAIR,EAAKI,aAAvB,UAAAG,OAAA,IAAAA,CAAyCP,EAAKI,cAA9C,CAA4DF,Y,yCAQ3EtD,GACf,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,M,oCAID,IAAD,OACVvE,KAAKC,SAAS,CACVoK,eAAgB,GAChB5J,KAAM,GACN8J,YAAY,EACZC,cAAc,IAElBxK,KAAKlB,MAAM2F,WAAWG,MAAK,SAAAC,GACvB,EAAK5E,SAAS,CACVQ,KAAMoE,EAAOG,KAAKoL,oB,uEAU1B,OAAIpQ,KAAKlB,MAAMyG,MAAMuD,QACV,2CACP9I,KAAKlB,MAAMyG,MAAMhH,MACV,wCAEP,6BACI,2BAAOwB,KAAK,OAAOU,KAAK,OAAO8D,MAAOvE,KAAKlB,MAAMyG,MAAMP,KAAKqL,KAAM3P,SAAUV,KAAKoK,qBACjF,2BAAOrK,KAAK,SAASsC,QAASrC,KAAKkK,YAAa3F,MAAM,gB,GAvElD/C,IAAM/C,WA+EX,qBAAM,kBAAC,IAAD,CAAUgG,SAAUwL,KAAY,SAACxL,EAAD,OAAgB3F,EAAhB,2BACjD,kBAAC,IAAD,CAAOyG,MAAO2K,KAAQ,gBAAM3K,EAAN,2BAClB,kBAAC,GAAD,eAAOd,SAAUA,GAAc3F,EAA/B,CAAsCyG,MAAOA,YCpCtC+K,G,YAzEX,WAAYxR,GAAQ,IAAD,8BACf,4CAAMA,KACDoP,aAAe,EAAKA,aAAa5O,KAAlB,gBACpB,EAAKkE,kBAAoB,EAAKA,kBAAkBlE,KAAvB,gBACzB,EAAKL,MAAQ,CACTV,OAAO,EACP8K,SAAU,IACVkH,YAAa,GACbC,YAAa,IARF,E,iFAaf,IACI,IAAInJ,EAAOpJ,IACX+B,KAAKC,SAAS,CACVkO,SAAU9G,EAAK8G,WAErB,MAAO5P,O,mCAKAmB,GAAI,IAAD,OACZA,EAAEC,iBACF2O,MAAM,GAAD,OAAIC,GAAYC,OAAhB,mBACD,CACIC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,mDAChB,cAAiBxQ,aAAaC,QAAQ,cAE1CwQ,KAAK,eAAD,OAAiB5O,KAAKf,MAAMsR,YAA5B,wBAAuDvQ,KAAKf,MAAMuR,eACvE5L,MAAK,SAAAiK,GACJ,GAAwB,MAApBA,EAAS9J,OACT,MAAM,IAAIgK,MAAMF,EAASG,YAC9B9J,OAAM,SAAA+J,GACL,EAAKhP,SAAS,CACV1B,OAAO,S,wCAKL+F,GACd,IAAI9D,EAAS8D,EAAI9D,OACb+D,EAAwB,aAAhB/D,EAAOT,KAAsBS,EAAOgE,QAAUhE,EAAO+D,MAC7D9D,EAAOD,EAAOC,KAClBT,KAAKC,SAAL,eACKQ,EAAO8D,M,+BAKZ,OACI,kBAAC6K,GAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,SAASvM,MAAO,CAAE0I,OAAQ,UAC7D,kBAAC2D,GAAA,EAAKG,OAAN,CAAaxM,MAAO,CAAEyM,SAAU,MAC5B,kBAACtG,EAAA,EAAWC,MAAZ,CAAkBC,UAAU,UAAUC,SAAU,KAC5C,kBAACoG,GAAA,EAAD,CAAMlR,MAAOyB,KAAKf,MAAMV,MAAOiE,KAAK,QAAQ2C,SAAUnF,KAAKkO,cACvD,kBAACwB,GAAA,EAAD,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAYC,OAAK,EAACtD,KAAK,OAAOuD,aAAa,OAAO/I,UAAQ,EAAC/G,KAAK,OAAOU,KAAK,OAAO8D,MAAOvE,KAAKf,MAAMkP,SAAUzN,SAAUV,KAAKwD,oBAC9H,kBAACiM,GAAA,EAAKE,MAAN,CAAYC,OAAK,EAACtD,KAAK,OAAOuD,aAAa,OAAOvO,UAAQ,EAAC8K,YAAY,cAAcrM,KAAK,WAAWU,KAAK,cAAc8D,MAAOvE,KAAKf,MAAMsR,YAAa7P,SAAUV,KAAKwD,oBACtK,kBAACiM,GAAA,EAAKE,MAAN,CAAYC,OAAK,EAACtD,KAAK,OAAOuD,aAAa,OAAOvO,UAAQ,EAAC8K,YAAY,aAAarM,KAAK,WAAWU,KAAK,cAAc8D,MAAOvE,KAAKf,MAAMuR,YAAa9P,SAAUV,KAAKwD,oBACrK,kBAACsM,GAAA,EAAD,CAAQ7D,MAAM,OAAO2D,OAAK,EAACpN,KAAK,SAAhC,iBACA,kBAAEwM,GAAA,EAAF,CAAUzQ,OAAK,EAACwR,OAAO,0BAA0BxD,QAASvM,KAAKf,MAAMV,iB,GAlExEiD,IAAM/C,W,oFCiB7BgS,GAAO,kBAAMC,kBACf,YAAgB,IAAbnL,EAAY,EAAZA,MAAY,EACiBoL,aAAkBpL,GAAtCqL,EADG,EACHA,KAAMC,EADH,EACGA,UACd,MAAgB,wBAATD,GAAgD,iBAAdC,IAV5B,IAAIC,sBAAJ,UAA0BvC,GAAYwC,MAAtC,kBAA6D,CAC9EC,WAAW,EACXC,iBAAkB,CACdC,UAAW/S,aAAaC,QAAQ,cAAgB,MAR/B+S,4BAAiB,CACtCC,IAAI,GAAD,OAAK7C,GAAYC,OAAjB,YAAmCE,YAAa,UAAWC,QAAS,CACnE,cAAiBxQ,aAAaC,QAAQ,cAAgB,QAsB/C,mBAAGkE,EAAH,EAAGA,SAAH,OACX,kBAAC,KAAD,CAAgB+O,OANE,IAAIC,KAAa,CACnCb,KAAMA,KACNc,MAAO,IAAIC,QAKNlP,IC4CMmP,G,YA/DX,WAAY3S,GAAQ,IAAD,8BACf,4CAAMA,KACDG,MAAQ,CACTyS,iBAAiB,GAErB,EAAK/S,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBALV,E,+EAQDiF,GACdvE,KAAKC,SAAS,CACVyR,gBAAiBzT,Q,0CAKrB+B,KAAKC,SAAS,CACVyR,gBAAiBzT,IACjB6K,SAAS,M,4CAIM,IAAD,OAEd6I,EAAaC,aAAY,WACzB/R,QAAQC,IAAI6R,GACZE,cAAcF,GACV,EAAK1S,MAAM6J,SACX,EAAK7I,SAAS,CACV6I,SAAS,MAElB,O,+BAGG,IAAD,EACL,GAAI9I,KAAKf,MAAM6J,QACX,OAAO,kBAAC,EAAD,MACX,IAAIzB,EAAOpJ,IACP6T,EAAuC,WAAnB,OAAJzK,QAAI,IAAJA,OAAA,YAAAA,EAAM0K,cAAN,eAActR,MAAmBuR,GAAmBtH,GACxE,OACI,kBAAC,KAAD,CAAQ3H,MAAO,CAAE0I,OAAQ,YACpBzL,KAAKf,MAAMyS,iBACR,yBAAK/Q,UAAU,8BACX,kBAAC,KAAD,CAASA,UAAU,OAAOsR,OAAK,EAAClT,GAAG,KAAnC,QACA,kBAAC,KAAD,CAAS4B,UAAU,OAAO5B,GAAG,UAA7B,UACA,kBAAC,KAAD,CAAS4B,UAAU,OAAO5B,GAAG,mBAA7B,iBACA,kBAAC,KAAD,CAAS4B,UAAU,OAAO5B,GAAG,WAA7B,WAGR,kBAACmT,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,UACR,kBAAC,GAAD,CAAOxT,kBAAmBqB,KAAKrB,qBAEnC,kBAACyT,EAAD,CAAcD,KAAK,UAAUzT,UAAWsR,GAAQrR,kBAAmBqB,KAAKrB,oBACxE,kBAACyT,EAAD,CAAcD,KAAK,SAASzT,UAAW2T,KACvC,kBAACD,EAAD,CAAcD,KAAK,kBAAkBzT,UAAW4R,KAChD,kBAAC8B,EAAD,CAAcD,KAAK,IAAIzT,UAAWoT,W,GA1DxCtQ,IAAM/C,WCVxB6T,IAASzT,OAAO,kBAAC,GAAD,MAAQ0I,SAASgL,eAAe,U","file":"static/js/main.b172d2e5.chunk.js","sourcesContent":["import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n\r\nexport default ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);","import React from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragHandler = this.dragHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.state = {\r\n            filename: '',\r\n            isOver: false\r\n        }\r\n    }\r\n\r\n    dragHandler(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(e.type)\r\n        if (e.type === 'drop' || e.type === 'dragleave')\r\n            this.setState({ isOver: false })\r\n        else\r\n            this.setState({ isOver: true })\r\n        if (e.type === 'drop' && e.dataTransfer.items.length === 1) {\r\n            var file = e.dataTransfer.files[0];\r\n            if (file)\r\n                this.updateFile(file);\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            filename: e.target.files[0].name\r\n        });\r\n        if (this.props.onChange)\r\n            this.props.onChange(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isOver ? 'upload-box has-advanced-upload is-dragover' : 'upload-box has-advanced-upload'}\r\n                onDrag={this.dragHandler}\r\n                onDragStart={this.dragHandler}\r\n                onDragEnd={this.dragHandler}\r\n                onDragOver={this.dragHandler}\r\n                onDragEnter={this.dragHandler}\r\n                onDragLeave={this.dragHandler}\r\n                onDrop={this.dragHandler}>\r\n                <i aria-hidden='true' className='huge upload icon'></i>\r\n                <div>\r\n                    <input id='file' type='file' multiple={false} required onChange={this.onChangeHandler} />\r\n                    <label htmlFor='file'>{\r\n                        this.state.filename ?\r\n                            (this.state.filename) :\r\n                            (<div>\r\n                                <strong>Selecione um arquivo</strong>\r\n                                <span> ou solte o aqui</span>\r\n                            </div>)\r\n                    }</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const useKeyOnly = (val,key)=> val && key;\r\n\r\n\r\nexport default useKeyOnly;","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport PropTypes, { element } from \"prop-types\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\n\r\n\r\nclass SelectableListItem extends React.Component {\r\n    static propTypes = {\r\n        onSelect: PropTypes.func.isRequired,\r\n        active: PropTypes.bool,\r\n        className: PropTypes.string,\r\n        element: PropTypes.object.isRequired\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n\r\n        this.state = {\r\n            className: '',\r\n        }\r\n    }\r\n\r\n    onClickHandler(elm) {\r\n        if (this.props.onSelect && this.props.element)\r\n            this.props.onSelect(this.props.element);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            active,\r\n            className\r\n        } = this.props;\r\n\r\n        const classes = cx(\r\n            'item',\r\n            useKeyOnly(active, 'active'),\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='listitem' className={classes} onClick={this.onClickHandler}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SelectableListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport useKeyOnly from \"../../Lib/classNameBuilders\";\r\nimport { SIZES } from \"../../Lib\";\r\nimport SelectableListItem from \"./SelectableListItem\";\r\n\r\n\r\n\r\nclass SelectableList extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.array.isRequired,\r\n        size: PropTypes.oneOf(SIZES),\r\n        relaxed: PropTypes.bool,\r\n        animated: PropTypes.bool,\r\n        divided: PropTypes.bool,\r\n        selection: PropTypes.bool,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    static Item = SelectableListItem\r\n\r\n    render() {\r\n        const {\r\n            size,\r\n            className,\r\n            animated,\r\n            divided,\r\n            relaxed,\r\n            selection,\r\n        } = this.props\r\n\r\n        var classes = cx(\r\n            'ui',\r\n            useKeyOnly(animated, 'animated'),\r\n            useKeyOnly(divided, 'divided'),\r\n            useKeyOnly(relaxed, 'relaxed'),\r\n            useKeyOnly(selection, 'selection'),\r\n            size,\r\n            'list',\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='list' className={classes} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectableList","import React from 'react';\r\n\r\nexport class Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='ui segment' style={{ minHeight: '100%' }}>\r\n                <div className='ui active transition visible inverted dimmer'>\r\n                    <div className='content'>\r\n                        <div className='ui big text loader'>{this.props.message ?? 'Carregando'}</div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport './index.css';\r\n\r\nexport class ExamList extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.data)\r\n            return (\r\n                <div className='ui doubling four stackable tiny cards'>\r\n                    <Transition.Group animation='fade left' duration='1000'>\r\n                        {this.props.data.map(item =>\r\n                            <div key={item.id} className='ui yellow card'>\r\n                                <div className='content'>\r\n                                    <div className='header'>\r\n                                        <div className='light label inline'>\r\n                                            <label>Protocolo:</label>\r\n                                            <div>{item.protocolo}</div>\r\n                                        </div>\r\n                                        <div className='label inline'>\r\n                                            {item.nome}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='meta'>\r\n                                        <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                    </div>\r\n                                    <div className='description bottom'>\r\n                                        {\r\n                                            this.props.laudoUrl ? <a href={this.props.laudoUrl}>Baixar Laudo</a> : <a href={item.exameUrl}>Baixar Exame</a>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className='extra content'>\r\n                                    <button className='ui primary small button btn-default'>Ver</button>\r\n                                    {\r\n                                        this.props.saveExamResult && item.status === 0 &&\r\n                                        (<button className='ui small button btn-default'>Remover</button>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Transition.Group>\r\n\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n}","import gql from \"graphql-tag\";\r\nimport { useMutation } from \"react-apollo\";\r\n\r\nvar EXAME_SCHEMA = gql(`\r\n    mutation salvarExame($exame: ExameInput!){\r\n        salvarExame(exame: $exame){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n        }\r\n    }\r\n`);\r\n\r\nconst SalvarExameContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SalvarExameContainer ;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { DragAndDropUpload } from \"../../../Components\";\r\nimport SalvarExameContainer from \"../../../Graphql/containers/Mutations/Exame/salvarExame\";\r\n\r\nclass FormCadastrarExame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            protocolo: '',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null,\r\n            processando: false\r\n        }\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            processando: true\r\n        });\r\n        this.props.mutation({\r\n            variables: {\r\n                exame:\r\n                {\r\n                    exameFile: this.state.exameFile,\r\n                    protocolo: this.state.protocolo,\r\n                    dataExame: this.state.dataExame,\r\n                    nome: this.state.nome,\r\n                    possuiMarcapasso: this.state.possuiMarcapasso,\r\n                    observacoes: this.state.observacoes\r\n                }\r\n            }\r\n        }).then((result) => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: result.data.salvarExame,\r\n                    message: `Novo cadastro de exame para ${this.state.nome} finalizado com sucesso.`\r\n                });\r\n        }).catch(error => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: error,\r\n                    message: 'Ocorreu um erro ao realizar o cadastro do exame.'\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className='ui form dimmable' onSubmit={this.submitHandle}>\r\n                    <div className={`ui inverted dimmer ${this.state.processando ? 'active' : ''}`}>\r\n                        <div className='content'>\r\n                            <div className='ui text loader'>Salvando Registro</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <DragAndDropUpload onChange={this.handleFile} />\r\n                    </div>\r\n                    <div className='fields'>\r\n                        <div className='inline fluid field'>\r\n                            <label>Protocolo:</label    >\r\n                            <input type='text' name='protocolo' required value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        <div className='inline field'>\r\n                            <label>Data Exame</label>\r\n                            <input name='dataExame' type='date' required value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Nome</label>\r\n                        <input className=\"ui input\" type='text' required name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                    <div className='field'>\r\n                        <div className=\"ui toggle checkbox\">\r\n                            <input type=\"checkbox\" tabIndex=\"0\" name='possuiMarcapasso' value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                            <label>Possui Marca-passo?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Outras Observações:</label>\r\n                        <textarea id='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ({ onSubmited }) => (<SalvarExameContainer>{(mutation, { ...props }) => <FormCadastrarExame onSubmited={onSubmited} mutation={mutation} {...props} />}</SalvarExameContainer>);","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nconst LISTAR_EXAMES = gql`\r\n    query listarExames($filter: ExamQuery){\r\n        listarExames(filter: $filter){\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome,\r\n            dataCadastro,\r\n            url,\r\n            possuiMarcapasso,\r\n            observacoes,\r\n            status\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children, variables }) => <Query variables={variables} query={LISTAR_EXAMES}>{children}</Query>","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from \"react-apollo\";\r\n\r\nvar EXAM_RESULT_SCHEMA = gql(`\r\n    mutation saveExamResult($examResult: ExamResultInput!){\r\n        saveExamResult(examResult: $examResult)\r\n    }\r\n`);\r\n\r\nexport default ({ children }) => <Mutation mutation={EXAM_RESULT_SCHEMA} >{children}</Mutation>\r\n\r\n// const SalvarExameContainer = ({ children }) => {\r\n//     const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n//     return children(mutation, data);\r\n// }\r\n\r\n// export default SalvarExameContainer;","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport DragAndDropUpload from '../DragAndDropUpload';\r\nimport SaveExamResultContainer from \"../../Graphql/containers/Mutations/Exame/salvarLaudo\";\r\n\r\nexport class ExamDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onCloseHandler = this.onCloseHandler.bind(this);\r\n        this.onOpenHandler = this.onOpenHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            examFile: null\r\n        };\r\n    }\r\n\r\n    onCloseHandler(event, data) {\r\n        if (this.props.onClose)\r\n            this.props.onClose(event, data);\r\n    }\r\n\r\n    onOpenHandler(event, data) {\r\n        if (this.props.onOpen)\r\n            this.props.onOpen(event, data);\r\n    }\r\n\r\n    fileChangedHandler({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    examFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n        if (this.props.mutation) {\r\n            this.props.mutation({\r\n                variables: {\r\n                    examResult:\r\n                    {\r\n                        examResultFile: this.state.examFile,\r\n                        examId: this.props.id,\r\n                    }\r\n                }\r\n            }).then((result) => {\r\n                if (this.props.onSubmit)\r\n                    this.props.onSubmit({\r\n                        examUrl: result.data.saveExamResult,\r\n                        examId: this.props.id,\r\n                    });\r\n                this.onCloseHandler(null, null);\r\n            }).catch(error => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        var canUploadFile = this.props.mutation && this.props.allowExamResultUpload\r\n        return (\r\n            <Modal onClose={this.onCloseHandler} open={this.props.isOpen} onOpen={this.onOpenHandler}>\r\n                <Modal.Header>\r\n                    {canUploadFile ?\r\n                        <h3 className='ui header'>Enviar Laudo</h3> :\r\n                        <h3 className='ui header'>Detalhar Registro</h3>\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <form className='ui form' onSubmit={this.onSubmitHandler}>\r\n                        {\r\n                            canUploadFile &&\r\n                            <div className='field'>\r\n                                <DragAndDropUpload onChange={this.fileChangedHandler} />\r\n                            </div>\r\n                        }\r\n                        <div className='fields'>\r\n                            <div className='field'>\r\n                                <label>Protocolo: </label>\r\n                                <input type='text' className='ui input' readOnly value={this.props.protocolo} />\r\n                            </div>\r\n                            <div className='field'>\r\n                                <label>Data Exame</label>\r\n                                <input type='date' className='ui input' readOnly value={this.props.dataExame} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Nome</label>\r\n                            <input type='text' className='ui input' readOnly value={this.props.nome} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className=\"ui toggle checkbox\">\r\n                                <input type=\"checkbox\" className='hidden' tabIndex=\"0\" defaultChecked={this.props.possuiMarcapasso} />\r\n                                <label>Possui Marca-passo?</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <textarea readOnly value={this.props.observacoes} />\r\n                        </div>\r\n                        {canUploadFile && <button className='ui fluid positive button'>Salvar Laudo</button>}\r\n                    </form>\r\n                </Modal.Content>\r\n            </Modal>);\r\n    }\r\n}\r\n\r\nexport const SaveExamResult = ({ ...refs }) => <SaveExamResultContainer>{(mutation, { ...props }) => <ExamDetail mutation={mutation} {...refs} {...props} />}</SaveExamResultContainer>","import gql from \"graphql-tag\";\r\n\r\nexport const EXAME_SALVO_SUBSCRIPTION = gql`\r\n    subscription onSavedExam($id: ID, $companyId: ID){\r\n        savedExam(id: $id,companyId: $companyId){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n            dataCadastro,\r\n            observacoes,\r\n            possuiMarcapasso,\r\n            url,\r\n            status\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Queries/Exame/listarExames\";\r\nimport { ExamDetail } from \"../../Components/ExamDetail\";\r\nimport { EXAME_SALVO_SUBSCRIPTION } from \"../../Graphql/containers/Subscriptions/Exame/exameSalvo\";\r\nimport checkAuth from \"../../Lib/Authentication\";\r\nimport { Loading } from \"../../Components\";\r\n// import './index.css';\r\n\r\nexport class ExamListComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLoadedHandler(props?.data?.listarExames?.length ?? 0);\r\n        this.onCloseDetailHandler = this.onCloseDetailHandler.bind(this);\r\n        this.examDetailClickHandler = this.examDetailClickHandler.bind(this);\r\n        this.state = {\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        };\r\n        this.subscribeForMore();\r\n    }\r\n\r\n    subscribeForMore = () => {\r\n        var user = checkAuth()\r\n        if (user)\r\n            this.props.subscribeToMore({\r\n                document: EXAME_SALVO_SUBSCRIPTION,\r\n                variables: { id: user.companyId },//props.match.params.ID\r\n                updateQuery: (prev, { subscriptionData }) => {\r\n                    if (!subscriptionData.data)\r\n                        return prev;\r\n                    const newExam = subscriptionData.data.savedExam;\r\n                    if (!prev.listarExames.find((msg) => msg.id === newExam.id)) {\r\n                        return Object.assign({}, prev, {\r\n                            listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newExam])\r\n                        });\r\n                    } else\r\n                        return prev;\r\n                }\r\n            });\r\n    }\r\n\r\n    onLoadedHandler(registriesCount) {\r\n        if (this.props.onLoaded)\r\n            this.props.onLoaded(registriesCount);\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n    onCloseDetailHandler() {\r\n        this.setState({\r\n            isExamDetailOpen: false\r\n        })\r\n    }\r\n\r\n    examDetailClickHandler(selectedItem) {\r\n        this.setState({\r\n            isExamDetailOpen: true,\r\n            selectedExam: selectedItem\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.subscribeForMore();\r\n        if (this.props.loading)\r\n            return <Loading/>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n        var resultList = this.props.data.listarExames\r\n        if (this.props.textFilter)\r\n            resultList = this.resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div>\r\n                <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                <div className='tabelaContainer'>\r\n                    <div className='ui doubling four stackable tiny cards'>\r\n                        <Transition.Group animation='fade left' duration='1000'>\r\n                            {resultList.map(item => {\r\n                                var isWaiting = item.status === 'WAITING';\r\n                                return (\r\n                                    <div key={item.id} className={`ui ${isWaiting ? 'yellow' : 'green'} card`}>\r\n                                        <div className='content'>\r\n                                            <div className='header'>\r\n                                                <div className='light label inline'>\r\n                                                    <label>Protocolo:</label>\r\n                                                    <div>{item.protocolo}</div>\r\n                                                </div>\r\n                                                <div className='label inline'>\r\n                                                    {item.nome}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className='meta'>\r\n                                                <div className='ui ribbon label'>{`Cadastro Realizado em ${item.dataCadastro}`}</div>\r\n                                            </div>\r\n                                            <div className='description bottom'>\r\n                                                <div className='ui label'>\r\n                                                    Possui marcapasso:\r\n                                            <i aria-hidden='true' className={`${item.possuiMarcapasso ? 'green check' : 'red close'} icon`} />\r\n                                                </div>\r\n                                                <textarea rows='3' readOnly value={item.observacoes} style={{ marginTop: '10px', width: '100%', lineHeight: '1.2857', resize: 'none', border: 'none' }} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='extra content'>\r\n                                            <div className='ui bottom attached buttons'>\r\n                                                <button className={`ui primary small button btn-default'`} onClick={() => this.examDetailClickHandler(item)}>Detalhar</button>\r\n                                                {!isWaiting && <a href={item.url} className='ui secondary small button btn-default'>Acessar Laudo</a>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                            })}\r\n                        </Transition.Group>\r\n                        <ExamDetail onClose={this.onCloseDetailHandler} {...this.state.selectedExam} isOpen={this.state.isExamDetailOpen} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ({ ...refs }) => <ListarExamesContainer variables={refs.variables}>{({ ...props }) => <ExamListComponent {...refs} {...props} />}</ListarExamesContainer>","import React from 'react';\r\n\r\nexport class Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearHandle = this.clearHandle.bind(this);\r\n        this.filterHandle = this.filterHandle.bind(this);\r\n        this.inputChangedHandle = this.inputChangedHandle.bind(this);\r\n        this.state = {\r\n            protocolNumber: props.protocolNumber ?? '',\r\n            name: props.name ?? '',\r\n            examDate: props.examDate ?? '',\r\n            isReleased: props.isReleased ?? false,\r\n            isInProgress: props.isInProgress ?? false\r\n        };\r\n    }\r\n\r\n    inputChangedHandle(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    clearHandle() {\r\n        this.setState({\r\n            protocolNumber: '',\r\n            name: '',\r\n            examDate: '',\r\n            isReleased: false,\r\n            isInProgress: false\r\n        })\r\n    }\r\n\r\n    filterHandle() {\r\n        if (this.props.onApplyFilter)\r\n            this.props.onApplyFilter(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ui card'>\r\n                <div className='content'>\r\n                    <form className='ui form'>\r\n                        <div className='field'>\r\n                            <label>Protocolo</label>\r\n                            <input type='text' name='protocolNumber' value={this.state.protocolNumber} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Nome</label>\r\n                            <input type='text' name='name' value={this.state.name} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Data Exame</label>\r\n                            <input type='date' name='examDate' value={this.state.examDate} onChange={this.inputChangedHandle} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='ui toggle checkbox'>\r\n                                <input type='checkbox' tabIndex='0' name='isReleased' checked={this.state.isReleased} onChange={this.inputChangedHandle} />\r\n                                <label>Liberado</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='ui toggle checkbox'>\r\n                                <input type='checkbox' tabIndex='0' name='isInProgress' checked={this.state.isInProgress} onChange={this.inputChangedHandle} />\r\n                                <label>Em andamento</label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='extra content'>\r\n                    <button className='ui primary button' onClick={this.clearHandle}>Limpar</button>\r\n                    <button className='ui primary button' onClick={this.filterHandle}>Aplicar Filtro</button>\r\n                </div>\r\n            </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport { Modal, Header, Menu, Popup, Label, Transition } from \"semantic-ui-react\";\r\nimport FormCadastrarExame from \"../Forms/CadastrarExame\";\r\nimport './examesList.css'\r\n//import { ExamList } from \"../../Components\";\r\nimport ExamList from \"./examsList\";\r\nimport { Filter } from \"./filtro\";\r\nexport class Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonClickHandler = this.buttonClickHandler.bind(this);\r\n        this.cadastrarExameCloseHandler = this.cadastrarExameCloseHandler.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.loadedHandler = this.loadedHandler.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.cadastroFinalizadoHandler = this.cadastroFinalizadoHandler.bind(this);\r\n        this.openFilterHandler = this.openFilterHandler.bind(this);\r\n        this.closeFilterHandler = this.closeFilterHandler.bind(this);\r\n        this.appliedFilterHandler = this.appliedFilterHandler.bind(this);\r\n        this.state = {\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: false,\r\n            isPopupFilterOpen: false,\r\n            filter: {},\r\n            textFilter: '',\r\n            cadastraExameResult: null\r\n        };\r\n    }\r\n\r\n    buttonClickHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: !this.state.isCadastrarExameOpen\r\n        });\r\n    }\r\n    cadastrarExameCloseHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: false\r\n        });\r\n    }\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(result) {\r\n        this.setState({\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: true,\r\n            cadastraExameResult: result\r\n        });\r\n    }\r\n\r\n    cadastroFinalizadoHandler() {\r\n        this.setState({\r\n            isCadastroFinalizadoModalOpen: false\r\n        })\r\n    }\r\n\r\n    openFilterHandler() {\r\n        this.setState({\r\n            isPopupFilterOpen: true\r\n        })\r\n    }\r\n    closeFilterHandler() {\r\n        this.setState({\r\n            isPopupFilterOpen: false\r\n        })\r\n    }\r\n\r\n    appliedFilterHandler(filter) {\r\n        this.setState({\r\n            isPopupFilterOpen: false,\r\n            filter: filter\r\n        });\r\n    }\r\n    loadedHandler(registriesCount) {\r\n        this.setState({\r\n            registriesCount: registriesCount\r\n        });\r\n    }\r\n\r\n    qtdFiltro() {\r\n        var total = 0;\r\n        if (this.state.filter.name)\r\n            total++;\r\n        if (this.state.filter.protocolNumber)\r\n            total++;\r\n        if (this.state.filter.examDate)\r\n            total++;\r\n        if (this.state.filter.isReleased)\r\n            total++;\r\n        if (this.state.filter.isInProgress)\r\n            total++;\r\n        return total;\r\n    }\r\n\r\n    getFilter() {\r\n        var status = [];\r\n        if (this.state.filter.isInProgress)\r\n            status = Object.assign([], status, [...status, 'WAITING'])\r\n        if (this.state.filter.isReleased)\r\n            status = Object.assign([], status, [...status, 'READY'])\r\n        return {\r\n            filter: {\r\n                protocolNumber: this.state.filter.protocolNumber,\r\n                name: this.state.filter.name,\r\n                examDate: this.state.filter.examDate,\r\n                status: status\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '85%' }}>\r\n                <div className='ui menu'>\r\n                    <a className=\"item\" onClick={this.buttonClickHandler}>\r\n                        <i aria-hidden=\"true\" className=\"add icon\"></i>\r\n                        Novo Exame\r\n                    </a>\r\n                    <div className='right menu'>\r\n                        {/* <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item> */}\r\n                        <Popup\r\n                            on='click'\r\n                            onOpen={this.openFilterHandler}\r\n                            onClose={this.closeFilterHandler}\r\n                            open={this.state.isPopupFilterOpen}\r\n                            position='bottom right'\r\n                            trigger={(\r\n                                <Menu.Item active={this.state.isPopupFilterOpen}>\r\n                                    <i className='filter icon' />\r\n                                    {this.qtdFiltro() > 0 &&\r\n                                        < Popup\r\n                                            trigger={\r\n                                                <Label color='teal' floating circular>{this.qtdFiltro()}</Label>}>\r\n                                            {this.qtdFiltro()}\r\n                                        </Popup>\r\n                                    }\r\n\r\n                                </Menu.Item>\r\n                            )}>\r\n                            <Filter {...this.state.filter} onApplyFilter={this.appliedFilterHandler} />\r\n                        </Popup>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Protocolo / Nome' name='textFilter' value={this.state.textFilter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui segment' style={{minHeight: '100%'}}>\r\n                    <ExamList variables={this.getFilter()} textFilter={this.state.textFilter} onLoaded={this.loadedHandler} />\r\n                </div>\r\n                <Modal onClose={this.cadastrarExameCloseHandler} open={this.state.isCadastrarExameOpen}>\r\n                    <Header icon='upload' content=\"Cadastrar novo exame\" />\r\n                    <Modal.Content>\r\n                        <FormCadastrarExame onSubmited={this.submitHandle} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <Modal onClose={this.cadastroFinalizadoHandler} open={this.state.isCadastroFinalizadoModalOpen}>\r\n                    <Header icon={this.state?.cadastraExameResult?.status === 'Sucesso' ? 'green icon check' : 'red icon thumbs down'}></Header>\r\n                    <Modal.Content>\r\n                        <div>\r\n                            {this.state.cadastraExameResult?.message}\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n// export default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nconst GET_COMPANIES = gql`\r\n    query getCompanies{\r\n        getCompanies{\r\n            id\r\n            name\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={GET_COMPANIES}>{children}</Query>","import React from \"react\";\r\nimport GetCompaniesContainer from \"../../Graphql/containers/Queries/Company/getCompanies\";\r\nimport { SelectableList } from \"../../Components\";\r\n\r\nclass CompaniesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectionChangedHandler = this.selectionChangedHandler.bind(this);\r\n        this.state = {\r\n            selectedValue: this.props.selectValue\r\n        }\r\n    }\r\n\r\n    selectionChangedHandler(selectedElement) {\r\n        if (selectedElement.id)\r\n            this.setState((prevState) => ({\r\n                selectedValue: (prevState.selectedValue === selectedElement.id ? null : selectedElement.id)\r\n            }));\r\n        if (this.props.onSelectionChanged)\r\n            this.props.onSelectionChanged(this.state.selectedValue === selectedElement.id ? null : selectedElement)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        return (\r\n            <div>\r\n                <SelectableList animated divided relaxed size='huge' selection>\r\n                    {this.props.data.getCompanies.map(company =>\r\n                        <SelectableList.Item key={company.id} element={company} active={this.state.selectedValue === company.id} onSelect={this.selectionChangedHandler} >\r\n                            {company.name}\r\n                        </SelectableList.Item>)}\r\n                </SelectableList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...rest }) => (<GetCompaniesContainer>{({ ...props }) => <CompaniesList {...props} {...rest} />}</GetCompaniesContainer>)","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nvar LISTAR_EXAMES_POR_CLIENTE = gql`\r\n    query listarExamesPorCliente($filter: ExamByCompanyQuery){\r\n        listarExamesPorCliente(filter: $filter){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame,\r\n            dataCadastro,\r\n            observacoes,\r\n            possuiMarcapasso,\r\n            url,           \r\n            status\r\n        }\r\n    }`\r\n\r\nexport default ({ children, variables }) => <Query variables={variables} query={LISTAR_EXAMES_POR_CLIENTE}>{children}</Query>","import React from \"react\";\r\nimport { Transition } from \"semantic-ui-react\";\r\nimport { SaveExamResult } from \"../../Components/ExamDetail\";\r\n\r\nexport class ExamList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCloseExamDetailHandler = this.onCloseExamDetailHandler.bind(this);\r\n        this.onSeeDetailClick = this.onSeeDetailClick.bind(this);\r\n        this.onSubmitResulHandler = this.onSubmitResulHandler.bind(this);\r\n        this.state = {\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        }\r\n    }\r\n\r\n    onCloseExamDetailHandler() {\r\n        this.setState({\r\n            isExamDetailOpen: false,\r\n            selectedExam: null\r\n        });\r\n    }\r\n\r\n    onSubmitResulHandler() {\r\n        if (this.props.refetch)\r\n            this.props.refetch(this.props.variables ?? null);\r\n    }\r\n\r\n    onSeeDetailClick(selectedExam) {\r\n        this.setState({\r\n            isExamDetailOpen: true,\r\n            selectedExam: selectedExam\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data)\r\n            return (\r\n                <div className='ui doubling four stackable tiny cards'>\r\n                    <Transition.Group animation='fade left' duration='1000'>\r\n                        {this.props.data.map(item => {\r\n                            var isWaiting = item.status === 'WAITING';\r\n                            return (\r\n                                <div key={item.id} className={`ui ${isWaiting ? 'yellow' : 'green'} card`}>\r\n                                    <div className='content'>\r\n                                        <div className='header'>\r\n                                            <div className='light label inline'>\r\n                                                <label>Protocolo:</label>\r\n                                                <div>{item.protocolo}</div>\r\n                                            </div>\r\n                                            <div className='label inline'>\r\n                                                {item.nome}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className='meta'>\r\n                                            <div className='ui ribbon label'>{`Exame Realizado em ${item.dataExame}`}</div>\r\n                                        </div>\r\n                                        <div className='description bottom'>\r\n                                            <div className='ui label'>\r\n                                                Possui marcapasso:\r\n                                            <i aria-hidden='true' className={`${item.possuiMarcapasso ? 'green check' : 'red close'} icon`} />\r\n                                            </div>\r\n                                            <textarea rows='3' readOnly value={item.observacoes} style={{ marginTop: '10px', width: '100%', lineHeight: '1.2857', resize: 'none', border: 'none' }} />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='extra content'>\r\n                                        <div>\r\n                                            <button className='ui left attached primary small button btn-default' onClick={() => this.onSeeDetailClick(item)}>\r\n                                                {`${item.status === 'WAITING' ? 'Enviar Laudo' : 'Detalhar'} `\r\n                                                }</button>\r\n                                            {isWaiting && (<a href={item.url} className='ui right attached secondary small button'>Baixar Exame</a>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </Transition.Group>\r\n                    <SaveExamResult isOpen={this.state.isExamDetailOpen}\r\n                        allowExamResultUpload={this.state.selectedExam?.status === 'WAITING'}\r\n                        {...this.state.selectedExam}\r\n                        onClose={this.onCloseExamDetailHandler}\r\n                        onSubmit={this.onSubmitResulHandler} />\r\n                </div>\r\n            )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ListarExamesPorClienteContainer from '../../Graphql/containers/Queries/Exame/listarExamesPorCliente';\r\nimport { EXAME_SALVO_SUBSCRIPTION } from '../../Graphql/containers/Subscriptions/Exame/exameSalvo';\r\nimport { ExamList } from './examsList';\r\nimport checkAuth from '../../Lib/Authentication';\r\nimport { Loading } from '../../Components';\r\nclass ExamsByCompany extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            filter: this.props.filter,\r\n            companies: []\r\n        };\r\n        this.subscribeForMore();\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(props) {\r\n        if (props.variables.filter.companyId && !this.state.companies.find((value) => value === props.variables.filter.companyId)) {\r\n            console.log(props);\r\n            this.setState({\r\n                companies: Object.assign([], this.state.companies, [...this.state.companies, props.variables.filter.companyId])\r\n            })\r\n            this.subscribeForMore(props.variables.filter.companyId);\r\n        }\r\n        console.log(this.state.companies);\r\n\r\n    }\r\n\r\n    subscribeForMore = (companyId) => {\r\n        var user = checkAuth()\r\n        if (user)\r\n            this.props.subscribeToMore({\r\n                document: EXAME_SALVO_SUBSCRIPTION,\r\n                variables: { id: companyId, companyId: user.companyId, },//props.match.params.ID\r\n                updateQuery: (prev, { subscriptionData }) => {\r\n                    if (!subscriptionData.data)\r\n                        return prev;\r\n                    const newExam = subscriptionData.data.savedExam;\r\n                    if (!prev.listarExamesPorCliente.find((msg) => msg.id === newExam.id)) {\r\n                        return Object.assign({}, prev, {\r\n                            listarExamesPorCliente: Object.assign([], prev.listarExamesPorCliente, [...prev.listarExamesPorCliente, newExam])\r\n                        });\r\n                    } else\r\n                        return prev;\r\n                }\r\n            });\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <Loading/>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        var resultList = this.props.data.listarExamesPorCliente;\r\n        if (this.state.filter && resultList)\r\n            resultList = resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div className='ui segment'>\r\n                <div>Total de Registros: {this.props.data.listarExamesPorCliente.length}</div>\r\n                <div>\r\n                    Empresa: {this.props.selectedCompany?.name ?? 'Todas'}\r\n                </div>\r\n                <div className='tabelaContainer'>\r\n                    <ExamList refetch={this.props.refetch} variables={this.props.variables} saveExamResult data={resultList} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ ...refs }) => <ListarExamesPorClienteContainer variables={refs.variables}>{({ ...props }) => <ExamsByCompany {...props} {...refs} />}</ListarExamesPorClienteContainer>","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nimport CompaniesList from \"./companiesList\";\r\nimport ExamsByCompany from \"./examsByCompany\";\r\n\r\nclass ListarExamesPorCliente extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.companySelectionChanged = this.companySelectionChanged.bind(this);\r\n        this.state = {\r\n            exibicaoTabela: true,\r\n            selectedCompanyId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            exibicaoTabela: true,\r\n        });\r\n    }\r\n\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    companySelectionChanged(selectedCompany) {\r\n        this.setState({\r\n            selectedCompany: selectedCompany\r\n        });\r\n    }\r\n\r\n    getVariables(){\r\n        return {\r\n            filter:{\r\n                status: null,\r\n                dataExame: null,\r\n                protocolo: null,\r\n                companyId: this.state?.selectedCompany?.id ?? null,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui divided grid'>\r\n                    <div className='row'>\r\n                        <div className='four wide column'>\r\n                            <div className='ui segment'>\r\n                                <CompaniesList onSelectionChanged={this.companySelectionChanged} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='twelve wide column'>\r\n                            <ExamsByCompany variables={this.getVariables()} selectedCompany={this.state.selectedCompany} exibicaoTabela={this.state.exibicaoTabela} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => <ListarExamesPorCliente />\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/auth`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            ));\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('AuthToken')\r\n        this.props.componentCallback(false);\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import React from 'react';\r\nimport './testeVisual.css';\r\nimport _ from 'lodash'\r\n\r\nimport gql from 'graphql-tag';\r\nimport { Mutation, Query } from \"react-apollo\";\r\n\r\nvar MUTATION = gql(`\r\n    mutation testMutation{\r\n        testMutation\r\n    }\r\n`);\r\n\r\nvar EXAME_SALVO_SUBSCRIPTION = gql`\r\n    subscription onTest($id: ID){\r\n        test(id: $id)\r\n    }\r\n`\r\nvar QUERY = gql`\r\n    query test{\r\n        test\r\n    }\r\n`\r\n\r\n// export  ({ children }) => <Mutation mutation={EXAM_RESULT_SCHEMA} >{children}</Mutation>\r\n\r\n// const SalvarExameContainer = ({ children }) => {\r\n//     const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n//     return children(mutation, data);\r\n// }\r\n\r\n// export default SalvarExameContainer;\r\n\r\n\r\n\r\nclass Teste extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.clearHandle = this.clearHandle.bind(this);\r\n        // this.filterHandle = this.filterHandle.bind(this);\r\n        this.inputChangedHandle = this.inputChangedHandle.bind(this);\r\n        // this.state = {\r\n        //     protocolNumber: props.protocolNumber,\r\n        //     name: props.name,\r\n        //     isReleased: props.isReleased,\r\n        //     isInProgress: props.isInProgress\r\n        // };\r\n        console.log(this.props.query);\r\n        this.state = {\r\n            name: props.name ?? ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.query.subscribeToMore({\r\n            document: EXAME_SALVO_SUBSCRIPTION,\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                if (!subscriptionData.data)\r\n                    return prev;\r\n                const newExam = subscriptionData.data.savedExam;\r\n                if (!prev.listarExames.find((msg) => msg.id === newExam.id)) {\r\n                    return Object.assign({}, prev, {\r\n                        listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newExam])\r\n                    });\r\n                } else\r\n                    return prev;\r\n            }\r\n        })\r\n    }\r\n\r\n    inputChangedHandle(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    clearHandle() {\r\n        this.setState({\r\n            protocolNumber: '',\r\n            name: '',\r\n            isReleased: false,\r\n            isInProgress: false\r\n        })\r\n        this.props.mutation().then(result => {\r\n            this.setState({\r\n                name: result.data.testMutation\r\n            });\r\n        })\r\n    }\r\n\r\n    filterHandle() {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.query.loading)\r\n            return <div>Loading...</div>;\r\n        if (this.props.query.error)\r\n            return <div>Erro...</div>;\r\n        return (\r\n            <div>\r\n                <input type='text' name='name' value={this.props.query.data.test} onChange={this.inputChangedHandle}></input>\r\n                <input type='button' onClick={this.clearHandle} value='Limpar'></input>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// export default () => <Subscription subscription={EXAME_SALVO_SUBSCRIPTION} >{(data) =>\r\nexport default () => <Mutation mutation={MUTATION} >{(mutation, { ...props }) =>\r\n    <Query query={QUERY}>{({ ...query }) =>\r\n        <Teste mutation={mutation} {...props} query={query} />\r\n    }</Query>\r\n}</Mutation>\r\n// }</Subscription>","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport checkAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\n\r\nclass PasswordChange extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            oldPassword: '',\r\n            newPassword: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var user = checkAuth();\r\n            this.setState({\r\n                userName: user.userName\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/changepassword`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                    'authorization': localStorage.getItem('AuthToken')\r\n                },\r\n                body: `oldPassword=${this.state.oldPassword}&newPassword=${this.state.newPassword}`\r\n            }).then(response => {\r\n                if (response.status !== 200)\r\n                    throw new Error(response.Message)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Transition.Group animation='fade up' duration={800}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment>\r\n                                <Form.Input fluid icon='user' iconPosition='left' readOnly type='text' name='user' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Senha atual' type='password' name='oldPassword' value={this.state.oldPassword} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Nova senha' type='password' name='newPassword' value={this.state.newPassword} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Alterar Senha</Button>\r\n                                < Message error header='Error ao realizar login' content={this.state.error} />\r\n                            </Segment>\r\n                        </Form>\r\n                    </Transition.Group>\r\n                </Grid.Column >\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\nexport default PasswordChange;","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport Enviroments from \"../Lib/enviroments.json\";\r\n\r\nconst httpClient = () => createUploadLink({\r\n    uri: `${Enviroments.appUrl}/graphql`, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(`${Enviroments.wsUrl}/subscriptions`, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({ children }) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\nimport { Registries } from \"./Modules/Exames\"\r\nimport ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\nimport TesteVisual from \"./testeVisual\";\r\nimport { PrivateRoute, Loading } from \"./Components\";\r\nimport PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticated: false\r\n        };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isAuthenticated: checkAuth(),\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    componentWillUpdate() {\r\n\r\n        var intervalId = setInterval(() => {\r\n            console.log(intervalId);\r\n            clearInterval(intervalId);\r\n            if (this.state.loading)\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <Loading />;\r\n        var user = checkAuth();\r\n        var homeComponent = user?.schema?.name === 'ADMIN' ? ExamesPorCliente : Registries;\r\n        return (\r\n            <Router style={{ height: 'inherit' }}>\r\n                {this.state.isAuthenticated && (\r\n                    <div className='ui pointing secondary menu'>\r\n                        <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                        <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                        <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                        <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                    </div>)}\r\n                <GraphQL>\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        <PrivateRoute path='/teste' component={TesteVisual} />\r\n                        <PrivateRoute path='/passwordchange' component={PasswordChange} />\r\n                        <PrivateRoute path=\"/\" component={homeComponent} />\r\n                    </Switch>\r\n                </GraphQL>\r\n            </Router>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}