{"version":3,"sources":["Graphql/containers/Exame/listarExames.js","Modules/Registries/index.js","Graphql/containers/signin.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","Graphql/containers/Exame/salvarExame.js","Modules/Upload/index.js","Modules/Core/Home/index.js","App.js","index.js"],"names":["LISTAR_EXAMES","gql","children","query","Registries","props","item","alert","this","loading","error","data","listarExames","length","className","map","exame","key","id","protocolo","nome","dataExame","Date","toISOString","substr","href","role","aria-hidden","React","Component","Login","handleSubmit","bind","handleInputChange","state","animation","duration","userName","password","isLogged","e","preventDefault","fetch","method","credentials","headers","body","then","response","json","document","cookie","setState","componentCallback","evt","target","value","type","checked","name","to","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","Button","color","Transition","Group","graphQLErrors","i","message","Message","header","content","Logoff","result","EXAME_SCHEMA","SalvarExameContainer","useMutation","Upload","handleFile","submitHandle","possuiMarcapasso","observacoes","exameFile","validity","file","files","FileReader","fr","onloadend","valid","imagePreview","readAsDataURL","mutation","variables","catch","console","log","Container","minWidth","required","readOnly","tabIndex","rows","Home","isOpen","buttonClickHandle","checkAuth","Cookies","get","PrivateRoute","component","rest","render","pathname","from","location","App","isLoggedIn","Menu","Item","path","httpClient","createUploadLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.184d90d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query, useQuery } from 'react-apollo';\r\n\r\nvar LISTAR_EXAMES = gql`\r\n    query listarExames{\r\n        listarExames{\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={LISTAR_EXAMES}>{children}</Query>","import React from \"react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Exame/listarExames\";\r\n\r\nclass Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.editHandler = this.editHandler.bind(this);\r\n    }\r\n\r\n    editHandler(item) {\r\n        alert(item);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        return (\r\n            <div>\r\n                <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                <div className='ui doubling five stackable tiny cards'>\r\n                    {this.props.data.listarExames.map(exame => (\r\n                        <div key={exame.id} className='ui yellow card'>\r\n                            <div className='content'>\r\n                                <div className='header'>{exame.protocolo} - {exame.nome}</div>\r\n                                <div className='meta'>\r\n                                    <div className='ui ribbon label'>{exame.dataExame ? exame.dataExame : (new Date().toISOString().substr(0, 10) + ' ' + new Date().toISOString().substr(11, 5))}</div>\r\n                                </div>\r\n                                <div className='description'>\r\n                                \r\n                                {/* <a href={'http://localhost:3000/download?id=' + exame.id + '&download=exame'}>Baixar Laudo</a> */}\r\n                                <a href={'https://laudos.herokuapp.com/download?id=' + exame.id + '&download=exame'}>Baixar Laudo</a>\r\n                                </div>\r\n                                {/* <a className='description'>{exame.dataExame ? exame.dataExame : (new Date().toISOString())}</a> */}\r\n                            </div>\r\n                            <div className='extra content'>\r\n                                <button className='ui primary small button btn-default'>Remover</button>\r\n                                <button className='ui small button btn-default'>Remover</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div role='list' className='ui animated huge divided relaxed list'>\r\n                    {this.props.data.listarExames.map(exame => (\r\n                        <div key={exame.id} role='listitem' className='item'>\r\n                            <i aria-hidden='true' className='chart bar icon large middle aligned'></i>\r\n                            <div className='content'>\r\n                                <a className='header'>{exame.protocolo} - {exame.nome}</a>\r\n                                <a className='description'>Teste</a>\r\n                                <button className='ui small button btn-default'>Remover</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <table className='ui striped celled selectable compact small table'>\r\n                    <thead>\r\n                        <th>Protocolo</th>\r\n                        <th>Nome</th>\r\n                        <th>Data Exame</th>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.data.listarExames.map(exame => (\r\n                            <tr>\r\n                                <td>\r\n                                    {exame.protocolo}\r\n                                </td>\r\n                                <td>\r\n                                    {exame.nome}\r\n                                </td>\r\n                                <td>\r\n                                    {exame.dataExame}\r\n                                </td>\r\n                                <td>\r\n                                    <button className='ui tiny button btn-default' onClick={() => this.editHandler(exame)}>Editar</button>\r\n                                    <button className='ui tiny button btn-default' onClick={() => this.editHandler(exame)}>Remover</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n\r\n// class Login extends React.Component {\r\n\r\n//     render() {\r\n//         var result;\r\n//         if (this.props.loading)\r\n//             result = <div>Loading...</div>;\r\n//         else if (this.props.error)\r\n//             result = <div>Erro...</div>;\r\n//         else\r\n//             result = <div>\r\n//                 {this.props.data.getUser.userName}\r\n//             </div>;\r\n//         return result;\r\n//     }\r\n// }\r\n\r\n// export default () => (<Test>{({ ...props }) => <Login {...props} />}</Test>)","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nvar schema = gql`\r\n    mutation signIn($userName: String!, $password: String!){\r\n        signIn(userName: $userName, password: $password){\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst SignInContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(schema, { errorPolicy: 'ignore' })\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SignInContainer;","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition, Container } from \"semantic-ui-react\";\r\nimport SignInContainer from \"../../../Graphql/containers/signin\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst requestOptions = {\r\n    method: 'post',\r\n    headers: {\r\n        'Contenty-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n    },\r\n}\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: true,\r\n            animation: 'fade up',\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        //fetch('http://localhost:3000/login',\r\n        fetch('https://laudos.herokuapp.com/login',\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                document.cookie = 'signedin=true';\r\n                this.setState({ isLogged: true });\r\n                this.props.componentCallback(true);\r\n            });\r\n\r\n        // this.props.mutation({\r\n        //     variables: {\r\n        //         userName: this.state.userName,\r\n        //         password: this.state.password\r\n        //     }\r\n        // }).catch(result => { });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var result;\r\n        result =\r\n            !this.state.isLogged ? (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment stacked>\r\n                                <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Login</Button>\r\n                            </Segment>\r\n                        </Form>\r\n                        {/* <Message>\r\n                        New to us? <a href='#'>Sign Up</a>\r\n                    </Message> */}\r\n                        <Transition.Group animation={this.state.animation} duration={this.state.duration}>\r\n                            {\r\n                                this.props.error &&\r\n                                this.props.error.graphQLErrors.map(({ message }, i) => (<Message\r\n                                    error\r\n                                    header='Action Forbidden'\r\n                                    content={message}\r\n                                />))\r\n                            }\r\n                        </Transition.Group>\r\n                    </Grid.Column>\r\n                </Grid>) : (<Redirect to='/' />)\r\n        return result;\r\n    }\r\n}\r\nexport default Login;\r\n\r\n// export default () => (<SignInContainer>{\r\n//     (mutation, { ...props }) => <Login mutation={mutation} {...props} />\r\n// }</SignInContainer>);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:3000/logoff',\r\n            {\r\n                method: 'post',\r\n                credentials: 'include'\r\n            }).then(result => result.json())\r\n            .then(data => {\r\n                document.cookie = 'signedin=false';\r\n                this.props.componentCallback(false);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import gql from \"graphql-tag\";\r\nimport { Mutation, useMutation } from \"react-apollo\";\r\n\r\nvar EXAME_SCHEMA = gql(`\r\n    mutation salvarExame($exame: ExameInput!){\r\n        salvarExame(exame: $exame){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n        }\r\n    }\r\n`);\r\n\r\nconst SalvarExameContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SalvarExameContainer ;","import React from \"react\";\r\nimport { Form, Container } from \"semantic-ui-react\";\r\nimport SalvarExameContainer from \"../../Graphql/containers/Exame/salvarExame\";\r\nimport './upload.css';\r\n\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"react-apollo\";\r\n\r\n\r\nclass Upload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            nome: 'Nero',\r\n            protocolo: '123',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null\r\n        };\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (FileReader) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                    valid: validity.valid,\r\n                    imagePreview: fr.result\r\n                });\r\n            };\r\n\r\n            fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(e) {\r\n        e.preventDefault();\r\n        // this.props.mutation({\r\n        //     variables: {\r\n        //         image: this.state.exameFile\r\n        //     }\r\n        // }).catch(result => { });\r\n\r\n        this.props.mutation({\r\n            variables: {\r\n                exame:\r\n                {\r\n                    exameFile: this.state.exameFile,\r\n                    protocolo: this.state.protocolo,\r\n                    dataExame: this.state.dataExame,\r\n                    nome: this.state.nome,\r\n                    possuiMarcapasso: this.state.possuiMarcapasso,\r\n                    observacoes: this.state.observacoes\r\n                }\r\n            }\r\n        }).catch(result => {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // if (this.props.loading)\r\n        //     return (<div>Loading...</div>);\r\n        // else if (this.props.error)\r\n        //     return (<div>Erro</div>);\r\n        // else\r\n        return (\r\n            <Container>\r\n                {/* <Form onSubmit={this.submitHandle}>\r\n                        <Form.Input type='file' required onChange={this.handleFile} />\r\n                        <Form.Input type='submit' />\r\n                    </Form> */}\r\n                {/*                     <div className=\"ui grid\" > */}\r\n                <div className=\"ui center aligned middle aligned grid\" style={{ height: \"90vh\" }}>\r\n                    <div className=\"column\" style={{ maxWidth: \"60%\", minWidth: 700 }}>\r\n                        <div className=\"ui placeholder segment aligned\">\r\n                            <form className='ui form' onSubmit={this.submitHandle}\r\n                            // onSubmit={e => {\r\n                            //     e.preventDefault();\r\n                            //     upload({\r\n                            //         variables: {\r\n                            //             exame:\r\n                            //             {\r\n                            //                 exameFile: this.state.exameFile,\r\n                            //                 protocolo: this.state.protocolo,\r\n                            //                 dataExame: this.state.dataExame,\r\n                            //                 nome: this.state.nome,\r\n                            //                 possuiMarcapasso: this.state.possuiMarcapasso,\r\n                            //                 observacoes: this.state.observacoes\r\n                            //             }\r\n                            //         }\r\n                            //     }).catch(result => {\r\n                            //         console.log(result);\r\n                            //     });\r\n                            // }}\r\n                            >\r\n                                <div className='field'>\r\n                                    <i aria-hidden='true' className='upload huge icon' />\r\n                                </div>\r\n                                <div className='field upload'>\r\n                                    <input className=\"ui input\" type='file' required onChange={this.handleFile} />\r\n                                </div>\r\n                                <div className='fields'>\r\n                                    <div className='inline fluid field'>\r\n                                        <label>Protocolo:</label    >\r\n                                        <input type='text' name='protocolo' value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                    <div className='inline field'>\r\n                                        <label>Data Exame</label>\r\n                                        <input name='dataExame' type='date' value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className='field'>\r\n                                    <label>Nome</label>\r\n                                    <input className=\"ui input\" type='text' name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                                {/* <div className='ui segment'> */}\r\n                                <div className='field'>\r\n                                    <div className='ui fitted toggle checkbox'>\r\n                                        {/* <input id='marcapasso' name='marcapasso' type='checkbox' className='hidden' /> */}\r\n                                        <input type=\"checkbox\" readOnly=\"\" tabIndex=\"0\" name='possuiMarcapasso' value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                                        {/* <label>Possui Marca-passo?</label> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className='field'>\r\n                                    <label>Outras Observações:</label>\r\n                                    <textarea id='info' name='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                {/* </div> */}\r\n                                <div className='field'>\r\n                                    <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default () => (<SalvarExameContainer>{\r\n    (mutation, { ...props }) => <Upload mutation={mutation} {...props} />\r\n}</SalvarExameContainer>);","import React from \"react\";\r\nimport { Grid, Divider, Button, Portal, Modal } from \"semantic-ui-react\";\r\nimport Upload from \"../../Upload\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n        this.buttonClickHandle = this.buttonClickHandle.bind(this);\r\n    }\r\n\r\n    buttonClickHandle() {\r\n        console.log(this.state.isOpen);\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                {/* <Modal trigger={<Button onClick={this.buttonClickHandle}>CLick aqui</Button>}>\r\n                    <Modal.Content>\r\n                        <Upload />\r\n                    </Modal.Content>\r\n                </Modal> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Registries from \"./Modules/Registries\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\nimport Upload from \"./Modules/Upload\";\r\nimport Home from \"./Modules/Core/Home\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from 'react-router-dom'\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\n\r\nconst checkAuth = () => {\r\n    return Cookies.get('signedin') == 'true'\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isLoggedIn: checkAuth() };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({ isLoggedIn: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    {this.state.isLoggedIn && (<Menu>\r\n                        <Menu.Item>\r\n                            <Link to=\"/logoff\">Logoff</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <Link to=\"/upload\">Upload</Link>\r\n                        </Menu.Item>\r\n                    </Menu>)}\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        <PrivateRoute path='/upload' component={Upload} />\r\n                        <PrivateRoute path=\"/\" component={Registries} />\r\n\r\n                    </Switch>\r\n                </Router>\r\n                <Home/>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default App;","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst url = true ? \"https://laudos.herokuapp.com/graphql\" : \"http://localhost:3000/graphql\";\r\nconst httpClient = createUploadLink({ uri: url, credentials: 'include' });\r\n\r\nconst client = new ApolloClient({\r\n    //credentials: 'include',\r\n    link: httpClient,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nvar Client = () => (\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>\r\n)\r\n\r\nReactDom.render(<Client />, document.getElementById(\"root\"));"],"sourceRoot":""}