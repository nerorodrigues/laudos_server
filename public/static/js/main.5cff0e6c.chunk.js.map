{"version":3,"sources":["Lib/Authentication.js","Modules/Core/Login/index.js","Components/PrivateRoute/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","error","removeItem","Login","props","handleSubmit","bind","handleInputChange","state","duration","userName","password","isLogged","e","preventDefault","fetch","Enviroments","appUrl","method","credentials","headers","body","this","then","response","status","json","Error","Message","err","setState","data","setItem","componentCallback","catch","evt","target","value","type","checked","name","CheckAuth","to","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Transition","Group","animation","Form","size","onSubmit","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","required","Button","color","header","content","React","Component","component","rest","render","pathname","from","location","link","split","query","getMainDefinition","kind","operation","SubscriptionClient","wsUrl","reconnect","connectionParams","authToken","createUploadLink","uri","children","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","GraphQL","path","PrivateRoute","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.5cff0e6c.chunk.js","sourcesContent":["import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/login`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            ));\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n\r\nexport default ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport Enviroments from \"../Lib/enviroments.json\";\r\n\r\nconst httpClient = () => createUploadLink({\r\n    uri: `${Enviroments.appUrl}/graphql`, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(`${Enviroments.wsUrl}/subscriptions`, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({ children }) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\n// import Exames from \"./Modules/Exames\"\r\n// import ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\n// import Logoff from \"./Modules/Core/Logoff\";\r\n// import Home from \"./Modules/Core/Home\";\r\n// import TesteVisual from \"./testeVisual\";\r\nimport PrivateRoute from \"./Components/PrivateRoute\";\r\n// import PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isAuthenticated: checkAuth() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                {/* {this.state.isAuthenticated && (\r\n                        <div className='ui pointing secondary menu'>\r\n                            <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                            <NavLink className='item' exact to=\"/porcliente\">Por Cliente</NavLink>\r\n                            <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                            <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                            <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                        </div>)} */}\r\n                <GraphQL>\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        {/* <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} /> */}\r\n                        {/* <PrivateRoute path='/teste' component={TesteVisual} /> */}\r\n                        {/* <PrivateRoute path='/passwordchange' component={PasswordChange} /> */}\r\n                        {/* <PrivateRoute path=\"/porcliente\" component={ExamesPorCliente} /> */}\r\n                        {/* <PrivateRoute path=\"/\" component={Exames} /> */}\r\n                        <PrivateRoute path='/'>\r\n                            <div>Nero</div>\r\n                        </PrivateRoute>\r\n                    </Switch>\r\n                </GraphQL>\r\n            </Router>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}