{"version":3,"sources":["Graphql/containers/Queries/Exame/listarExames.js","Components/DragAndDropUpload/index.js","Graphql/containers/Mutations/Exame/salvarExame.js","Modules/Forms/CadastrarExame/index.js","Graphql/containers/Subscriptions/Exame/exameSalvo.js","Components/CardList/index.js","Lib/classNameBuilders.js","Components/List/ListItem.js","Components/List/index.js","Modules/Exames/index.js","Lib/Authentication.js","Modules/Core/Login/index.js","Modules/Core/Logoff/index.js","Components/PrivateRoute/index.js","Modules/Core/PasswordChange/index.js","Lib/GraphQL.js","App.js","index.js"],"names":["LISTAR_EXAMES","gql","children","query","DragAndDropUpload","props","dragHandler","bind","onChangeHandler","state","filename","isOver","e","preventDefault","stopPropagation","console","log","type","this","setState","dataTransfer","items","length","file","files","updateFile","target","name","onChange","className","onDrag","onDragStart","onDragEnd","onDragOver","onDragEnter","onDragLeave","onDrop","aria-hidden","id","multiple","required","htmlFor","React","Component","EXAME_SCHEMA","SalvarExameContainer","useMutation","FormCadastrarExame","handleFile","handleInputChange","submitHandle","nome","protocolo","dataExame","possuiMarcapasso","observacoes","exameFile","processando","validity","FileReader","fr","onloadend","readAsDataURL","evt","value","checked","mutation","variables","exame","then","result","onSubmited","status","data","salvarExame","message","catch","error","onSubmit","tabIndex","rows","EXAME_SALVO_SUBSCRIPTION","CardItem","key","dataCadastro","laudoUrl","href","exameUrl","CardList","TransitionGroup","duration","map","item","useKeyOnly","val","ListItem","onClickHandler","elm","onSelect","active","classes","cx","role","onClick","List","onSelectionChangeHandler","selectedValue","selectValue","selectedItem","onSelectionChanged","size","animated","divided","relaxed","selection","child","cloneElement","Item","Registries","buttonClickHandler","cadastrarExameCloseHandler","modoExibicao","filtrar","cadastroFinalizadoHandler","isCadastrarExameOpen","isCadastroFinalizadoModalOpen","exibicaoTabela","filter","cadastraExameResult","subscribeToMore","document","updateQuery","prev","subscriptionData","newlaudo","laudoSalvo","listarExames","find","msg","Object","assign","isTabela","elemento","match","loading","resultList","Menu","placeholder","Modal","onClose","open","Header","icon","content","Content","secret","process","PUBLIC_KEY","jsonWebTokenOptions","algorithm","issuer","checkAuth","token","localStorage","getItem","JSONWebToken","verify","removeItem","Login","handleSubmit","userName","password","isLogged","fetch","Enviroments","appUrl","method","credentials","headers","body","response","json","Error","Message","err","setItem","componentCallback","CheckAuth","to","Grid","textAlign","verticalAlign","style","height","Column","maxWidth","Transition","Group","animation","Form","Segment","Input","fluid","iconPosition","Button","color","header","Logoff","component","rest","render","pathname","from","location","PasswordChange","oldPassword","newPassword","user","readOnly","link","split","getMainDefinition","kind","operation","SubscriptionClient","wsUrl","reconnect","connectionParams","authToken","createUploadLink","uri","client","ApolloClient","cache","InMemoryCache","App","isAuthenticated","GraphQL","path","PrivateRoute","Exames","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.bc71db9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from 'react-apollo';\r\n\r\nconst LISTAR_EXAMES = gql`\r\n    query listarExames{\r\n        listarExames{\r\n            id,\r\n            protocolo,\r\n            dataExame,\r\n            nome,\r\n            dataCadastro,\r\n            exameUrl,\r\n            laudoUrl\r\n        }\r\n    }\r\n`\r\n\r\nexport default ({ children }) => <Query query={LISTAR_EXAMES}>{children}</Query>","import React from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nexport default class DragAndDropUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragHandler = this.dragHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.state = {\r\n            filename: '',\r\n            isOver: false\r\n        }\r\n    }\r\n\r\n    dragHandler(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(e.type)\r\n        if (e.type === 'drop' || e.type === 'dragleave')\r\n            this.setState({ isOver: false })\r\n        else\r\n            this.setState({ isOver: true })\r\n        if (e.type === 'drop' && e.dataTransfer.items.length === 1) {\r\n            var file = e.dataTransfer.files[0];\r\n            if (file)\r\n                this.updateFile(file);\r\n        }\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.setState({\r\n            filename: e.target.files[0].name\r\n        });\r\n        if (this.props.onChange)\r\n            this.props.onChange(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isOver ? 'upload-box has-advanced-upload is-dragover' : 'upload-box has-advanced-upload'}\r\n                onDrag={this.dragHandler}\r\n                onDragStart={this.dragHandler}\r\n                onDragEnd={this.dragHandler}\r\n                onDragOver={this.dragHandler}\r\n                onDragEnter={this.dragHandler}\r\n                onDragLeave={this.dragHandler}\r\n                onDrop={this.dragHandler}>\r\n                <i aria-hidden='true' className='huge upload icon'></i>\r\n                <div>\r\n                    <input id='file' type='file' multiple={false} required onChange={this.onChangeHandler} />\r\n                    <label htmlFor='file'>{\r\n                        this.state.filename ?\r\n                            (this.state.filename) :\r\n                            (<div>\r\n                                <strong>Selecione um arquivo</strong>\r\n                                <span> ou solte o aqui</span>\r\n                            </div>)\r\n                    }</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import gql from \"graphql-tag\";\r\nimport { useMutation } from \"react-apollo\";\r\n\r\nvar EXAME_SCHEMA = gql(`\r\n    mutation salvarExame($exame: ExameInput!){\r\n        salvarExame(exame: $exame){\r\n            id,\r\n            protocolo,\r\n            nome,\r\n            dataExame\r\n        }\r\n    }\r\n`);\r\n\r\nconst SalvarExameContainer = ({ children }) => {\r\n    const [mutation, data] = useMutation(EXAME_SCHEMA)\r\n    return children(mutation, data);\r\n}\r\n\r\nexport default SalvarExameContainer ;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport DragAndDropUpload from \"../../../Components/DragAndDropUpload\";\r\nimport SalvarExameContainer from \"../../../Graphql/containers/Mutations/Exame/salvarExame\";\r\n\r\nclass FormCadastrarExame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleFile = this.handleFile.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.state = {\r\n            nome: '',\r\n            protocolo: '',\r\n            dataExame: '',\r\n            possuiMarcapasso: false,\r\n            observacoes: '',\r\n            exameFile: null,\r\n            processando: false\r\n        }\r\n    }\r\n\r\n    handleFile({ target: { validity, files: [file] } }) {\r\n        if (FileReader && file) {\r\n            var fr = new FileReader();\r\n            fr.onloadend = () => {\r\n                this.setState({\r\n                    exameFile: file,\r\n                });\r\n            };\r\n            if (fr)\r\n                fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitHandle(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            processando: true\r\n        });\r\n        this.props.mutation({\r\n            variables: {\r\n                exame:\r\n                {\r\n                    exameFile: this.state.exameFile,\r\n                    protocolo: this.state.protocolo,\r\n                    dataExame: this.state.dataExame,\r\n                    nome: this.state.nome,\r\n                    possuiMarcapasso: this.state.possuiMarcapasso,\r\n                    observacoes: this.state.observacoes\r\n                }\r\n            }\r\n        }).then((result) => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: result.data.salvarExame,\r\n                    message: `Novo cadastro de exame para ${this.state.nome} finalizado com sucesso.`\r\n                });\r\n        }).catch(error => {\r\n            if (this.props.onSubmited)\r\n                this.props.onSubmited({\r\n                    status: 'Sucesso',\r\n                    result: error,\r\n                    message: 'Ocorreu um erro ao realizar o cadastro do exame.'\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className='ui form dimmable' onSubmit={this.submitHandle}>\r\n                    <div className={`ui inverted dimmer ${this.state.processando ? 'active' : ''}`}>\r\n                        <div className='content'>\r\n                            <div className='ui text loader'>Salvando Registro</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <DragAndDropUpload onChange={this.handleFile} />\r\n                    </div>\r\n                    <div className='fields'>\r\n                        <div className='inline fluid field'>\r\n                            <label>Protocolo:</label    >\r\n                            <input type='text' name='protocolo' required value={this.state.protocolo} onChange={this.handleInputChange} />\r\n                        </div>\r\n                        <div className='inline field'>\r\n                            <label>Data Exame</label>\r\n                            <input name='dataExame' type='date' required value={this.state.dataExame} onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Nome</label>\r\n                        <input className=\"ui input\" type='text' required name='nome' value={this.state.nome} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <h3 className='ui dividing header'>Informações Opcionais</h3>\r\n                    <div className='field'>\r\n                        <div className=\"ui toggle checkbox\">\r\n                            <input type=\"checkbox\" tabIndex=\"0\" value={this.state.possuiMarcapasso} onChange={this.handleInputChange} />\r\n                            <label>Possui Marca-passo?</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label>Outras Observações:</label>\r\n                        <textarea id='info' rows='5' name='observacoes' value={this.state.observacoes} onChange={this.handleInputChange} />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <input type='submit' className='ui fluid green button' value='Cadastrar' />\r\n                    </div>\r\n                </form>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ({ onSubmited }) => (<SalvarExameContainer>{(mutation, { ...props }) => <FormCadastrarExame onSubmited={onSubmited} mutation={mutation} {...props} />}</SalvarExameContainer>);","import gql from \"graphql-tag\";\r\n\r\nexport const EXAME_SALVO_SUBSCRIPTION = gql`\r\n    subscription onLaudoSalvo($id: ID){\r\n        laudoSalvo(id: $id){\r\n            id,\r\n            nome,\r\n            protocolo,\r\n            dataExame\r\n            dataCadastro,\r\n            exameUrl,\r\n            laudoUrl\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport { TransitionGroup } from \"semantic-ui-react\";\r\nimport './index.css';\r\nexport class CardItem extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.data.id} className='ui yellow card fade left'>\r\n                <div className='content'>\r\n                    <div className='header'>\r\n                        <div className='light label inline'>\r\n                            <label>Protocolo:</label>\r\n                            <div>{this.props.data.protocolo}</div>\r\n                        </div>\r\n                        <div className='label inline'>\r\n                            {this.props.data.nome}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='meta'>\r\n                        <div className='ui ribbon label'>{`Cadastro Realizado em ${this.props.data.dataCadastro}`}</div>\r\n                    </div>\r\n                    <div className='description bottom'>\r\n                        {\r\n                            this.props.laudoUrl ? <a href={this.props.laudoUrl}>Baixar Laudo</a> : <a href={this.props.exameUrl}>Baixar Exame</a>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='extra content'>\r\n                    <button className='ui primary small button btn-default'>Ver</button>\r\n                    <button className='ui small button btn-default'>Remover</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default class CardList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='ui doubling four stackable tiny cards'>\r\n                <TransitionGroup\r\n                    duration={500}>\r\n                    {this.props.data.map(item => (\r\n                        <CardItem key={item.id} data={item} />\r\n                    ))}\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","export const useKeyOnly = (val,key)=> val && key;","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport { useKeyOnly } from \"../../Lib/classNameBuilders\";\r\n\r\nexport default class ListItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n\r\n        this.state = {\r\n            className: '',\r\n        }\r\n    }\r\n\r\n    onClickHandler(elm) {\r\n        if (this.props.onSelect && this.props.data)\r\n            this.props.onSelect(this.props.data);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            active,\r\n            className\r\n        } = this.props;\r\n\r\n        const classes = cx(\r\n            'item',\r\n            useKeyOnly(active, 'active'),\r\n            className\r\n        )\r\n\r\n        return (\r\n            <div role='listitem' className={classes} onClick={this.onClickHandler}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport { useKeyOnly } from \"../../Lib/classNameBuilders\";\r\nimport CONSTANTS from \"../../Lib\";\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.array.isRequired,\r\n        selectionChanged: PropTypes.func,\r\n        selectedValue: PropTypes.string,\r\n        size: PropTypes.oneOf(CONSTANTS.SIZE),\r\n        relaxed: PropTypes.bool,\r\n        animated: PropTypes.bool,\r\n        divided: PropTypes.bool,\r\n        selection: PropTypes.bool,\r\n        className: PropTypes.string\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSelectionChangeHandler = this.onSelectionChangeHandler.bind(this);\r\n        this.state = {\r\n            selectedValue: this.props.selectValue\r\n        }\r\n    }\r\n\r\n    onSelectionChangeHandler(selectedItem) {\r\n        this.setState({ selectedValue: selectedItem.id });\r\n        if (this.props.onSelectionChanged)\r\n            this.props.onSelectionChanged(selectedItem)\r\n    }\r\n\r\n    static Item = ListItem\r\n\r\n    render() {\r\n        const {\r\n            size,\r\n            className,\r\n            animated,\r\n            divided,\r\n            relaxed,\r\n            selection,\r\n        } = this.props\r\n\r\n        var classes = cx(\r\n            'ui',\r\n            useKeyOnly(animated, 'animated'),\r\n            useKeyOnly(divided, 'divided'),\r\n            useKeyOnly(relaxed, 'relaxed'),\r\n            useKeyOnly(selection, 'selection'),\r\n            size,\r\n            'list',\r\n            className\r\n        )\r\n\r\n        var children = this.props.children;\r\n        children = children.map(child => {\r\n            return React.cloneElement(child, {\r\n                active: child.props.data.id === this.state?.selectedValue ?? false,\r\n                onSelect: this.onSelectionChangeHandler\r\n            })\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div role='list' className={classes} >\r\n                    {children}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport ListarExamesContainer from \"../../Graphql/containers/Queries/Exame/listarExames\";\r\nimport { Modal, Header, Menu } from \"semantic-ui-react\";\r\nimport FormCadastrarExame from \"../Forms/CadastrarExame\";\r\nimport './examesList.css'\r\nimport { EXAME_SALVO_SUBSCRIPTION } from \"../../Graphql/containers/Subscriptions/Exame/exameSalvo\";\r\nimport CardList from \"../../Components/CardList\";\r\nimport List from \"../../Components/List\";\r\n\r\nclass Registries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonClickHandler = this.buttonClickHandler.bind(this);\r\n        this.cadastrarExameCloseHandler = this.cadastrarExameCloseHandler.bind(this);\r\n        this.modoExibicao = this.modoExibicao.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.filtrar = this.filtrar.bind(this);\r\n        this.submitHandle = this.submitHandle.bind(this);\r\n        this.cadastroFinalizadoHandler = this.cadastroFinalizadoHandler.bind(this);\r\n        this.state = {\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: false,\r\n            exibicaoTabela: true,\r\n            filter: '',\r\n            cadastraExameResult: null\r\n        };\r\n\r\n        this.props.subscribeToMore({\r\n            document: EXAME_SALVO_SUBSCRIPTION,\r\n            variables: { id: 1 },//props.match.params.ID\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                if (!subscriptionData.data)\r\n                    return prev;\r\n                const newlaudo = subscriptionData.data.laudoSalvo;\r\n                if (!prev.listarExames.find((msg) => msg.id === newlaudo.id)) {\r\n                    return Object.assign({}, prev, {\r\n                        listarExames: Object.assign([], prev.listarExames, [...prev.listarExames, newlaudo])\r\n                    });\r\n                } else\r\n                    return prev;\r\n            }\r\n        });\r\n    }\r\n\r\n    buttonClickHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: !this.state.isCadastrarExameOpen\r\n        });\r\n    }\r\n    cadastrarExameCloseHandler() {\r\n        this.setState({\r\n            isCadastrarExameOpen: false\r\n        });\r\n    }\r\n\r\n    modoExibicao(isTabela) {\r\n        this.setState({\r\n            exibicaoTabela: isTabela\r\n        });\r\n    }\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    filtrar(elemento) {\r\n        var result = elemento.protocolo.match(this.state.filter) || elemento.nome.match(this.state.filter);\r\n        return result;\r\n    }\r\n\r\n    submitHandle(result) {\r\n        this.setState({\r\n            isCadastrarExameOpen: false,\r\n            isCadastroFinalizadoModalOpen: true,\r\n            cadastraExameResult: result\r\n        });\r\n    }\r\n\r\n    cadastroFinalizadoHandler() {\r\n        this.setState({\r\n            isCadastroFinalizadoModalOpen: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return <div>Loading...</div>\r\n        else if (this.props.error)\r\n            return <div>Erro...</div>\r\n\r\n        var resultList = this.props.data.listarExames\r\n        if (this.state.filter)\r\n            resultList = this.resultList.filter(this.filtrar);\r\n\r\n        return (\r\n            <div>\r\n                <div className='ui menu'>\r\n                    <a className=\"item\" onClick={this.buttonClickHandler}>\r\n                        <i aria-hidden=\"true\" className=\"add icon\"></i>\r\n                        Novo Exame\r\n                    </a>\r\n                    <div className='right menu'>\r\n                        <Menu.Item active={!this.state.exibicaoTabela} onClick={() => this.modoExibicao(false)}>\r\n                            <i aria-hidden='true' className='icon list' />\r\n                        </Menu.Item>\r\n                        <Menu.Item active={this.state.exibicaoTabela} onClick={() => this.modoExibicao(true)}>\r\n                            <i aria-hidden='true' className='icon th' />\r\n                        </Menu.Item>\r\n                        <div className='item'>\r\n                            <div className='ui icon input'>\r\n                                <input type='text' placeholder='Filtro' name='filter' value={this.state.filter} onChange={this.handleInputChange} />\r\n                                <i aria-hidden='true' className='search icon' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='ui segment'>\r\n                    <div>Total de Registros: {this.props.data.listarExames.length}</div>\r\n                    <div className='tabelaContainer'>\r\n                        {this.state.exibicaoTabela? <CardList data={resultList} /> : <List data={resultList} />}\r\n                    </div>\r\n                </div>\r\n                <Modal onClose={this.cadastrarExameCloseHandler} open={this.state.isCadastrarExameOpen}>\r\n                    <Header icon='upload' content=\"Cadastrar novo exame\" />\r\n                    <Modal.Content>\r\n                        <FormCadastrarExame onSubmited={this.submitHandle} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <Modal onClose={this.cadastroFinalizadoHandler} open={this.state.isCadastroFinalizadoModalOpen}>\r\n                    <Header icon={this.state?.cadastraExameResult?.status === 'Sucesso' ? 'green icon check' : 'red icon thumbs down'}></Header>\r\n                    <Modal.Content>\r\n                        <div>\r\n                            {this.state.cadastraExameResult?.message}\r\n                        </div>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => (<ListarExamesContainer>{({ ...props }) => <Registries {...props} />}</ListarExamesContainer>)\r\n","import JSONWebToken from \"jsonwebtoken\";\r\n\r\nconst secret = process.env.PUBLIC_KEY || `-----BEGIN PUBLIC KEY-----\r\nMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALns1DW2lVs/Cjk9nVxBzG8Gn0QIF8wH\r\n1LotLwuOk+lgVXZiXzkbMXxDzj3rEP0aVY0ATtqWxWcjurJXwqViLF0CAwEAAQ==\r\n-----END PUBLIC KEY-----`;\r\n\r\nconst jsonWebTokenOptions = {\r\n    algorithm: 'RS256',\r\n    issuer: 'laudos',\r\n};\r\n\r\nexport default function checkAuth() {\r\n    var token = localStorage.getItem('AuthToken');\r\n    if (!token)\r\n        return false;\r\n    try {\r\n        return JSONWebToken.verify(token, secret, jsonWebTokenOptions);\r\n    } catch (error) {\r\n        if (token)\r\n            localStorage.removeItem('AuthToken');\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CheckAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            userName: '',\r\n            password: '',\r\n            isLogged: false\r\n        };\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/login`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                },\r\n                body: `userName=${this.state.userName}&password=${this.state.password}`\r\n            }).then(response => {\r\n                if (response.status === 200)\r\n                    return response.json()\r\n                else\r\n                    throw new Error(response.Message)\r\n            }, err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n                return err;\r\n            })\r\n            .then(data => {\r\n                this.setState({ isLogged: true });\r\n                localStorage.setItem('AuthToken', data.token)\r\n                this.props.componentCallback(true);\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            CheckAuth() || this.state.isLogged ? (<Redirect to='/' />) : (\r\n                <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                        <Transition.Group animation='fade up' duration={800}>\r\n                            <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                                <Segment>\r\n                                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' name='userName' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                    <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Password' type='password' name='password' value={this.state.password} onChange={this.handleInputChange} />\r\n                                    <Button color='teal' fluid size='large'>Login</Button>\r\n                                    < Message error header='Error ao realizar login' content={this.state.error} />\r\n                                </Segment>\r\n                            </Form>\r\n                        </Transition.Group>\r\n                    </Grid.Column >\r\n                </Grid >\r\n            ));\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Logoff extends React.Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem('AuthToken')\r\n        this.props.componentCallback(false);\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/login' />);\r\n    }\r\n}\r\n\r\nexport default Logoff;","import React from \"react\";\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport checkAuth from \"../../Lib/Authentication\";\r\n\r\nexport default ({ component: Component, componentCallback, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props =>\r\n            checkAuth() ? (\r\n                <Component {...props} componentCallback={componentCallback} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);","import React from \"react\";\r\nimport { Grid, Segment, Form, Button, Message, Transition } from \"semantic-ui-react\";\r\nimport checkAuth from \"../../../Lib/Authentication\";\r\nimport Enviroments from \"../../../Lib/enviroments.json\";\r\n\r\nclass PasswordChange extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            error: false,\r\n            duration: 800,\r\n            oldPassword: '',\r\n            newPassword: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            var user = checkAuth();\r\n            this.setState({\r\n                userName: user.userName\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`${Enviroments.appUrl}/changepassword`,\r\n            {\r\n                method: 'post',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n                    'authorization': localStorage.getItem('AuthToken')\r\n                },\r\n                body: `oldPassword=${this.state.oldPassword}&newPassword=${this.state.newPassword}`\r\n            }).then(response => {\r\n                if (response.status !== 200)\r\n                    throw new Error(response.Message)\r\n            }).catch(err => {\r\n                this.setState({\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    handleInputChange(evt) {\r\n        var target = evt.target;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <Transition.Group animation='fade up' duration={800}>\r\n                        <Form error={this.state.error} size=\"large\" onSubmit={this.handleSubmit}>\r\n                            <Segment>\r\n                                <Form.Input fluid icon='user' iconPosition='left' readOnly type='text' name='user' value={this.state.userName} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Senha atual' type='password' name='oldPassword' value={this.state.oldPassword} onChange={this.handleInputChange} />\r\n                                <Form.Input fluid icon='lock' iconPosition='left' required placeholder='Nova senha' type='password' name='newPassword' value={this.state.newPassword} onChange={this.handleInputChange} />\r\n                                <Button color='teal' fluid size='large'>Alterar Senha</Button>\r\n                                < Message error header='Error ao realizar login' content={this.state.error} />\r\n                            </Segment>\r\n                        </Form>\r\n                    </Transition.Group>\r\n                </Grid.Column >\r\n            </Grid >\r\n        )\r\n    }\r\n}\r\nexport default PasswordChange;","import React from \"react\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { split } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport Enviroments from \"../Lib/enviroments.json\";\r\n\r\nconst httpClient = () => createUploadLink({\r\n    uri: `${Enviroments.appUrl}/graphql`, credentials: 'include', headers: {\r\n        'authorization': localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\nconst wsLink = () => new SubscriptionClient(`${Enviroments.wsUrl}/subscriptions`, {\r\n    reconnect: true,\r\n    connectionParams: {\r\n        authToken: localStorage.getItem('AuthToken') || ''\r\n    }\r\n});\r\n\r\nconst link = () => split(\r\n    ({ query }) => {\r\n        const { kind, operation } = getMainDefinition(query);\r\n        return kind === 'OperationDefinition' && operation === 'subscription';\r\n    }, wsLink(), httpClient()\r\n);\r\n\r\nconst cliente = () => new ApolloClient({\r\n    link: link(),\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default ({ children }) => (\r\n    <ApolloProvider client={cliente()}>\r\n        {children}\r\n    </ApolloProvider>\r\n);\r\n","import React from \"react\";\r\n import Exames from \"./Modules/Exames\"\r\n// import ExamesPorCliente from \"./Modules/ExamesPorCliente\"\r\nimport Login from \"./Modules/Core/Login\";\r\nimport Logoff from \"./Modules/Core/Logoff\";\r\n// import Home from \"./Modules/Core/Home\";\r\n// import TesteVisual from \"./testeVisual\";\r\nimport PrivateRoute from \"./Components/PrivateRoute\";\r\nimport PasswordChange from \"./Modules/Core/PasswordChange\";\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from 'react-router-dom'\r\nimport GraphQL from \"./Lib/GraphQL\";\r\nimport checkAuth from \"./Lib/Authentication\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false };\r\n        this.componentCallback = this.componentCallback.bind(this);\r\n    }\r\n\r\n    componentCallback(value) {\r\n        this.setState({\r\n            isAuthenticated: checkAuth()\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isAuthenticated: checkAuth() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                {/* {this.state.isAuthenticated && (\r\n                        <div className='ui pointing secondary menu'>\r\n                            <NavLink className='item' exact to=\"/\">Home</NavLink>\r\n                            <NavLink className='item' exact to=\"/porcliente\">Por Cliente</NavLink>\r\n                            <NavLink className='item' to=\"/teste\">Testes</NavLink>\r\n                            <NavLink className='item' to=\"/passwordchange\">Alterar senha</NavLink>\r\n                            <NavLink className='item' to=\"/logoff\">Logoff</NavLink>\r\n\r\n                        </div>)} */}\r\n                <GraphQL>\r\n                    <Switch>\r\n                        <Route path='/login'>\r\n                            <Login componentCallback={this.componentCallback} />\r\n                        </Route>\r\n                        <PrivateRoute path='/logoff' component={Logoff} componentCallback={this.componentCallback} />\r\n                        {/* <PrivateRoute path='/teste' component={TesteVisual} /> */}\r\n                        <PrivateRoute path='/passwordchange' component={PasswordChange} />\r\n                        {/* <PrivateRoute path=\"/porcliente\" component={ExamesPorCliente} /> */}\r\n                        <PrivateRoute path=\"/\" component={Exames} />\r\n                    </Switch>\r\n                </GraphQL>\r\n            </Router>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import 'semantic-ui-css/semantic.min.css'\r\nimport React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}