scalar Date
scalar FileUpload
input ExameInput{
    protocolo: String!
    nome: String!
    dataExame: Date!
    possuiMarcapasso: Boolean
    observacoes: String
    exameFile: FileUpload!
}

type Exame{
    id:ID!
    protocolo: String!
    nome: String!
    dataExame: Date!
    dataCadastro: Date,
    url: String,
    possuiMarcapasso: Boolean,
    status: ExamsStatus,
    observacoes: String
}

input ExamQuery{
    status: [ExamsStatus],
    examDate: Date,
    protocolNumber: String,
    name: String,
}

input ExamByCompanyQuery {
    status: ExamsStatus,
    dataExame: Date,
    protocolo: String,
    companyId: ID
}

type Query{
    listarExames(filter: ExamQuery): [Exame] @isLoggedIn(role: "LISTAR_EXAME")
    listarExamesPorCliente(filter: ExamByCompanyQuery): [Exame] @isLoggedIn(role:"LISTAR_EXAME", schema:"ADMIN")
}

input ExamResultInput{
    examResultFile: FileUpload!
    examId: ID!
}

type Mutation{
    salvarExame(exame: ExameInput!): Exame! @isLoggedIn(role: "CADASTRAR_EXAME")
    saveExamResult(examResult: ExamResultInput!): String! @isLoggedIn(role: "CADASTRAR_LAUDO")
}

type Subscription{
    savedExam(id: ID): Exame!
}
